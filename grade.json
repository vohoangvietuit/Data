{
    "openapi": "3.0.0",
    "info": {
        "title": "Grades Microservice",
        "description": "Grades Microservice APIs",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8087",
            "description": "dev server"
        },
        {
            "url": "https://grades-apple-pub.kss-dev.kapintdc.com",
            "description": "Apple server"
        },
        {
            "url": "https://grades-carrot-pub.kss-dev.kapintdc.com",
            "description": "Carrot server"
        },
        {
            "url": "https://grades-banana-pub.kss-dev.kapintdc.com",
            "description": "Banana server"
        },
        {
            "url": "https://grades.kss-uat.kapintdc.com",
            "description": "UAT server"
        }
    ],
    "paths": {
        "/api/v1/english-exit-exemptions": {
            "get": {
                "tags": [
                    "EnglishExitExemption"
                ],
                "summary": "English Exit Exemption Index API (kss_english_exit_exemption)",
                "description": "Get List of English Exit Exemption Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EnglishExitExemption** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": "494"
                                },
                                "exemption_reason_id": {
                                    "type": "integer",
                                    "example": "110"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **EnglishExitExemption** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **EnglishExitExemption** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **EnglishExitExemption**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, enrolment_id, moduleOutcomes.id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of English Exit Exemption records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EnglishExitExemption"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EnglishExitExemption"
                ],
                "summary": "English Exit Exemption Create API (kss_english_exit_exemption)",
                "description": "Create a specific English Exit Exemption and related object",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "student_id": {
                                        "type": "string"
                                    },
                                    "exam_required": {
                                        "type": "integer"
                                    },
                                    "exemption_reason_id": {
                                        "type": "integer"
                                    },
                                    "elt_type": {
                                        "type": "string"
                                    },
                                    "elt_qualification": {
                                        "type": "string"
                                    },
                                    "program_intake_module_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "moduleOutcomes": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "module_instance_student_id": {
                                                    "type": "integer"
                                                },
                                                "raw_module_score": {
                                                    "type": "number"
                                                },
                                                "raw_stage_score": {
                                                    "type": "number"
                                                },
                                                "rounded_module_score": {
                                                    "type": "integer"
                                                },
                                                "weighted_module_score": {
                                                    "type": "number"
                                                },
                                                "module_outcome": {
                                                    "type": "string"
                                                },
                                                "overall_score": {
                                                    "type": "number"
                                                },
                                                "overall_score_label": {
                                                    "type": "string"
                                                },
                                                "speaking_score": {
                                                    "type": "number"
                                                },
                                                "speaking_score_label": {
                                                    "type": "string"
                                                },
                                                "reading_score": {
                                                    "type": "number"
                                                },
                                                "reading_score_label": {
                                                    "type": "string"
                                                },
                                                "writing_score": {
                                                    "type": "number"
                                                },
                                                "writing_score_label": {
                                                    "type": "string"
                                                },
                                                "listening_score": {
                                                    "type": "number"
                                                },
                                                "listening_score_label": {
                                                    "type": "string"
                                                },
                                                "module_attempt": {
                                                    "type": "integer"
                                                },
                                                "overall_score_str": {
                                                    "type": "string"
                                                },
                                                "speaking_score_str": {
                                                    "type": "string"
                                                },
                                                "reading_score_str": {
                                                    "type": "string"
                                                },
                                                "writing_score_str": {
                                                    "type": "string"
                                                },
                                                "listening_score_str": {
                                                    "type": "string"
                                                },
                                                "moduleOutcomeHistories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "assessment_history_id": {
                                                                "type": "integer"
                                                            },
                                                            "score": {
                                                                "type": "number"
                                                            },
                                                            "notes": {
                                                                "type": "string"
                                                            },
                                                            "status_id": {
                                                                "type": "number"
                                                            },
                                                            "deleted": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "English Exit Exemption object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "student_id": {
                                            "type": "string"
                                        },
                                        "exam_required": {
                                            "type": "integer"
                                        },
                                        "exemption_reason_id": {
                                            "type": "integer"
                                        },
                                        "elt_type": {
                                            "type": "string"
                                        },
                                        "elt_qualification": {
                                            "type": "string"
                                        },
                                        "program_intake_module_id": {
                                            "type": "integer"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/english-exit-exemptions/{id}": {
            "get": {
                "tags": [
                    "EnglishExitExemption"
                ],
                "summary": "English Exit Exemption View API (kss_english_exit_exemption)",
                "description": "Get A Specific English Exit Exemption Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the English Exit Exemption record (kss_english_exit_exemption.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **EnglishExitExemption** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **EnglishExitExemption**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, enrolment_id, moduleOutcomes.id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "English Exit Exemption object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnglishExitExemption"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EnglishExitExemption"
                ],
                "summary": "English Exit Exemption Update API (kss_english_exit_exemption)",
                "description": "Update a specific English Exit Exemption and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the English Exit Exemption record (kss_english_exit_exemption.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "student_id": {
                                        "type": "string"
                                    },
                                    "exam_required": {
                                        "type": "integer"
                                    },
                                    "exemption_reason_id": {
                                        "type": "integer"
                                    },
                                    "elt_type": {
                                        "type": "string"
                                    },
                                    "elt_qualification": {
                                        "type": "string"
                                    },
                                    "program_intake_module_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "moduleOutcomes": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "module_instance_student_id": {
                                                    "type": "integer"
                                                },
                                                "raw_module_score": {
                                                    "type": "number"
                                                },
                                                "raw_stage_score": {
                                                    "type": "number"
                                                },
                                                "rounded_module_score": {
                                                    "type": "integer"
                                                },
                                                "weighted_module_score": {
                                                    "type": "number"
                                                },
                                                "module_outcome": {
                                                    "type": "string"
                                                },
                                                "overall_score": {
                                                    "type": "number"
                                                },
                                                "overall_score_label": {
                                                    "type": "string"
                                                },
                                                "speaking_score": {
                                                    "type": "number"
                                                },
                                                "speaking_score_label": {
                                                    "type": "string"
                                                },
                                                "reading_score": {
                                                    "type": "number"
                                                },
                                                "reading_score_label": {
                                                    "type": "string"
                                                },
                                                "writing_score": {
                                                    "type": "number"
                                                },
                                                "writing_score_label": {
                                                    "type": "string"
                                                },
                                                "listening_score": {
                                                    "type": "number"
                                                },
                                                "listening_score_label": {
                                                    "type": "string"
                                                },
                                                "module_attempt": {
                                                    "type": "integer"
                                                },
                                                "overall_score_str": {
                                                    "type": "string"
                                                },
                                                "speaking_score_str": {
                                                    "type": "string"
                                                },
                                                "reading_score_str": {
                                                    "type": "string"
                                                },
                                                "writing_score_str": {
                                                    "type": "string"
                                                },
                                                "listening_score_str": {
                                                    "type": "string"
                                                },
                                                "moduleOutcomeHistories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "assessment_history_id": {
                                                                "type": "integer"
                                                            },
                                                            "score": {
                                                                "type": "number"
                                                            },
                                                            "notes": {
                                                                "type": "string"
                                                            },
                                                            "status_id": {
                                                                "type": "number"
                                                            },
                                                            "deleted": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "English Exit Exemption object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "student_id": {
                                            "type": "string"
                                        },
                                        "exam_required": {
                                            "type": "integer"
                                        },
                                        "exemption_reason_id": {
                                            "type": "integer"
                                        },
                                        "elt_type": {
                                            "type": "string"
                                        },
                                        "elt_qualification": {
                                            "type": "string"
                                        },
                                        "program_intake_module_id": {
                                            "type": "integer"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EnglishExitExemption"
                ],
                "summary": "English Exit Exemption Delete API (kss_english_exit_exemption)",
                "description": "Delete a specific English Exit Exemption",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_english_exit_exemption.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances/check-assessment-editable/{id}": {
            "get": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Module Instance Check Assessments Editable API",
                "description": "Check if assessments in a specific module instance can be editable",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance record (kss_module_instance.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students/bulk-create-assessment": {
            "post": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student Bulk Create Assessment API",
                "description": "Create Assessment Grades for some specific records",
                "requestBody": {
                    "description": "Payload object to create assessment grades",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "moduleOutcomes": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "studentModuleAssessments": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 9711
                                                                },
                                                                "module_instance_assessment_id": {
                                                                    "type": "integer",
                                                                    "example": 9396
                                                                },
                                                                "module_instance_student_id": {
                                                                    "type": "integer",
                                                                    "example": 4810
                                                                },
                                                                "module_outcome_id": {
                                                                    "type": "integer",
                                                                    "example": 5444
                                                                },
                                                                "weighting": {
                                                                    "type": "integer",
                                                                    "example": 100
                                                                },
                                                                "assessment_score": {
                                                                    "type": "integer",
                                                                    "example": 70
                                                                },
                                                                "weighted_assessment_score": {
                                                                    "type": "integer",
                                                                    "example": null
                                                                },
                                                                "assessment_outcome": {
                                                                    "type": "integer",
                                                                    "example": null
                                                                },
                                                                "notes": {
                                                                    "type": "string",
                                                                    "example": null
                                                                },
                                                                "tutor_confirmed": {
                                                                    "type": "integer",
                                                                    "example": null
                                                                },
                                                                "reassessment": {
                                                                    "type": "boolean",
                                                                    "example": false
                                                                },
                                                                "reason_id": {
                                                                    "type": "integer",
                                                                    "example": null
                                                                },
                                                                "attempt": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "aff_document": {
                                                                    "type": "string",
                                                                    "example": null
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "True/false",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students/bulk-update-assessment": {
            "put": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student Bulk Create Assessment API",
                "description": "Update Assessment Grades for some specific records",
                "requestBody": {
                    "description": "Payload object to update assessment grades",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "moduleOutcomes": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "studentModuleAssessments": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 9711
                                                                },
                                                                "module_instance_assessment_id": {
                                                                    "type": "integer",
                                                                    "example": 9396
                                                                },
                                                                "module_instance_student_id": {
                                                                    "type": "integer",
                                                                    "example": 4810
                                                                },
                                                                "module_outcome_id": {
                                                                    "type": "integer",
                                                                    "example": 5444
                                                                },
                                                                "weighting": {
                                                                    "type": "integer",
                                                                    "example": 100
                                                                },
                                                                "assessment_score": {
                                                                    "type": "integer",
                                                                    "example": 70
                                                                },
                                                                "weighted_assessment_score": {
                                                                    "type": "integer",
                                                                    "example": null
                                                                },
                                                                "assessment_outcome": {
                                                                    "type": "integer",
                                                                    "example": null
                                                                },
                                                                "notes": {
                                                                    "type": "string",
                                                                    "example": null
                                                                },
                                                                "tutor_confirmed": {
                                                                    "type": "integer",
                                                                    "example": null
                                                                },
                                                                "reassessment": {
                                                                    "type": "boolean",
                                                                    "example": false
                                                                },
                                                                "reason_id": {
                                                                    "type": "integer",
                                                                    "example": null
                                                                },
                                                                "attempt": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "aff_document": {
                                                                    "type": "string",
                                                                    "example": null
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "True/false",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students/search": {
            "get": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student Index API (kss_module_instance_student)",
                "description": "Get List of Module Instance Student Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleInstanceStudent** schema to\n                        fill in correct type of attribute, leave empty to return an empty object. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "module_instance_id": {
                                    "type": "integer",
                                    "example": "293"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                      put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                      for ASC sort, please reference to **ModuleInstanceStudent** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleInstanceStudent** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                       specific attributes separate by a comma. Please reference to **ModuleInstanceStudent**\n                       to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, module_instance_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Instance Student records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleInstanceStudent"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-outcomes/bulk-update": {
            "put": {
                "tags": [
                    "ModuleOutcome"
                ],
                "summary": "Module Outcome Custom Update API",
                "description": "Update some module outcome records",
                "requestBody": {
                    "description": "Payload Request body object to update module outcome. \n **The structure is an array of ModuleOutcome object**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 3545
                                        },
                                        "raw_module_score": {
                                            "type": "number",
                                            "example": 70.5
                                        },
                                        "module_outcome": {
                                            "type": "string",
                                            "example": "Met Attainment Target"
                                        },
                                        "module_attempt": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status_id": {
                                            "type": "integer",
                                            "example": 205
                                        },
                                        "notes": {
                                            "type": "string",
                                            "example": "some note"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "English Exit Exemption object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "result": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-outcomes": {
            "get": {
                "tags": [
                    "ModuleOutcome"
                ],
                "summary": "Module Outcome Index API (kss_module_outcome)",
                "description": "Get List of Module Outcome Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleOutcome** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "raw_module_score": {
                                    "type": "number",
                                    "example": "70"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **ModuleOutcome** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleOutcome** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleOutcome**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Outcome records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleOutcome"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleOutcome"
                ],
                "summary": "Module Outcome Create API (kss_module_outcome)",
                "description": "Create a specific Module Outcome and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_instance_student_id": {
                                        "type": "integer"
                                    },
                                    "raw_module_score": {
                                        "type": "number"
                                    },
                                    "raw_stage_score": {
                                        "type": "number"
                                    },
                                    "rounded_module_score": {
                                        "type": "integer"
                                    },
                                    "weighted_module_score": {
                                        "type": "number"
                                    },
                                    "module_outcome": {
                                        "type": "string"
                                    },
                                    "overall_score": {
                                        "type": "number"
                                    },
                                    "overall_score_label": {
                                        "type": "string"
                                    },
                                    "speaking_score": {
                                        "type": "number"
                                    },
                                    "speaking_score_label": {
                                        "type": "string"
                                    },
                                    "reading_score": {
                                        "type": "number"
                                    },
                                    "reading_score_label": {
                                        "type": "string"
                                    },
                                    "writing_score": {
                                        "type": "number"
                                    },
                                    "writing_score_label": {
                                        "type": "string"
                                    },
                                    "listening_score": {
                                        "type": "number"
                                    },
                                    "listening_score_label": {
                                        "type": "string"
                                    },
                                    "module_attempt": {
                                        "type": "integer"
                                    },
                                    "overall_score_str": {
                                        "type": "string"
                                    },
                                    "speaking_score_str": {
                                        "type": "string"
                                    },
                                    "reading_score_str": {
                                        "type": "string"
                                    },
                                    "writing_score_str": {
                                        "type": "string"
                                    },
                                    "listening_score_str": {
                                        "type": "string"
                                    },
                                    "moduleOutcomeHistories": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "assessment_history_id": {
                                                    "type": "integer"
                                                },
                                                "score": {
                                                    "type": "number"
                                                },
                                                "notes": {
                                                    "type": "string"
                                                },
                                                "status_id": {
                                                    "type": "number"
                                                },
                                                "deleted": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_instance_student_id": {
                                            "type": "integer"
                                        },
                                        "raw_module_score": {
                                            "type": "number"
                                        },
                                        "raw_stage_score": {
                                            "type": "number"
                                        },
                                        "rounded_module_score": {
                                            "type": "integer"
                                        },
                                        "weighted_module_score": {
                                            "type": "number"
                                        },
                                        "module_outcome": {
                                            "type": "string"
                                        },
                                        "english_exit_exemption_id": {
                                            "type": "integer"
                                        },
                                        "overall_score": {
                                            "type": "number"
                                        },
                                        "overall_score_label": {
                                            "type": "string"
                                        },
                                        "speaking_score": {
                                            "type": "number"
                                        },
                                        "speaking_score_label": {
                                            "type": "string"
                                        },
                                        "reading_score": {
                                            "type": "number"
                                        },
                                        "reading_score_label": {
                                            "type": "string"
                                        },
                                        "writing_score": {
                                            "type": "number"
                                        },
                                        "writing_score_label": {
                                            "type": "string"
                                        },
                                        "listening_score": {
                                            "type": "number"
                                        },
                                        "listening_score_label": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "module_attempt": {
                                            "type": "integer"
                                        },
                                        "overall_score_str": {
                                            "type": "string"
                                        },
                                        "speaking_score_str": {
                                            "type": "string"
                                        },
                                        "reading_score_str": {
                                            "type": "string"
                                        },
                                        "writing_score_str": {
                                            "type": "string"
                                        },
                                        "listening_score_str": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-outcomes/{id}": {
            "get": {
                "tags": [
                    "ModuleOutcome"
                ],
                "summary": "Module Outcome View API (kss_module_outcome)",
                "description": "Get A Specific Module Outcome Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Outcome record (kss_module_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleOutcome** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleOutcome**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ModuleOutcome"
                ],
                "summary": "Module Outcome Update API (kss_module_outcome)",
                "description": "Update a specific Module Outcome and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Outcome record (kss_module_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                       **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "module_instance_student_id": {
                                        "type": "integer"
                                    },
                                    "raw_module_score": {
                                        "type": "number"
                                    },
                                    "raw_stage_score": {
                                        "type": "number"
                                    },
                                    "rounded_module_score": {
                                        "type": "integer"
                                    },
                                    "weighted_module_score": {
                                        "type": "number"
                                    },
                                    "module_outcome": {
                                        "type": "string"
                                    },
                                    "overall_score": {
                                        "type": "number"
                                    },
                                    "overall_score_label": {
                                        "type": "string"
                                    },
                                    "speaking_score": {
                                        "type": "number"
                                    },
                                    "speaking_score_label": {
                                        "type": "string"
                                    },
                                    "reading_score": {
                                        "type": "number"
                                    },
                                    "reading_score_label": {
                                        "type": "string"
                                    },
                                    "writing_score": {
                                        "type": "number"
                                    },
                                    "writing_score_label": {
                                        "type": "string"
                                    },
                                    "listening_score": {
                                        "type": "number"
                                    },
                                    "listening_score_label": {
                                        "type": "string"
                                    },
                                    "module_attempt": {
                                        "type": "integer"
                                    },
                                    "overall_score_str": {
                                        "type": "string"
                                    },
                                    "speaking_score_str": {
                                        "type": "string"
                                    },
                                    "reading_score_str": {
                                        "type": "string"
                                    },
                                    "writing_score_str": {
                                        "type": "string"
                                    },
                                    "listening_score_str": {
                                        "type": "string"
                                    },
                                    "moduleOutcomeHistories": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "assessment_history_id": {
                                                    "type": "integer"
                                                },
                                                "score": {
                                                    "type": "number"
                                                },
                                                "notes": {
                                                    "type": "string"
                                                },
                                                "status_id": {
                                                    "type": "number"
                                                },
                                                "deleted": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_instance_student_id": {
                                            "type": "integer"
                                        },
                                        "raw_module_score": {
                                            "type": "number"
                                        },
                                        "raw_stage_score": {
                                            "type": "number"
                                        },
                                        "rounded_module_score": {
                                            "type": "integer"
                                        },
                                        "weighted_module_score": {
                                            "type": "number"
                                        },
                                        "module_outcome": {
                                            "type": "string"
                                        },
                                        "english_exit_exemption_id": {
                                            "type": "integer"
                                        },
                                        "overall_score": {
                                            "type": "number"
                                        },
                                        "overall_score_label": {
                                            "type": "string"
                                        },
                                        "speaking_score": {
                                            "type": "number"
                                        },
                                        "speaking_score_label": {
                                            "type": "string"
                                        },
                                        "reading_score": {
                                            "type": "number"
                                        },
                                        "reading_score_label": {
                                            "type": "string"
                                        },
                                        "writing_score": {
                                            "type": "number"
                                        },
                                        "writing_score_label": {
                                            "type": "string"
                                        },
                                        "listening_score": {
                                            "type": "number"
                                        },
                                        "listening_score_label": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "module_attempt": {
                                            "type": "integer"
                                        },
                                        "overall_score_str": {
                                            "type": "string"
                                        },
                                        "speaking_score_str": {
                                            "type": "string"
                                        },
                                        "reading_score_str": {
                                            "type": "string"
                                        },
                                        "writing_score_str": {
                                            "type": "string"
                                        },
                                        "listening_score_str": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModuleOutcome"
                ],
                "summary": "Module Outcome Delete API (kss_module_outcome)",
                "description": "Delete a specific Module Outcome",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_module_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-outcomes": {
            "get": {
                "tags": [
                    "ProgramOutcome"
                ],
                "summary": "Program Outcome Index API (kss_program_outcome)",
                "description": "Get List of Program Outcome Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramOutcome** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": "413"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **ProgramOutcome** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ProgramOutcome** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ProgramOutcome**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program Outcome records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramOutcome"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramOutcome"
                ],
                "summary": "Program Outcome Create API (kss_program_outcome)",
                "description": "Create a specific Program Outcome and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_id": {
                                        "type": "integer"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "overall_score": {
                                        "type": "number"
                                    },
                                    "credit_bearing_score": {
                                        "type": "integer"
                                    },
                                    "english_score": {
                                        "type": "number"
                                    },
                                    "english_score_label": {
                                        "type": "string"
                                    },
                                    "speaking_score": {
                                        "type": "number"
                                    },
                                    "speaking_score_label": {
                                        "type": "string"
                                    },
                                    "reading_score": {
                                        "type": "number"
                                    },
                                    "reading_score_label": {
                                        "type": "string"
                                    },
                                    "writing_score": {
                                        "type": "number"
                                    },
                                    "writing_score_label": {
                                        "type": "string"
                                    },
                                    "listening_score": {
                                        "type": "number"
                                    },
                                    "listening_score_label": {
                                        "type": "string"
                                    },
                                    "english_score_str": {
                                        "type": "string"
                                    },
                                    "speaking_score_str": {
                                        "type": "string"
                                    },
                                    "reading_score_str": {
                                        "type": "string"
                                    },
                                    "writing_score_str": {
                                        "type": "string"
                                    },
                                    "listening_score_str": {
                                        "type": "string"
                                    },
                                    "programOutcomeCompensations": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "score": {
                                                    "type": "number"
                                                },
                                                "status_id": {
                                                    "type": "integer"
                                                },
                                                "program_outcome_id": {
                                                    "type": "integer"
                                                },
                                                "deleted": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "program_id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "overall_score": {
                                            "type": "number"
                                        },
                                        "credit_bearing_score": {
                                            "type": "integer"
                                        },
                                        "english_score": {
                                            "type": "number"
                                        },
                                        "english_score_label": {
                                            "type": "string"
                                        },
                                        "speaking_score": {
                                            "type": "number"
                                        },
                                        "speaking_score_label": {
                                            "type": "string"
                                        },
                                        "reading_score": {
                                            "type": "number"
                                        },
                                        "reading_score_label": {
                                            "type": "string"
                                        },
                                        "writing_score": {
                                            "type": "number"
                                        },
                                        "writing_score_label": {
                                            "type": "string"
                                        },
                                        "listening_score": {
                                            "type": "number"
                                        },
                                        "listening_score_label": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "english_score_str": {
                                            "type": "string"
                                        },
                                        "speaking_score_str": {
                                            "type": "string"
                                        },
                                        "reading_score_str": {
                                            "type": "string"
                                        },
                                        "writing_score_str": {
                                            "type": "string"
                                        },
                                        "listening_score_str": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-outcomes/{id}": {
            "get": {
                "tags": [
                    "ProgramOutcome"
                ],
                "summary": "Program Outcome View API (kss_program_outcome)",
                "description": "Get A Specific Program Outcome Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Program Outcome record (kss_program_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ProgramOutcome** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ProgramOutcome**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Program Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramOutcome"
                ],
                "summary": "Program Outcome Update API (kss_program_outcome)",
                "description": "Update a specific Program Outcome and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Program Outcome record (kss_program_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "program_id": {
                                        "type": "integer"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "overall_score": {
                                        "type": "number"
                                    },
                                    "credit_bearing_score": {
                                        "type": "integer"
                                    },
                                    "english_score": {
                                        "type": "number"
                                    },
                                    "english_score_label": {
                                        "type": "string"
                                    },
                                    "speaking_score": {
                                        "type": "number"
                                    },
                                    "speaking_score_label": {
                                        "type": "string"
                                    },
                                    "reading_score": {
                                        "type": "number"
                                    },
                                    "reading_score_label": {
                                        "type": "string"
                                    },
                                    "writing_score": {
                                        "type": "number"
                                    },
                                    "writing_score_label": {
                                        "type": "string"
                                    },
                                    "listening_score": {
                                        "type": "number"
                                    },
                                    "listening_score_label": {
                                        "type": "string"
                                    },
                                    "english_score_str": {
                                        "type": "string"
                                    },
                                    "speaking_score_str": {
                                        "type": "string"
                                    },
                                    "reading_score_str": {
                                        "type": "string"
                                    },
                                    "writing_score_str": {
                                        "type": "string"
                                    },
                                    "listening_score_str": {
                                        "type": "string"
                                    },
                                    "programOutcomeCompensations": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "score": {
                                                    "type": "number"
                                                },
                                                "status_id": {
                                                    "type": "integer"
                                                },
                                                "program_outcome_id": {
                                                    "type": "integer"
                                                },
                                                "deleted": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "program_id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "overall_score": {
                                            "type": "number"
                                        },
                                        "credit_bearing_score": {
                                            "type": "integer"
                                        },
                                        "english_score": {
                                            "type": "number"
                                        },
                                        "english_score_label": {
                                            "type": "string"
                                        },
                                        "speaking_score": {
                                            "type": "number"
                                        },
                                        "speaking_score_label": {
                                            "type": "string"
                                        },
                                        "reading_score": {
                                            "type": "number"
                                        },
                                        "reading_score_label": {
                                            "type": "string"
                                        },
                                        "writing_score": {
                                            "type": "number"
                                        },
                                        "writing_score_label": {
                                            "type": "string"
                                        },
                                        "listening_score": {
                                            "type": "number"
                                        },
                                        "listening_score_label": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "english_score_str": {
                                            "type": "string"
                                        },
                                        "speaking_score_str": {
                                            "type": "string"
                                        },
                                        "reading_score_str": {
                                            "type": "string"
                                        },
                                        "writing_score_str": {
                                            "type": "string"
                                        },
                                        "listening_score_str": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramOutcome"
                ],
                "summary": "Program Outcome Delete API (kss_program_outcome)",
                "description": "Delete a specific Program Outcome",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_program_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-module-assessments": {
            "get": {
                "tags": [
                    "StudentModuleAssessment"
                ],
                "summary": "Student Module Assessment Index API (kss_student_module_assessment)",
                "description": "Get List of Student Module Assessment Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **StudentModuleAssessment** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "module_instance_assessment_id": {
                                    "type": "integer",
                                    "example": "720"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **StudentModuleAssessment** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **StudentModuleAssessment** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **StudentModuleAssessment**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Student Module Assessment records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StudentModuleAssessment"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "StudentModuleAssessment"
                ],
                "summary": "Student Module Assessment Create API (kss_student_module_assessment)",
                "description": "Create a specific Student Module Assessment and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_instance_assessment_id": {
                                        "type": "integer"
                                    },
                                    "module_instance_student_id": {
                                        "type": "integer"
                                    },
                                    "module_outcome_id": {
                                        "type": "integer"
                                    },
                                    "weighting": {
                                        "type": "number"
                                    },
                                    "assessment_score": {
                                        "type": "number"
                                    },
                                    "weighted_assessment_score": {
                                        "type": "number"
                                    },
                                    "assessment_outcome": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "tutor_confirmed": {
                                        "type": "integer"
                                    },
                                    "reassessment": {
                                        "type": "integer"
                                    },
                                    "reason_id": {
                                        "type": "integer"
                                    },
                                    "attempt": {
                                        "type": "integer"
                                    },
                                    "aff_document": {
                                        "type": "string"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student Module Assessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_instance_assessment_id": {
                                            "type": "integer"
                                        },
                                        "module_instance_student_id": {
                                            "type": "integer"
                                        },
                                        "module_outcome_id": {
                                            "type": "integer"
                                        },
                                        "weighting": {
                                            "type": "number"
                                        },
                                        "assessment_score": {
                                            "type": "number"
                                        },
                                        "weighted_assessment_score": {
                                            "type": "number"
                                        },
                                        "assessment_outcome": {
                                            "type": "string"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "tutor_confirmed": {
                                            "type": "integer"
                                        },
                                        "reassessment": {
                                            "type": "integer"
                                        },
                                        "reason_id": {
                                            "type": "integer"
                                        },
                                        "attempt": {
                                            "type": "integer"
                                        },
                                        "aff_document": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-module-assessments/{id}": {
            "get": {
                "tags": [
                    "StudentModuleAssessment"
                ],
                "summary": "Student Module Assessment View API (kss_student_module_assessment)",
                "description": "Get A Specific Student Module Assessment Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student Module Assessment record (kss_student_module_assessment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **StudentModuleAssessment** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **StudentModuleAssessment**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student Module Assessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentModuleAssessment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "StudentModuleAssessment"
                ],
                "summary": "Student Module Assessment Update API (kss_student_module_assessment)",
                "description": "Update a specific Student Module Assessment and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student Module Assessment record (kss_student_module_assessment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                       **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_instance_assessment_id": {
                                        "type": "integer"
                                    },
                                    "module_instance_student_id": {
                                        "type": "integer"
                                    },
                                    "module_outcome_id": {
                                        "type": "integer"
                                    },
                                    "weighting": {
                                        "type": "number"
                                    },
                                    "assessment_score": {
                                        "type": "number"
                                    },
                                    "weighted_assessment_score": {
                                        "type": "number"
                                    },
                                    "assessment_outcome": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "tutor_confirmed": {
                                        "type": "integer"
                                    },
                                    "reassessment": {
                                        "type": "integer"
                                    },
                                    "reason_id": {
                                        "type": "integer"
                                    },
                                    "attempt": {
                                        "type": "integer"
                                    },
                                    "aff_document": {
                                        "type": "string"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student Module Assessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_instance_assessment_id": {
                                            "type": "integer"
                                        },
                                        "module_instance_student_id": {
                                            "type": "integer"
                                        },
                                        "module_outcome_id": {
                                            "type": "integer"
                                        },
                                        "weighting": {
                                            "type": "number"
                                        },
                                        "assessment_score": {
                                            "type": "number"
                                        },
                                        "weighted_assessment_score": {
                                            "type": "number"
                                        },
                                        "assessment_outcome": {
                                            "type": "string"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "tutor_confirmed": {
                                            "type": "integer"
                                        },
                                        "reassessment": {
                                            "type": "integer"
                                        },
                                        "reason_id": {
                                            "type": "integer"
                                        },
                                        "attempt": {
                                            "type": "integer"
                                        },
                                        "aff_document": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "StudentModuleAssessment"
                ],
                "summary": "Student Module Assessment Delete API (kss_student_module_assessment)",
                "description": "Delete a specific Student Module Assessment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_student_module_assessment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualifications": {
            "get": {
                "tags": [
                    "EltQualification"
                ],
                "summary": "Elt Qualification Index API (kss_elt_qualification)",
                "description": "Get List of Elt Qualification Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EltQualification** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "student_uuid": {
                                    "type": "string",
                                    "example": "dcd2ab58-839c-4936-8690-200e704b805e"
                                },
                                "type": {
                                    "type": "string",
                                    "example": "SELT"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **EltQualification** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -overall"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **EltQualification** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **EltQualification**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, student_uuid, type, qualification_name, overall"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Elt Qualification records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EltQualification"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualification-notes": {
            "get": {
                "tags": [
                    "EltQualificationNote"
                ],
                "summary": "Elt Qualification Note Index API (kss_elt_qualification_note)",
                "description": "Get List of Elt Qualification Note Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EltQualificationNote** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "elt_qualification_id": {
                                    "type": "string",
                                    "example": "17f59330-3a3e-46c6-0d8b-e5b7cc2a5122"
                                },
                                "enrolment_id": {
                                    "type": "string",
                                    "example": "4296"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **EltQualificationNote** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **EltQualificationNote** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **EltQualificationNote**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, elt_qualification_id, enrolment_id, note, documents"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Elt Qualification Note records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EltQualificationNote"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EltQualificationNote"
                ],
                "summary": "Elt Qualification Note Create API (kss_elt_qualification_note)",
                "description": "Create a specific Elt Qualification Note and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "elt_qualification_id": {
                                        "type": "string"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Elt Qualification Note object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "elt_qualification_id": {
                                            "type": "string"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "documents": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualification-notes/{id}": {
            "get": {
                "tags": [
                    "EltQualificationNote"
                ],
                "summary": "Elt Qualification Note View API (kss_elt_qualification_note)",
                "description": "Get A Specific Elt Qualification Note Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_elt_qualification_note.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **EltQualificationNote** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **EltQualificationNote**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, elt_qualification_id, enrolment_id, note, documents"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Elt Qualification Note object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EltQualificationNote"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EltQualificationNote"
                ],
                "summary": "Elt Qualification Note Update API (kss_elt_qualification_note)",
                "description": "Update a specific Elt Qualification Note and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_elt_qualification_note.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "elt_qualification_id": {
                                        "type": "string"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Elt Qualification Note object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "elt_qualification_id": {
                                            "type": "string"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "documents": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EltQualificationNote"
                ],
                "summary": "Elt Qualification Note Delete API (kss_elt_qualification_note)",
                "description": "Delete a specific Elt Qualification Note",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_elt_qualification_note.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-assessments": {
            "get": {
                "tags": [
                    "ModuleInstanceAssessment"
                ],
                "summary": "Module Instance Assessment Index API (kss_module_instance_assessment)",
                "description": "Get List of Module Instance Assessment Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleInstanceAssessment** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **ModuleInstanceAssessment** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleInstanceAssessment** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleInstanceAssessment**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Instance Assessment records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleInstanceAssessment"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleInstanceAssessment"
                ],
                "summary": "Module Instance Assessment Create API (kss_module_instance_assessment)",
                "description": "Create a specific Module Instance Assessment and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "source_id": {
                                        "type": "integer"
                                    },
                                    "module_instance_id": {
                                        "type": "integer"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "weighting": {
                                        "type": "number"
                                    },
                                    "picklist_item_id": {
                                        "type": "integer"
                                    },
                                    "reassessment": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Instance Assessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "source_id": {
                                            "type": "integer"
                                        },
                                        "module_instance_id": {
                                            "type": "integer"
                                        },
                                        "grade_scale_id": {
                                            "type": "integer"
                                        },
                                        "weighting": {
                                            "type": "number"
                                        },
                                        "picklist_item_id": {
                                            "type": "integer"
                                        },
                                        "reassessment": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-assessments/{id}": {
            "get": {
                "tags": [
                    "ModuleInstanceAssessment"
                ],
                "summary": "Module Instance Assessment View API (kss_module_instance_assessment)",
                "description": "Get A Specific Module Instance Assessment Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Assessment record (kss_module_instance_assessment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleInstanceAssessment** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleInstanceAssessment**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module Instance Assessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstanceAssessment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ModuleInstanceAssessment"
                ],
                "summary": "Module Instance Assessment Update API (kss_module_instance_assessment)",
                "description": "Update a specific Module Instance Assessment and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Assessment record (kss_module_instance_assessment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                       **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "source_id": {
                                        "type": "integer"
                                    },
                                    "module_instance_id": {
                                        "type": "integer"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "weighting": {
                                        "type": "number"
                                    },
                                    "picklist_item_id": {
                                        "type": "integer"
                                    },
                                    "reassessment": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Instance Assessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "source_id": {
                                            "type": "integer"
                                        },
                                        "module_instance_id": {
                                            "type": "integer"
                                        },
                                        "grade_scale_id": {
                                            "type": "integer"
                                        },
                                        "weighting": {
                                            "type": "number"
                                        },
                                        "picklist_item_id": {
                                            "type": "integer"
                                        },
                                        "reassessment": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModuleInstanceAssessment"
                ],
                "summary": "Module Instance Assessment Delete API (kss_module_instance_assessment)",
                "description": "Delete a specific Module Instance Assessment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_module_instance_assessment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances": {
            "get": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Module Instance Index API (kss_module_instance)",
                "description": "Get List of Module Instance Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleInstance** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "credits": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **ModuleInstance** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleInstance** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleInstance**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Instance records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleInstance"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Module Instance Create API (kss_module_instance)",
                "description": "Create a specific Module Instance and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "stage": {
                                        "type": "integer"
                                    },
                                    "module_code": {
                                        "type": "string"
                                    },
                                    "module_name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "program_id": {
                                        "type": "integer"
                                    },
                                    "program_name": {
                                        "type": "string"
                                    },
                                    "program_intake_id": {
                                        "type": "integer"
                                    },
                                    "program_intake_module_id": {
                                        "type": "integer"
                                    },
                                    "intake_month_year": {
                                        "type": "string"
                                    },
                                    "module_id": {
                                        "type": "integer"
                                    },
                                    "ees": {
                                        "type": "integer"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "module_calculation_type_pid": {
                                        "type": "integer"
                                    },
                                    "module_weighting": {
                                        "type": "integer"
                                    },
                                    "instance_type_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Instance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "credits": {
                                            "type": "integer"
                                        },
                                        "stage": {
                                            "type": "integer"
                                        },
                                        "module_code": {
                                            "type": "string"
                                        },
                                        "module_name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "program_id": {
                                            "type": "integer"
                                        },
                                        "program_name": {
                                            "type": "string"
                                        },
                                        "program_intake_id": {
                                            "type": "integer"
                                        },
                                        "program_intake_module_id": {
                                            "type": "integer"
                                        },
                                        "intake_month_year": {
                                            "type": "string"
                                        },
                                        "module_id": {
                                            "type": "integer"
                                        },
                                        "ees": {
                                            "type": "integer"
                                        },
                                        "grade_scale_id": {
                                            "type": "integer"
                                        },
                                        "module_calculation_type_pid": {
                                            "type": "integer"
                                        },
                                        "module_weighting": {
                                            "type": "integer"
                                        },
                                        "instance_type_id": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances/{id}": {
            "get": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Module Instance View API (kss_module_instance)",
                "description": "Get A Specific Module Instance Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance record (kss_module_instance.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleInstance** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleInstance**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module Instance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Module Instance Update API (kss_module_instance)",
                "description": "Update a specific Module Instance and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance record (kss_module_instance.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                       **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "stage": {
                                        "type": "integer"
                                    },
                                    "module_code": {
                                        "type": "string"
                                    },
                                    "module_name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "program_id": {
                                        "type": "integer"
                                    },
                                    "program_name": {
                                        "type": "string"
                                    },
                                    "program_intake_id": {
                                        "type": "integer"
                                    },
                                    "program_intake_module_id": {
                                        "type": "integer"
                                    },
                                    "intake_month_year": {
                                        "type": "string"
                                    },
                                    "module_id": {
                                        "type": "integer"
                                    },
                                    "ees": {
                                        "type": "integer"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "module_calculation_type_pid": {
                                        "type": "integer"
                                    },
                                    "module_weighting": {
                                        "type": "integer"
                                    },
                                    "instance_type_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Instance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "credits": {
                                            "type": "integer"
                                        },
                                        "stage": {
                                            "type": "integer"
                                        },
                                        "module_code": {
                                            "type": "string"
                                        },
                                        "module_name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "program_id": {
                                            "type": "integer"
                                        },
                                        "program_name": {
                                            "type": "string"
                                        },
                                        "program_intake_id": {
                                            "type": "integer"
                                        },
                                        "program_intake_module_id": {
                                            "type": "integer"
                                        },
                                        "intake_month_year": {
                                            "type": "string"
                                        },
                                        "module_id": {
                                            "type": "integer"
                                        },
                                        "ees": {
                                            "type": "integer"
                                        },
                                        "grade_scale_id": {
                                            "type": "integer"
                                        },
                                        "module_calculation_type_pid": {
                                            "type": "integer"
                                        },
                                        "module_weighting": {
                                            "type": "integer"
                                        },
                                        "instance_type_id": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Module Instance Delete API (kss_module_instance)",
                "description": "Delete a specific Module Instance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_module_instance.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students": {
            "get": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student Index API (kss_module_instance_student)",
                "description": "Get List of Module Instance Student Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleInstanceStudent** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "module_instance_id": {
                                    "type": "integer",
                                    "example": "293"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **ModuleInstanceStudent** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleInstanceStudent** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleInstanceStudent**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, module_instance_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Instance Student records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleInstanceStudent"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student Create API (kss_module_instance_student)",
                "description": "Create a specific Module Instance Student and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_instance_id": {
                                        "type": "integer"
                                    },
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "is_repeat_module": {
                                        "type": "integer"
                                    },
                                    "switched": {
                                        "type": "integer"
                                    },
                                    "schedule_type_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Instance Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_instance_id": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "is_repeat_module": {
                                            "type": "integer"
                                        },
                                        "switched": {
                                            "type": "integer"
                                        },
                                        "schedule_type_id": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students/{id}": {
            "get": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student View API (kss_module_instance_student)",
                "description": "Get A Specific Module Instance Student Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Student record (kss_module_instance_student.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleInstanceStudent** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleInstanceStudent**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, module_instance_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module Instance Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstanceStudent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student Update API (kss_module_instance_student)",
                "description": "Update a specific Module Instance Student and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Student record (kss_module_instance_student.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                       **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_instance_id": {
                                        "type": "integer"
                                    },
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "is_repeat_module": {
                                        "type": "integer"
                                    },
                                    "switched": {
                                        "type": "integer"
                                    },
                                    "schedule_type_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Instance Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_instance_id": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "is_repeat_module": {
                                            "type": "integer"
                                        },
                                        "switched": {
                                            "type": "integer"
                                        },
                                        "schedule_type_id": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student Delete API (kss_module_instance_student)",
                "description": "Delete a specific Module Instance Student",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_module_instance_student.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-outcome-histories": {
            "get": {
                "tags": [
                    "ModuleOutcomeHistory"
                ],
                "summary": "Module Outcome History Index API (kss_module_outcome_history)",
                "description": "Get List of Module Outcome History Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleOutcomeHistory** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "module_outcome_id": {
                                    "type": "integer",
                                    "example": "494"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **ModuleOutcomeHistory** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleOutcomeHistory** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleOutcomeHistory**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, enrolment_id, moduleOutcomes.id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Outcome History records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleOutcomeHistory"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleOutcomeHistory"
                ],
                "summary": "Module Outcome History Create API (kss_module_outcome_history)",
                "description": "Create a specific Module Outcome History and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_outcome_id": {
                                        "type": "integer"
                                    },
                                    "assessment_history_id": {
                                        "type": "integer"
                                    },
                                    "score": {
                                        "type": "number"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "status_id": {
                                        "type": "number"
                                    },
                                    "deleted": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Outcome History object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_outcome_id": {
                                            "type": "integer"
                                        },
                                        "assessment_history_id": {
                                            "type": "integer"
                                        },
                                        "score": {
                                            "type": "number"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "status_id": {
                                            "type": "number"
                                        },
                                        "deleted": {
                                            "type": "number"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-outcome-histories/{id}": {
            "get": {
                "tags": [
                    "ModuleOutcomeHistory"
                ],
                "summary": "Module Outcome History View API (kss_module_outcome_history)",
                "description": "Get A Specific Module Outcome History Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the module_outcome_id record (kss_module_outcome_history.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ModuleOutcomeHistory** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ModuleOutcomeHistory**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, enrolment_id, moduleOutcomes.id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module Outcome History object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleOutcomeHistory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ModuleOutcomeHistory"
                ],
                "summary": "Module Outcome History Update API (kss_module_outcome_history)",
                "description": "Update a specific Module Outcome History and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Outcome History record (kss_module_outcome_history.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                       **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_outcome_id": {
                                        "type": "integer"
                                    },
                                    "assessment_history_id": {
                                        "type": "integer"
                                    },
                                    "score": {
                                        "type": "number"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "status_id": {
                                        "type": "number"
                                    },
                                    "deleted": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module Outcome History object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_outcome_id": {
                                            "type": "integer"
                                        },
                                        "assessment_history_id": {
                                            "type": "integer"
                                        },
                                        "score": {
                                            "type": "number"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "status_id": {
                                            "type": "number"
                                        },
                                        "deleted": {
                                            "type": "number"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModuleOutcomeHistory"
                ],
                "summary": "Module Outcome History Delete API (kss_module_outcome_history)",
                "description": "Delete a specific Module Outcome History",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_module_outcome_history.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-outcome-compensations": {
            "get": {
                "tags": [
                    "ProgramOutcomeCompensation"
                ],
                "summary": "Program Outcome Compensation Index API (kss_program_outcome_compensation)",
                "description": "Get List of Program Outcome Compensation Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramOutcomeCompensation** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "program_outcome_id": {
                                    "type": "integer",
                                    "example": "10"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **ProgramOutcomeCompensation** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ProgramOutcomeCompensation** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ProgramOutcomeCompensation**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program Outcome Compensation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramOutcomeCompensation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramOutcomeCompensation"
                ],
                "summary": "Program Outcome Compensation Create API (kss_program_outcome_compensation)",
                "description": "Create a specific Program Outcome Compensation and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "score": {
                                        "type": "number"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "program_outcome_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program Outcome Compensation object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "score": {
                                            "type": "number"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "program_outcome_id": {
                                            "type": "integer"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-outcome-compensations/{id}": {
            "get": {
                "tags": [
                    "ProgramOutcomeCompensation"
                ],
                "summary": "Program Outcome Compensation View API (kss_program_outcome_compensation)",
                "description": "Get A Specific Program Outcome Compensation Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Program Outcome Compensation record (kss_program_outcome_compensation.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **ProgramOutcomeCompensation** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **ProgramOutcomeCompensation**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Program Outcome Compensation object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramOutcomeCompensation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramOutcomeCompensation"
                ],
                "summary": "Program Outcome Compensation Update API (kss_program_outcome_compensation)",
                "description": "Update a specific Program Outcome Compensation and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Program Outcome Compensation record (kss_program_outcome_compensation.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                       **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "score": {
                                        "type": "number"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "program_outcome_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program Outcome Compensation object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "score": {
                                            "type": "number"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "program_outcome_id": {
                                            "type": "integer"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramOutcomeCompensation"
                ],
                "summary": "Program Outcome Compensation Delete API (kss_program_outcome_compensation)",
                "description": "Delete a specific Program Outcome Compensation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_program_outcome_compensation.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Index API (kss_status)",
                "description": "Get List of Status Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Status** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **Status** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **Status** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **Status**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Status records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Create API (kss_status)",
                "description": "Create a specific Status and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    },
                                    "setting": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "setting": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses/{id}": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status View API (kss_status)",
                "description": "Get A Specific Status Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **Status** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **Status**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Update API (kss_status)",
                "description": "Update a specific Status and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    },
                                    "setting": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "setting": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Delete API (kss_status)",
                "description": "Delete a specific Status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/students": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Student Index API (kss_student)",
                "description": "Get List of Student Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Student** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "fullname": {
                                    "type": "string",
                                    "example": "Da LIa"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **Student** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **Student** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **Student**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Student records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Student"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Student"
                ],
                "summary": "Student Create API (kss_student)",
                "description": "Create a specific Student and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "type": "string"
                                    },
                                    "student_id": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "dateOfBirth": {
                                        "type": "string"
                                    },
                                    "dateOfBirthTx": {
                                        "type": "integer"
                                    },
                                    "roles": {
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "fullname": {
                                            "type": "string"
                                        },
                                        "student_id": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "gender": {
                                            "type": "string"
                                        },
                                        "dateOfBirth": {
                                            "type": "string"
                                        },
                                        "dateOfBirthTx": {
                                            "type": "integer"
                                        },
                                        "roles": {
                                            "type": "string"
                                        },
                                        "nickname": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/students/{id}": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Student View API (kss_student)",
                "description": "Get A Specific Student Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student record (kss_student.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **Student** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **Student**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Student"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Student"
                ],
                "summary": "Student Update API (kss_student)",
                "description": "Update a specific Student and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student record (kss_student.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "type": "string"
                                    },
                                    "student_id": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "dateOfBirth": {
                                        "type": "string"
                                    },
                                    "dateOfBirthTx": {
                                        "type": "integer"
                                    },
                                    "roles": {
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "fullname": {
                                            "type": "string"
                                        },
                                        "student_id": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "gender": {
                                            "type": "string"
                                        },
                                        "dateOfBirth": {
                                            "type": "string"
                                        },
                                        "dateOfBirthTx": {
                                            "type": "integer"
                                        },
                                        "roles": {
                                            "type": "string"
                                        },
                                        "nickname": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Student"
                ],
                "summary": "Student Delete API (kss_student)",
                "description": "Delete a specific Student",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_student.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-module-assessment-histories": {
            "get": {
                "tags": [
                    "StudentModuleAssessmentHistory"
                ],
                "summary": "Student Module Assessment History Index API (kss_student_module_assessment_history)",
                "description": "Get List of Student Module Assessment History Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **StudentModuleAssessmentHistory** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "student_module_assessment_id": {
                                    "type": "integer",
                                    "example": "1233"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **StudentModuleAssessmentHistory** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **StudentModuleAssessmentHistory** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **StudentModuleAssessmentHistory**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Student Module Assessment History records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StudentModuleAssessmentHistory"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "StudentModuleAssessmentHistory"
                ],
                "summary": "Student Module Assessment History Create API (kss_student_module_assessment_history)",
                "description": "Create a specific Student Module Assessment History and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "assessment_score": {
                                        "type": "number"
                                    },
                                    "assessment_outcome": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "student_module_assessment_id": {
                                        "type": "integer"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student Module Assessment History object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "assessment_score": {
                                            "type": "number"
                                        },
                                        "assessment_outcome": {
                                            "type": "string"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "student_module_assessment_id": {
                                            "type": "integer"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-module-assessment-histories/{id}": {
            "get": {
                "tags": [
                    "StudentModuleAssessmentHistory"
                ],
                "summary": "Student Module Assessment History View API (kss_student_module_assessment_history)",
                "description": "Get A Specific Student Module Assessment History Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student Module Assessment History record (kss_student_module_assessment_history.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **StudentModuleAssessmentHistory** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **StudentModuleAssessmentHistory**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student Module Assessment History object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentModuleAssessmentHistory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "StudentModuleAssessmentHistory"
                ],
                "summary": "Student Module Assessment History Update API (kss_student_module_assessment_history)",
                "description": "Update a specific Student Module Assessment History and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student Module Assessment History record (kss_student_module_assessment_history.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "assessment_score": {
                                        "type": "number"
                                    },
                                    "assessment_outcome": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "student_module_assessment_id": {
                                        "type": "integer"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student Module Assessment History object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "assessment_score": {
                                            "type": "number"
                                        },
                                        "assessment_outcome": {
                                            "type": "string"
                                        },
                                        "notes": {
                                            "type": "string"
                                        },
                                        "student_module_assessment_id": {
                                            "type": "integer"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "StudentModuleAssessmentHistory"
                ],
                "summary": "Student Module Assessment History Delete API (kss_student_module_assessment_history)",
                "description": "Delete a specific Student Module Assessment History",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_student_module_assessment_history.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-verified-elt-outcomes": {
            "get": {
                "tags": [
                    "StudentVerifiedEltOutcome"
                ],
                "summary": "Student Verified Elt Outcome Index API (kss_student_verified_elt_outcome)",
                "description": "Get List of Student Verified Elt Outcome Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **StudentVerifiedEltOutcome** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "raw_module_score": {
                                    "type": "number",
                                    "example": "70"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma, \n                       put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                       for ASC sort, please reference to **StudentVerifiedEltOutcome** schema to get correct attributes.\n                       *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **StudentVerifiedEltOutcome** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **StudentVerifiedEltOutcome**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Student Verified Elt Outcome records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StudentVerifiedEltOutcome"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "StudentVerifiedEltOutcome"
                ],
                "summary": "Student Verified Elt Outcome Create API (kss_student_verified_elt_outcome)",
                "description": "Create a specific Student Verified Elt Outcome and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "qualification_uuid": {
                                        "type": "string"
                                    },
                                    "student_id": {
                                        "type": "string"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "elt_type": {
                                        "type": "string"
                                    },
                                    "elt_date": {
                                        "type": "string"
                                    },
                                    "elt_verified": {
                                        "type": "integer"
                                    },
                                    "elt_verified_date": {
                                        "type": "string"
                                    },
                                    "overall_score": {
                                        "type": "number"
                                    },
                                    "speaking_score": {
                                        "type": "number"
                                    },
                                    "reading_score": {
                                        "type": "number"
                                    },
                                    "writing_score": {
                                        "type": "number"
                                    },
                                    "listening_score": {
                                        "type": "number"
                                    },
                                    "elt_document": {
                                        "type": "string"
                                    },
                                    "verification_document": {
                                        "type": "string"
                                    },
                                    "overall_score_str": {
                                        "type": "integer"
                                    },
                                    "speaking_score_str": {
                                        "type": "integer"
                                    },
                                    "reading_score_str": {
                                        "type": "integer"
                                    },
                                    "writing_score_str": {
                                        "type": "integer"
                                    },
                                    "listening_score_str": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student Verified Elt Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "qualification_uuid": {
                                            "type": "string"
                                        },
                                        "student_id": {
                                            "type": "string"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "elt_type": {
                                            "type": "string"
                                        },
                                        "elt_date": {
                                            "type": "string"
                                        },
                                        "elt_verified": {
                                            "type": "integer"
                                        },
                                        "elt_verified_date": {
                                            "type": "string"
                                        },
                                        "overall_score": {
                                            "type": "number"
                                        },
                                        "speaking_score": {
                                            "type": "number"
                                        },
                                        "reading_score": {
                                            "type": "number"
                                        },
                                        "writing_score": {
                                            "type": "number"
                                        },
                                        "listening_score": {
                                            "type": "number"
                                        },
                                        "elt_document": {
                                            "type": "string"
                                        },
                                        "verification_document": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "type": "integer"
                                        },
                                        "modified_by": {
                                            "type": "integer"
                                        },
                                        "modified_at": {
                                            "type": "integer"
                                        },
                                        "overall_score_str": {
                                            "type": "integer"
                                        },
                                        "speaking_score_str": {
                                            "type": "integer"
                                        },
                                        "reading_score_str": {
                                            "type": "integer"
                                        },
                                        "writing_score_str": {
                                            "type": "integer"
                                        },
                                        "listening_score_str": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-verified-elt-outcomes/{id}": {
            "get": {
                "tags": [
                    "StudentVerifiedEltOutcome"
                ],
                "summary": "Student Verified Elt Outcome View API (kss_student_verified_elt_outcome)",
                "description": "Get A Specific Student Verified Elt Outcome Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student Verified Elt Outcome record (kss_student_verified_elt_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                       Please reference to **StudentVerifiedEltOutcome** to get list of extra attributes.\n                       *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of \n                        specific attributes separate by a comma. Please reference to **StudentVerifiedEltOutcome**\n                        to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student Verified Elt Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentVerifiedEltOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "StudentVerifiedEltOutcome"
                ],
                "summary": "Student Verified Elt Outcome Update API (kss_student_verified_elt_outcome)",
                "description": "Update a specific Student Verified Elt Outcome and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student Verified Elt Outcome record (kss_student_verified_elt_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n                        **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "qualification_uuid": {
                                        "type": "string"
                                    },
                                    "student_id": {
                                        "type": "string"
                                    },
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "elt_type": {
                                        "type": "string"
                                    },
                                    "elt_date": {
                                        "type": "string"
                                    },
                                    "elt_verified": {
                                        "type": "integer"
                                    },
                                    "elt_verified_date": {
                                        "type": "string"
                                    },
                                    "overall_score": {
                                        "type": "number"
                                    },
                                    "speaking_score": {
                                        "type": "number"
                                    },
                                    "reading_score": {
                                        "type": "number"
                                    },
                                    "writing_score": {
                                        "type": "number"
                                    },
                                    "listening_score": {
                                        "type": "number"
                                    },
                                    "elt_document": {
                                        "type": "string"
                                    },
                                    "verification_document": {
                                        "type": "string"
                                    },
                                    "overall_score_str": {
                                        "type": "integer"
                                    },
                                    "speaking_score_str": {
                                        "type": "integer"
                                    },
                                    "reading_score_str": {
                                        "type": "integer"
                                    },
                                    "writing_score_str": {
                                        "type": "integer"
                                    },
                                    "listening_score_str": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student Verified Elt Outcome object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentVerifiedEltOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "StudentVerifiedEltOutcome"
                ],
                "summary": "Student Verified Elt Outcome Delete API (kss_student_verified_elt_outcome)",
                "description": "Delete a specific Student Verified Elt Outcome",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_student_verified_elt_outcome.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "EltQualification": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "student_uuid": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "qualification_name": {
                        "type": "string"
                    },
                    "test_provider": {
                        "type": "string"
                    },
                    "test_provider_code": {
                        "type": "string"
                    },
                    "overall": {
                        "type": "string"
                    },
                    "listening": {
                        "type": "string"
                    },
                    "speaking": {
                        "type": "string"
                    },
                    "reading": {
                        "type": "string"
                    },
                    "writing": {
                        "type": "string"
                    },
                    "knowledge": {
                        "type": "integer"
                    },
                    "cefr_level": {
                        "type": "string"
                    },
                    "grammar": {
                        "type": "integer"
                    },
                    "main": {
                        "type": "integer"
                    },
                    "trf": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    },
                    "degree_country": {
                        "type": "string"
                    },
                    "is_not_remove_refer_documents": {
                        "type": "integer"
                    },
                    "naric_soc_reference_number": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "verifications": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "statement_of_compatibility": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "verified": {
                        "type": "integer"
                    },
                    "verified_date": {
                        "type": "string"
                    },
                    "test_date": {
                        "type": "string"
                    },
                    "expiry_date": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EltQualificationNote": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "elt_qualification_id": {
                        "type": "string"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EnglishExitExemption": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "student_id": {
                        "type": "string"
                    },
                    "exam_required": {
                        "type": "integer"
                    },
                    "exemption_reason_id": {
                        "type": "integer"
                    },
                    "elt_type": {
                        "type": "string"
                    },
                    "elt_qualification": {
                        "type": "string"
                    },
                    "program_intake_module_id": {
                        "type": "integer"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "moduleOutcomes": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleOutcome"
                        }
                    }
                },
                "type": "object"
            },
            "GradeScale": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "grade_scale_type": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "gradeScaleDetails": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GradeScaleDetail"
                        }
                    }
                },
                "type": "object"
            },
            "GradeScaleDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lower_limit": {
                        "type": "number"
                    },
                    "upper_limit": {
                        "type": "number"
                    },
                    "credits_earned": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ModuleInstance": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "credits": {
                        "type": "integer"
                    },
                    "stage": {
                        "type": "integer"
                    },
                    "module_code": {
                        "type": "string"
                    },
                    "module_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "program_intake_id": {
                        "type": "integer"
                    },
                    "program_intake_module_id": {
                        "type": "integer"
                    },
                    "intake_month_year": {
                        "type": "string"
                    },
                    "module_id": {
                        "type": "integer"
                    },
                    "ees": {
                        "type": "integer"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "module_calculation_type_pid": {
                        "type": "integer"
                    },
                    "module_weighting": {
                        "type": "integer"
                    },
                    "instance_type_id": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "moduleInstanceAssessments": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleInstanceAssessment"
                        }
                    },
                    "moduleInstanceStudents": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleInstanceStudent"
                        }
                    }
                },
                "type": "object"
            },
            "ModuleInstanceAssessment": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "module_instance_id": {
                        "type": "integer"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "weighting": {
                        "type": "number"
                    },
                    "picklist_item_id": {
                        "type": "integer"
                    },
                    "reassessment": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "gradeScale": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/GradeScale"
                    },
                    "picklistItem": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/PicklistItem"
                    }
                },
                "type": "object"
            },
            "ModuleInstanceStudent": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_instance_id": {
                        "type": "integer"
                    },
                    "student_uuid": {
                        "type": "string"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "is_repeat_module": {
                        "type": "integer"
                    },
                    "switched": {
                        "type": "integer"
                    },
                    "schedule_type_id": {
                        "type": "integer"
                    },
                    "moduleInstance": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ModuleInstance"
                    },
                    "studentuser": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/Student"
                    },
                    "moduleOutcomes": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleOutcome"
                        }
                    }
                },
                "type": "object"
            },
            "ModuleOutcome": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_instance_student_id": {
                        "type": "integer"
                    },
                    "raw_module_score": {
                        "type": "number"
                    },
                    "raw_stage_score": {
                        "type": "number"
                    },
                    "rounded_module_score": {
                        "type": "integer"
                    },
                    "weighted_module_score": {
                        "type": "number"
                    },
                    "module_outcome": {
                        "type": "string"
                    },
                    "english_exit_exemption_id": {
                        "type": "integer"
                    },
                    "overall_score": {
                        "type": "number"
                    },
                    "overall_score_label": {
                        "type": "string"
                    },
                    "speaking_score": {
                        "type": "number"
                    },
                    "speaking_score_label": {
                        "type": "string"
                    },
                    "reading_score": {
                        "type": "number"
                    },
                    "reading_score_label": {
                        "type": "string"
                    },
                    "writing_score": {
                        "type": "number"
                    },
                    "writing_score_label": {
                        "type": "string"
                    },
                    "listening_score": {
                        "type": "number"
                    },
                    "listening_score_label": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "module_attempt": {
                        "type": "integer"
                    },
                    "overall_score_str": {
                        "type": "string"
                    },
                    "speaking_score_str": {
                        "type": "string"
                    },
                    "reading_score_str": {
                        "type": "string"
                    },
                    "writing_score_str": {
                        "type": "string"
                    },
                    "listening_score_str": {
                        "type": "string"
                    },
                    "englishExitExemption": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/EnglishExitExemption"
                    },
                    "moduleInstanceStudent": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ModuleInstanceStudent"
                    },
                    "moduleOutcomeHistories": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleOutcomeHistory"
                        }
                    },
                    "studentModuleAssessments": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StudentModuleAssessment"
                        }
                    },
                    "studentUser": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/Student"
                    },
                    "originalHistory": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ModuleOutcomeHistory"
                    }
                },
                "type": "object"
            },
            "ModuleOutcomeHistory": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_outcome_id": {
                        "type": "integer"
                    },
                    "assessment_history_id": {
                        "type": "integer"
                    },
                    "score": {
                        "type": "number"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "status_id": {
                        "type": "number"
                    },
                    "deleted": {
                        "type": "number"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "status": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/Status"
                    },
                    "moduleOutcome": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ModuleOutcome"
                    },
                    "assessmentPickList": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/PicklistItem"
                    },
                    "studentModuleAssessmentHistory": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/StudentModuleAssessmentHistory"
                    }
                },
                "type": "object"
            },
            "PicklistItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "pick_list_type": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramOutcome": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "student_uuid": {
                        "type": "string"
                    },
                    "overall_score": {
                        "type": "number"
                    },
                    "credit_bearing_score": {
                        "type": "integer"
                    },
                    "english_score": {
                        "type": "number"
                    },
                    "english_score_label": {
                        "type": "string"
                    },
                    "speaking_score": {
                        "type": "number"
                    },
                    "speaking_score_label": {
                        "type": "string"
                    },
                    "reading_score": {
                        "type": "number"
                    },
                    "reading_score_label": {
                        "type": "string"
                    },
                    "writing_score": {
                        "type": "number"
                    },
                    "writing_score_label": {
                        "type": "string"
                    },
                    "listening_score": {
                        "type": "number"
                    },
                    "listening_score_label": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "english_score_str": {
                        "type": "string"
                    },
                    "speaking_score_str": {
                        "type": "string"
                    },
                    "reading_score_str": {
                        "type": "string"
                    },
                    "writing_score_str": {
                        "type": "string"
                    },
                    "listening_score_str": {
                        "type": "string"
                    },
                    "programOutcomeCompensations": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramOutcomeCompensation"
                        }
                    },
                    "moduleOutcomesForCalculation": {
                        "description": "Additional attribute (AA). An array of customized \n module outcome object that is used for calculation",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object"
            },
            "ProgramOutcomeCompensation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "score": {
                        "type": "number"
                    },
                    "status_id": {
                        "type": "integer"
                    },
                    "program_outcome_id": {
                        "type": "integer"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "programOutcome": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ProgramOutcome"
                    },
                    "status": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/Status"
                    }
                },
                "type": "object"
            },
            "Status": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "setting": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Student": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "student_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "forename": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "dateOfBirthTx": {
                        "type": "integer"
                    },
                    "roles": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StudentModuleAssessment": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_instance_assessment_id": {
                        "type": "integer"
                    },
                    "module_instance_student_id": {
                        "type": "integer"
                    },
                    "module_outcome_id": {
                        "type": "integer"
                    },
                    "weighting": {
                        "type": "number"
                    },
                    "assessment_score": {
                        "type": "number"
                    },
                    "weighted_assessment_score": {
                        "type": "number"
                    },
                    "assessment_outcome": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "tutor_confirmed": {
                        "type": "integer"
                    },
                    "reassessment": {
                        "type": "integer"
                    },
                    "reason_id": {
                        "type": "integer"
                    },
                    "attempt": {
                        "type": "integer"
                    },
                    "aff_document": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "moduleInstanceAssessment": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ModuleInstanceAssessment"
                    },
                    "moduleOutcome": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ModuleOutcome"
                    },
                    "studentModuleAssessmentHistories": {
                        "description": "Extra attribute (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StudentModuleAssessmentHistory"
                        }
                    },
                    "moduleInstanceStudent": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ModuleInstanceStudent"
                    },
                    "originalHistory": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/StudentModuleAssessmentHistory"
                    },
                    "latestHistory": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/StudentModuleAssessmentHistory"
                    },
                    "reason": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/Status"
                    },
                    "isEditable": {
                        "description": "Additional attribute (AA). Check if a student assessment can be edited",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "StudentModuleAssessmentHistory": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "assessment_score": {
                        "type": "number"
                    },
                    "assessment_outcome": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "student_module_assessment_id": {
                        "type": "integer"
                    },
                    "status_id": {
                        "type": "integer"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "status": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/Status"
                    },
                    "studentModuleAssessment": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/StudentModuleAssessment"
                    },
                    "moduleOutcomeHistory": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/ModuleOutcomeHistory"
                    }
                },
                "type": "object"
            },
            "StudentVerifiedEltOutcome": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "qualification_uuid": {
                        "type": "string"
                    },
                    "student_id": {
                        "type": "string"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "elt_type": {
                        "type": "string"
                    },
                    "elt_date": {
                        "type": "string"
                    },
                    "elt_verified": {
                        "type": "integer"
                    },
                    "elt_verified_date": {
                        "type": "string"
                    },
                    "overall_score": {
                        "type": "number"
                    },
                    "speaking_score": {
                        "type": "number"
                    },
                    "reading_score": {
                        "type": "number"
                    },
                    "writing_score": {
                        "type": "number"
                    },
                    "listening_score": {
                        "type": "number"
                    },
                    "elt_document": {
                        "type": "string"
                    },
                    "verification_document": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "integer"
                    },
                    "modified_by": {
                        "type": "integer"
                    },
                    "modified_at": {
                        "type": "integer"
                    },
                    "overall_score_str": {
                        "type": "integer"
                    },
                    "speaking_score_str": {
                        "type": "integer"
                    },
                    "reading_score_str": {
                        "type": "integer"
                    },
                    "writing_score_str": {
                        "type": "integer"
                    },
                    "listening_score_str": {
                        "type": "integer"
                    },
                    "studentUser": {
                        "description": "Extra attribute (EA)",
                        "$ref": "#/components/schemas/Student"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "description": "logged user token, You can got that one from KSS3 application",
                "name": "iPlanetDirectoryPro",
                "in": "header"
            }
        }
    },
    "externalDocs": {
        "description": "Yii2 Rest document for more information about 'fields, _withs' parameter below",
        "url": "https://www.yiiframework.com/doc/guide/2.0/en/rest-resources"
    }
}