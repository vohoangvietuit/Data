{
    "openapi": "3.0.0",
    "info": {
        "title": "Scheduling Microservice",
        "description": "Scheduling Microservice APIs",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8085",
            "description": "dev server"
        },
        {
            "url": "https://scheduling-apple-pub.kss-dev.kapintdc.com",
            "description": "Apple server"
        },
        {
            "url": "https://scheduling-carrot-pub.kss-dev.kapintdc.com",
            "description": "Carrot server"
        },
        {
            "url": "https://scheduling-banana-pub.kss-dev.kapintdc.com",
            "description": "Banana server"
        },
        {
            "url": "https://scheduling.kss-uat.kapintdc.com",
            "description": "UAT server"
        }
    ],
    "paths": {
        "/api/v1/attendances/calculate-attendances/{id}": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Calculate Attendance (kss_attendance)",
                "description": "Calculate Attendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of student (student_uuid)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "enrolmentId",
                        "in": "query",
                        "description": "Enrolment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "format",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "description": "Fields",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return an array",
                        "content": {
                            "Result": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/attendances/check-cancel-term": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Check cancel term",
                "description": "Check cancel term (kss_attendance)",
                "parameters": [
                    {
                        "name": "enrolmentId",
                        "in": "query",
                        "description": "Enrolment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "studentUuid",
                        "in": "query",
                        "description": "student uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startTerm",
                        "in": "query",
                        "description": "start term",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endTerm",
                        "in": "query",
                        "description": "end term",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modInsIds",
                        "in": "query",
                        "description": "modInsIds",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return an array",
                        "content": {
                            "True/False": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/attendances/get-module-instance-session": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Get module instance session (kss_attendance)",
                "description": "Get module instance session",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Fields to filter",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "student_uuid": {
                                    "type": "string"
                                },
                                "module_code": {
                                    "type": "string"
                                },
                                "start_date": {
                                    "type": "string"
                                },
                                "end_date": {
                                    "type": "string"
                                },
                                "enrolment_id": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return an array",
                        "content": {
                            "Result": {
                                "schema": {
                                    "properties": {
                                        "module_instance_id": {
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "start_date": {
                                            "type": "string"
                                        },
                                        "end_date": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/attendances/reset-as-new/{id}": {
            "put": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Reset as new (kss_attendance)",
                "description": "Update related fields and remove table absent by attendance_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "attendance_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "boolean",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Attendance"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/attendances/advanced-search": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Advance Search",
                "description": "Advance Search",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Filters to search",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "student_uuid": {
                                    "type": "string",
                                    "example": 1
                                },
                                "status": {
                                    "type": "string",
                                    "example": null
                                },
                                "absent": {
                                    "type": "integer",
                                    "example": null
                                },
                                "deleted": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "instance_type": {
                                    "type": "integer",
                                    "example": null
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Attendance records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Attendance"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/attendances/update-attendances": {
            "put": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Update Attendance (kss_attendance)",
                "description": "Update Attendance",
                "requestBody": {
                    "description": "Update Attendance",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "is_post_arrival_change": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "student_id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "id": {
                                            "type": "integer"
                                        },
                                        "instance_type": {
                                            "type": "integer"
                                        },
                                        "event_instance_session_id": {
                                            "type": "integer"
                                        },
                                        "event_instance_id": {
                                            "type": "integer"
                                        },
                                        "module_instance_session_id": {
                                            "type": "integer"
                                        },
                                        "module_instance_id": {
                                            "type": "integer"
                                        },
                                        "absent": {
                                            "type": "integer"
                                        },
                                        "auth_absent": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "first_posted_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Attendance Update",
                        "content": {
                            "True/False": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/event-students/bulk-create": {
            "post": {
                "tags": [
                    "EventStudent"
                ],
                "summary": "Bulk Create (kss_event_student)",
                "description": "Bulk Create",
                "requestBody": {
                    "description": "PBulk Create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "student_uuid": {
                                        "type": "string",
                                        "example": "3d66c912-c67f-4cb8-8a7d-382f2e276e57"
                                    },
                                    "enrolment_id": {
                                        "type": "integer",
                                        "example": 7678
                                    },
                                    "marked_absent": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "today_sessions": {
                                        "type": "string",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bulk Create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "results": {
                                            "properties": {
                                                "successes": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "enrolment_id": {
                                                                "type": "integer"
                                                            },
                                                            "student_uuid": {
                                                                "type": "string"
                                                            },
                                                            "event_id": {
                                                                "type": "integer"
                                                            },
                                                            "marked_absent": {
                                                                "type": "integer"
                                                            },
                                                            "today_sessions": {
                                                                "type": "string"
                                                            },
                                                            "created_by": {
                                                                "type": "string"
                                                            },
                                                            "modified_by": {
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "type": "string"
                                                            },
                                                            "modified_at": {
                                                                "type": "string"
                                                            },
                                                            "deleted": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "failures": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/event-students/bulk-delete/{id}": {
            "delete": {
                "tags": [
                    "EventStudent"
                ],
                "summary": "Bulk Delete (kss_event_student)",
                "description": "Bulk Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EventStudent record (kss_event_student)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "202": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/events/check-sessions": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Check session (kss_event)",
                "description": "Check session",
                "parameters": [
                    {
                        "name": "events",
                        "in": "query",
                        "description": "Event id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check session response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "today": {
                                                "type": "array",
                                                "items": {}
                                            },
                                            "has_past_session": {
                                                "type": "boolean"
                                            },
                                            "session_from": {
                                                "type": "string"
                                            },
                                            "session_to": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/events/export-template": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Export Template (kss_event)",
                "description": "Export Template",
                "responses": {
                    "200": {
                        "description": "Export Template response return null",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Export Template",
                "description": "Export Template",
                "requestBody": {
                    "description": "Export Template",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "institution_id": {
                                            "type": "integer",
                                            "example": ""
                                        },
                                        "type_id": {
                                            "type": "integer",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Export Template response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "link": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/events/import-bulk": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Import Bulk",
                "description": "Import Bulk",
                "responses": {
                    "200": {
                        "description": "Import Bulk response",
                        "content": {
                            "True/False": {
                                "schema": {
                                    "type": "boolean",
                                    "example": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Import Bulk (kss_event)",
                "description": "Import Bulk",
                "requestBody": {
                    "description": "Import Bulk",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "payload": {
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Import Bulk response",
                        "content": {
                            "True/False": {
                                "schema": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-sessions/email-template": {
            "get": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "Email Template (kss_module_instance_session)",
                "description": "Email Template",
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "print"
                    },
                    {
                        "name": "search_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "description": "View type",
                            "type": "string"
                        },
                        "example": "room"
                    },
                    {
                        "name": "room",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teacher",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enrolment_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2018-12-18"
                    },
                    {
                        "name": "show_empty_room",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "days_per_week",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "to_html",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "print_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "view_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "session_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "body": {
                                            "type": "string"
                                        },
                                        "cc": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "recipient": {
                                            "type": "string"
                                        },
                                        "params": {
                                            "properties": {
                                                "action": {
                                                    "type": "string"
                                                },
                                                "additionalAttachments": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "Email Template (kss_module_instance_session)",
                "description": "Email Template",
                "requestBody": {
                    "description": "Email Template",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request body",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "recipient": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "cc": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "bcc": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "enrolment_id": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "params": {
                                        "type": "array",
                                        "items": {}
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-sessions/print-sessions": {
            "get": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "Print session (kss_module_instance_session)",
                "description": "Print session",
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-sessions/print-timetable": {
            "get": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "Print timetable (kss_module_instance_session)",
                "description": "Print timetable",
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "print"
                    },
                    {
                        "name": "search_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "description": "View type",
                            "type": "string"
                        },
                        "example": "room"
                    },
                    {
                        "name": "room",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teacher",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enrolment_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2018-12-18"
                    },
                    {
                        "name": "show_empty_room",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "days_per_week",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "to_html",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "print_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "view_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "session_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "Print timetable",
                "description": "Print timetable",
                "requestBody": {
                    "description": "Print timetable",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Condition to filter",
                                "required": [
                                    "search_type",
                                    "start_date"
                                ],
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "example": "print"
                                    },
                                    "search_type": {
                                        "type": "string",
                                        "example": "room"
                                    },
                                    "teacher": {
                                        "type": "string",
                                        "example": "dd76470f-e0d4-4f92-af7a-e18942a3c952"
                                    },
                                    "enrolment_ids": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "institution": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2018-12-18"
                                    },
                                    "show_empty_room": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "days_per_week": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "to_html": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "print_type": {
                                        "type": "string",
                                        "example": "bulk-timetable-print"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances/check-sessions": {
            "post": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Check session (kss_module_instance)",
                "description": "Check session",
                "requestBody": {
                    "description": "Check session",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "moduleInstances": {
                                        "type": "array",
                                        "items": {}
                                    },
                                    "schedule_term_type": {
                                        "type": "integer"
                                    },
                                    "schedule_from": {
                                        "type": "string"
                                    },
                                    "schedule_to": {
                                        "type": "string"
                                    },
                                    "moduleInstanceStudents": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ModuleInstanceStudent"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Import Bulk response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "has_past_session": {
                                                "type": "boolean"
                                            },
                                            "has_today_session": {
                                                "type": "boolean"
                                            },
                                            "session_from": {
                                                "type": "string"
                                            },
                                            "session_to": {
                                                "type": "string"
                                            },
                                            "today": {
                                                "properties": {
                                                    "start_time": {
                                                        "type": "string"
                                                    },
                                                    "end_time": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances/export-template": {
            "post": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Export Template (kss_module_instance)",
                "description": "Export Template",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "module_institution_id": {
                                            "type": "integer"
                                        },
                                        "module_institution_code": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Emport Template response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "link": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances/get-term-module-details": {
            "post": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Get term module detail (kss_module_instance)",
                "description": "Get term module detail",
                "requestBody": {
                    "description": "Get term module detail",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enrolmentId": {
                                        "type": "integer"
                                    },
                                    "studentUuid": {
                                        "type": "string"
                                    },
                                    "termStartDate": {
                                        "type": "string"
                                    },
                                    "termEndDate": {
                                        "type": "string"
                                    },
                                    "termModules": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "module_code": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "module_instance_type_id": {
                                                    "type": "integer"
                                                },
                                                "schedule_type_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get term detail response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "properties": {
                                                    "schedule_history": {
                                                        "type": "string"
                                                    },
                                                    "attendance": {
                                                        "type": "string"
                                                    },
                                                    "module_status": {
                                                        "type": "string"
                                                    },
                                                    "score": {
                                                        "type": "string"
                                                    },
                                                    "attempt": {
                                                        "type": "string"
                                                    },
                                                    "instance_type_name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances/import-bulk": {
            "post": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Import Bulk (kss_module_instance)",
                "description": "Import Bulk",
                "requestBody": {
                    "description": "Import Bulk",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "payload": {
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Import Bulk response",
                        "content": {
                            "True/False": {
                                "schema": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students/remove-students": {
            "post": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Remove Students (kss_module_instance_student)",
                "description": "Remove Students",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Remove Student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students/schedule-students": {
            "post": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Schedule Students (kss_module_instance_student)",
                "description": "Schedule Students",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "schedule_type_id": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule Student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progress-bar/bulk-timetable-print": {
            "get": {
                "tags": [
                    "ProgressBar"
                ],
                "summary": "Bulk Timetable Print (kss_progress_bar)",
                "description": "Bulk Timetable Print",
                "parameters": [
                    {
                        "name": "preview",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": true
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": true
                    },
                    {
                        "name": "abort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bulk Timetable Print",
                        "content": {
                            "True/False": {
                                "schema": {
                                    "type": "boolean",
                                    "example": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progress-bar/have-progress-bar": {
            "get": {
                "tags": [
                    "ProgressBar"
                ],
                "summary": "Have progress bar (kss_progress_bar)",
                "description": "Have progress bar",
                "responses": {
                    "200": {
                        "description": "Have progress bar response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgressBar"
                ],
                "summary": "Have progress bar (kss_progress_bar)",
                "description": "Have progress bar",
                "responses": {
                    "200": {
                        "description": "Have progress bar response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/students/calculate-attendances/{id}": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Calculate Attendance (kss_student)",
                "description": "Calculate Attendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student record (kss_student.id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059eeee"
                    },
                    {
                        "name": "enrolmentId",
                        "in": "query",
                        "description": "Enrolment Id",
                        "required": true,
                        "schema": {
                            "type": "id"
                        },
                        "example": "12"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Caculate Attendance",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calculate Attendance response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "average": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "average_last_10": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "rolling_days_unauthorised_absences": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "analysis": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users/email-teacher/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Email Teacher (kss_user)",
                "description": "Email Teacher",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Session record (kss_user.id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059e1ee"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action of email teacher",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "html"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email teacher response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "recipient": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "cc": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "body": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Email Teacher",
                "description": "Email Teacher",
                "operationId": "api\\modules\\v1\\actions\\user\\EmailTeacherAction::run",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Session record (kss_user.id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059e1ee"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action of email teacher",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "send"
                    }
                ],
                "requestBody": {
                    "description": "Email Teacher",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Email Teacher",
                                "properties": {
                                    "attachments": {
                                        "type": "array",
                                        "items": {}
                                    },
                                    "cc": {
                                        "type": "string",
                                        "example": "abc@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email Teacher response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users/update-teacher/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update teacher (kss_user)",
                "description": "Update teacher",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the User record (kss_user)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059e1ee"
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "teacherInstitutions": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "institution_id": {
                                                    "type": "integer"
                                                },
                                                "is_personal_tutor": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "teacherExpertiseModules": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "module_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/absences": {
            "get": {
                "tags": [
                    "Absence"
                ],
                "summary": "Absence Index API (kss_absence)",
                "description": "Get List of Absence Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Absence** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "attendance_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "absence_type_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "absence_reason_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "absence_note": {
                                    "type": "string",
                                    "example": null
                                },
                                "supporting_documents": {
                                    "type": "string",
                                    "example": null
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Absence** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Absence** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Absence**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Absence records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Absence"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Absence"
                ],
                "summary": "Absence API (kss_absence)",
                "description": "Create a specific Absence and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "attendance_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "absence_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "absence_reason_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "absence_note": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "supporting_documents": {
                                        "type": "string",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Absence object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Absence"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/absences/{id}": {
            "get": {
                "tags": [
                    "Absence"
                ],
                "summary": "Absence API (kss_absence)",
                "description": "Get A Specific Absence Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Absence record (kss_absence.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Absence** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Absence**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Absence object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Absence"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Absence"
                ],
                "summary": "Absence API (kss_absence)",
                "description": "Update a specific Absence and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Absence record (kss_absence)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "attendance_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "absence_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "absence_reason_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "absence_note": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "supporting_documents": {
                                        "type": "string",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Absence object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Absence"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Absence"
                ],
                "summary": "Absence API (kss_absence)",
                "description": "Delete a specific Absence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Absence record (kss_absence)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/absence-reasons": {
            "get": {
                "tags": [
                    "AbsenceReason"
                ],
                "summary": "AbsenceReason Index API (kss_absence_reason)",
                "description": "Get List of AbsenceReason Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **AbsenceReason** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Illness"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **AbsenceReason** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AbsenceReason** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AbsenceReason**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of AbsenceReason records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AbsenceReason"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "AbsenceReason"
                ],
                "summary": "AbsenceReason API (kss_absence_reason)",
                "description": "Create a specific AbsenceReason and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Illness"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AbsenceReason object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbsenceReason"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/absence-reasons/{id}": {
            "get": {
                "tags": [
                    "AbsenceReason"
                ],
                "summary": "AbsenceReason API (kss_absence_reason)",
                "description": "Get A Specific AbsenceReason Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the AbsenceReason record (kss_absence_reason.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AbsenceReason** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AbsenceReason**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AbsenceReason object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbsenceReason"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "AbsenceReason"
                ],
                "summary": "AbsenceReason API (kss_absence_reason)",
                "description": "Update a specific AbsenceReason and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the AbsenceReason record (kss_absence_reason)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Illness"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AbsenceReason object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbsenceReason"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AbsenceReason"
                ],
                "summary": "AbsenceReason API (kss_absence_reason)",
                "description": "Delete a specific AbsenceReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the AbsenceReason record (kss_absence_reason)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/absence-types": {
            "get": {
                "tags": [
                    "AbsenceType"
                ],
                "summary": "AbsenceType Index API (kss_absence_type)",
                "description": "Get List of AbsenceType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **AbsenceType** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Unauthorised Absence"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **AbsenceType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AbsenceType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AbsenceType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of AbsenceType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AbsenceType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "AbsenceType"
                ],
                "summary": "AbsenceType API (kss_absence_type)",
                "description": "Create a specific AbsenceType and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Unauthorised Absence"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AbsenceType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbsenceType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/absence-types/{id}": {
            "get": {
                "tags": [
                    "AbsenceType"
                ],
                "summary": "AbsenceType API (kss_absence_type)",
                "description": "Get A Specific AbsenceType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the AbsenceType record (kss_absence_type.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AbsenceType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AbsenceType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AbsenceType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbsenceType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "AbsenceType"
                ],
                "summary": "AbsenceType API (kss_absence_type)",
                "description": "Update a specific AbsenceType and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the AbsenceType record (kss_absence_type)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Unauthorised Absence"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AbsenceType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbsenceType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AbsenceType"
                ],
                "summary": "AbsenceType API (kss_absence_type)",
                "description": "Delete a specific AbsenceType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the AbsenceType record (kss_absence_type)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/attendances": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Attendance Index API (kss_attendance)",
                "description": "Get List of Attendance Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Attendance** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "event_instance_session_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "event_instance_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "module_instance_session_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "module_instance_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "term_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "student_uuid": {
                                    "type": "string",
                                    "example": "6dd5fdb4-55a3-4e5e-b8a8-03076697cf91"
                                },
                                "instance_type": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "cause_concern": {
                                    "type": "integer",
                                    "example": null
                                },
                                "status": {
                                    "type": "string",
                                    "example": "Absent"
                                },
                                "absent": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "late": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "left_early": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "deleted": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": 7679
                                },
                                "first_posted_at": {
                                    "type": "string",
                                    "example": "2020-08-27"
                                },
                                "module_instance_student_id": {
                                    "type": "integer"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Attendance** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Attendance** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Attendance**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Attendance records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Attendance"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Attendance API (kss_attendance)",
                "description": "Create a specific Attendance and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_instance_session_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "event_instance_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "module_instance_session_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "module_instance_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "term_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "student_uuid": {
                                        "type": "string",
                                        "example": "6dd5fdb4-55a3-4e5e-b8a8-03076697cf91"
                                    },
                                    "instance_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "cause_concern": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Absent"
                                    },
                                    "absent": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "late": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "left_early": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "deleted": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "enrolment_id": {
                                        "type": "integer",
                                        "example": 7679
                                    },
                                    "first_posted_at": {
                                        "type": "string"
                                    },
                                    "module_instance_student_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attendance object",
                        "content": {
                            "True/False": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/attendances/{id}": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Attendance API (kss_attendance)",
                "description": "Get A Specific Attendance Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Attendance record (kss_attendance.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Attendance** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Attendance**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Attendance API (kss_attendance)",
                "description": "Delete a specific Attendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Attendance record (kss_attendance)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/awards": {
            "get": {
                "tags": [
                    "Award"
                ],
                "summary": "Award Index API (kss_award)",
                "description": "Get List of Award Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Award** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 582
                                },
                                "award_code": {
                                    "type": "string",
                                    "example": "FC BLSS"
                                },
                                "award_name": {
                                    "type": "string",
                                    "example": "Foundation Certificate for Business, Law and Social Sciences"
                                },
                                "credits": {
                                    "type": "integer",
                                    "example": "0"
                                },
                                "award_type_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": null
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": null
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **Award** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **Award** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **Award**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Award records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Award"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Award"
                ],
                "summary": "Award API (kss_award)",
                "description": "Create a specific Award and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "award_code": {
                                        "type": "string"
                                    },
                                    "award_name": {
                                        "type": "string"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "award_type_pid": {
                                        "type": "integer"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Award object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Award"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/awards/{id}": {
            "get": {
                "tags": [
                    "Award"
                ],
                "summary": "Award API (kss_award)",
                "description": "Get A Specific Award Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Award record (kss_award.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **Award** to get list of extra attributes.\n                 *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n            specific attributes separate by a comma. Please reference to **Award**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Award object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Award"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Award"
                ],
                "summary": "Award API (kss_award)",
                "description": "Update a specific Award and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Award record (kss_award)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "award_code": {
                                        "type": "string"
                                    },
                                    "award_name": {
                                        "type": "string"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "award_type_pid": {
                                        "type": "integer"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Award object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Award"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Award"
                ],
                "summary": "Award API (kss_award)",
                "description": "Delete a specific Award",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Award record (kss_award)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/events": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Event Index API (kss_event)",
                "description": "Get List of Event Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Event** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_id": {
                                    "type": "integer",
                                    "example": 6
                                },
                                "type_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "code": {
                                    "type": "string",
                                    "example": "Apple_event1_27080012020"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Apple_event1_27080012020Name"
                                },
                                "size": {
                                    "type": "integer",
                                    "example": 12
                                },
                                "instance": {
                                    "type": "string",
                                    "example": "Apple_event1_27080012020Ins"
                                },
                                "attendance_taken": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "attendance_average": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "status": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Event** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Event** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Event**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Event records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Event API (kss_event)",
                "description": "Create a specific Event and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer",
                                        "example": 6
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "Apple_event1_27080012020"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Apple_event1_27080012020Name"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "example": 12
                                    },
                                    "instance": {
                                        "type": "string",
                                        "example": "Apple_event1_27080012020Ins"
                                    },
                                    "attendance_taken": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "attendance_average": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/events/{id}": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Event API (kss_event)",
                "description": "Get A Specific Event Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Event record (kss_event.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Event** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Event**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Event API (kss_event)",
                "description": "Update a specific Event and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Event record (kss_event)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer",
                                        "example": 6
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "Apple_event1_27080012020"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Apple_event1_27080012020Name"
                                    },
                                    "size": {
                                        "type": "integer",
                                        "example": 12
                                    },
                                    "instance": {
                                        "type": "string",
                                        "example": "Apple_event1_27080012020Ins"
                                    },
                                    "attendance_taken": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "attendance_average": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Event"
                ],
                "summary": "Event API (kss_event)",
                "description": "Delete a specific Event",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Event record (kss_event)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/event-sessions": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Session Index API (kss_event_session)",
                "description": "Get List of Session Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Session** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "event_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "date": {
                                    "type": "string",
                                    "example": "2018-11-16"
                                },
                                "start_time": {
                                    "type": "string",
                                    "example": "16:35"
                                },
                                "end_time": {
                                    "type": "string",
                                    "example": "16:45"
                                },
                                "room_id": {
                                    "type": "integer",
                                    "example": 467
                                },
                                "location": {
                                    "type": "string",
                                    "example": "L1"
                                },
                                "teacher_uuid": {
                                    "type": "string",
                                    "example": "dd76470f-e0d4-4f92-af7a-e18942a3c952"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Session** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Session** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Session**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Session records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Session"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Session"
                ],
                "summary": "Session API (kss_event_session)",
                "description": "Create a specific Session and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "example": "2018-11-16"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "example": "16:35"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "example": "16:45"
                                    },
                                    "room_id": {
                                        "type": "integer",
                                        "example": 467
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "L1"
                                    },
                                    "teacher_uuid": {
                                        "type": "string",
                                        "example": "dd76470f-e0d4-4f92-af7a-e18942a3c952"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/event-sessions/{id}": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Session API (kss_event_session)",
                "description": "Get A Specific Session Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Session record (kss_event_session.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Session** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Session**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Session"
                ],
                "summary": "Session API (kss_event_session)",
                "description": "Update a specific Session and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Session record (kss_event_session)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "example": "2018-11-16"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "example": "16:35"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "example": "16:45"
                                    },
                                    "room_id": {
                                        "type": "integer",
                                        "example": 467
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "L1"
                                    },
                                    "teacher_uuid": {
                                        "type": "string",
                                        "example": "dd76470f-e0d4-4f92-af7a-e18942a3c952"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Session"
                ],
                "summary": "Session API (kss_event_session)",
                "description": "Delete a specific Session",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Session record (kss_event_session)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/event-students": {
            "get": {
                "tags": [
                    "EventStudent"
                ],
                "summary": "EventStudent Index API (kss_event_student)",
                "description": "Get List of EventStudent Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EventStudent** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "event_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "student_uuid": {
                                    "type": "string",
                                    "example": "3d66c912-c67f-4cb8-8a7d-382f2e276e57"
                                },
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": 7678
                                },
                                "marked_absent": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "today_sessions": {
                                    "type": "string",
                                    "example": null
                                },
                                "deleted": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EventStudent** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EventStudent** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EventStudent**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EventStudent records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EventStudent"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EventStudent"
                ],
                "summary": "EventStudent API (kss_event_student)",
                "description": "Create a specific EventStudent and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "student_uuid": {
                                        "type": "string",
                                        "example": "3d66c912-c67f-4cb8-8a7d-382f2e276e57"
                                    },
                                    "enrolment_id": {
                                        "type": "integer",
                                        "example": 7678
                                    },
                                    "marked_absent": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "today_sessions": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "deleted": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "EventStudent object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventStudent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/event-students/{id}": {
            "get": {
                "tags": [
                    "EventStudent"
                ],
                "summary": "EventStudent API (kss_event_student)",
                "description": "Get A Specific EventStudent Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EventStudent record (kss_event_student.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EventStudent** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EventStudent**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EventStudent object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventStudent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EventStudent"
                ],
                "summary": "EventStudent API (kss_event_student)",
                "description": "Update a specific EventStudent and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EventStudent record (kss_event_student)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "student_uuid": {
                                        "type": "string",
                                        "example": "3d66c912-c67f-4cb8-8a7d-382f2e276e57"
                                    },
                                    "enrolment_id": {
                                        "type": "integer",
                                        "example": 7678
                                    },
                                    "marked_absent": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "today_sessions": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "deleted": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "EventStudent object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventStudent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EventStudent"
                ],
                "summary": "EventStudent API (kss_event_student)",
                "description": "Delete a specific EventStudent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EventStudent record (kss_event_student)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/event-types": {
            "get": {
                "tags": [
                    "Type"
                ],
                "summary": "Type Index API (kss_event_type)",
                "description": "Get List of Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Type** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Learning Support"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Type** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Type** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Type**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Type records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Type"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Type"
                ],
                "summary": "Type API (kss_event_type)",
                "description": "Create a specific Type and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Type"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/event-types/{id}": {
            "get": {
                "tags": [
                    "Type"
                ],
                "summary": "Type API (kss_event_type)",
                "description": "Get A Specific Type Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Type record (kss_event_type.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Type** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Type**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Type"
                ],
                "summary": "Type API (kss_event_type)",
                "description": "Update a specific Type and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Type record (kss_event_type)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Learning Support"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Type"
                ],
                "summary": "Type API (kss_event_type)",
                "description": "Delete a specific Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Type record (kss_event_type)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/grade-scales": {
            "get": {
                "tags": [
                    "GradeScale"
                ],
                "summary": "Grade Scales Index API (kss_grade_scale)",
                "description": "Get List of Grade Scale Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **GradeScale** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 29
                                },
                                "code": {
                                    "type": "string",
                                    "example": "40%EANCB"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "40% English Attainment (NCB)"
                                },
                                "grade_scale_type": {
                                    "type": "string",
                                    "example": "Module"
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **GradeScale** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **GradeScale** to get list of extra attributes.\n                 *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **GradeScale**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of GradeScale records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GradeScale"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "GradeScale"
                ],
                "summary": "GradeScale API (kss_grade_scale)",
                "description": "Create a specific GradeScale and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "grade_scale_type": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GradeScale object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScale"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/grade-scales/{id}": {
            "get": {
                "tags": [
                    "GradeScale"
                ],
                "summary": "GradeScale API (kss_grade_scale)",
                "description": "Get A Specific GradeScale Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the GradeScale record (kss_grade_scale.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **GradeScale** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **GradeScale**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GradeScale object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScale"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GradeScale"
                ],
                "summary": "GradeScale API (kss_grade_scale)",
                "description": "Update a specific GradeScale and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the GradeScale record (kss_grade_scale)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "grade_scale_type": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GradeScale object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScale"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "GradeScale"
                ],
                "summary": "GradeScale API (kss_grade_scale)",
                "description": "Delete a specific GradeScale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the GradeScale record (kss_grade_scale)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/grade-scale-details": {
            "get": {
                "tags": [
                    "GradeScaleDetail"
                ],
                "summary": "Grade Scale Detail Index API (kss_grade_scale_detail)",
                "description": "Get List of Grade Scale Detail Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **GradeScaleDetail** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "grade_scale_id": {
                                    "type": "integer",
                                    "example": 17
                                },
                                "code": {
                                    "type": "string",
                                    "example": "M"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Met Attainment Target"
                                },
                                "lower_limit": {
                                    "type": "number",
                                    "example": "40.00"
                                },
                                "upper_limit": {
                                    "type": "number",
                                    "example": null
                                },
                                "credits_earned": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "Krishna Kusalavan"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "ETL Loader"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **GradeScaleDetail** schema to get correct attributes.\n                 *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **GradeScaleDetail** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **GradeScaleDetail**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of GradeScaleDetail records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GradeScaleDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "GradeScaleDetail"
                ],
                "summary": "GradeScaleDetail API (kss_grade_scale_detail)",
                "description": "Create a specific GradeScaleDetail and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "lower_limit": {
                                        "type": "number"
                                    },
                                    "upper_limit": {
                                        "type": "number"
                                    },
                                    "credits_earned": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GradeScaleDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScaleDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/grade-scale-details/{id}": {
            "get": {
                "tags": [
                    "GradeScaleDetail"
                ],
                "summary": "GradeScaleDetail API (kss_grade_scale_detail)",
                "description": "Get A Specific GradeScaleDetail Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the GradeScaleDetail record (kss_grade_scale_detai.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **GradeScaleDetail** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **GradeScaleDetail**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GradeScaleDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScaleDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GradeScaleDetail"
                ],
                "summary": "GradeScaleDetail API (kss_grade_scale_detail)",
                "description": "Update a specific GradeScaleDetail and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the GradeScaleDetail record (kss_grade_scale_detail)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "lower_limit": {
                                        "type": "number"
                                    },
                                    "upper_limit": {
                                        "type": "number"
                                    },
                                    "credits_earned": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "GradeScaleDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScaleDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "GradeScaleDetail"
                ],
                "summary": "GradeScaleDetail API (kss_grade_scale_detail)",
                "description": "Delete a specific GradeScaleDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the GradeScaleDetail record (kss_grade_scale_detail)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/instance-types": {
            "get": {
                "tags": [
                    "InstanceType"
                ],
                "summary": "Instance Type Index API (kss_instance_type)",
                "description": "Get List of Instance Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **InstanceType** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "description": "Class InstanceTypeController",
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "description": "Class InstanceTypeController",
                                    "type": "string",
                                    "example": "Class"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **InstanceType** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **InstanceType** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **InstanceType**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Instance Type records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "description": "Class InstanceTypeController",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InstanceType"
                                            }
                                        },
                                        "_links": {
                                            "description": "Class InstanceTypeController",
                                            "properties": {
                                                "self": {
                                                    "description": "Class InstanceTypeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class InstanceTypeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "description": "Class InstanceTypeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class InstanceTypeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "description": "Class InstanceTypeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class InstanceTypeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "description": "Class InstanceTypeController",
                                            "properties": {
                                                "totalCount": {
                                                    "description": "Class InstanceTypeController",
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "description": "Class InstanceTypeController",
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "description": "Class InstanceTypeController",
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "description": "Class InstanceTypeController",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "InstanceType"
                ],
                "summary": "Instance Type API (kss_instance_type)",
                "description": "Create a specific Instance Type and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Instance Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/instance-types/{id}": {
            "get": {
                "tags": [
                    "InstanceType"
                ],
                "summary": "Instance Type API (kss_instance_type)",
                "description": "Get A Specific Instance Type Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Instance Type record (kss_instance_type.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **InstanceType** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **InstanceType**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InstanceType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "InstanceType"
                ],
                "summary": "Instance Type Index API (kss_instance_type)",
                "description": "Update a specific Instance Type and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Instance Type record (kss_instance_type)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                 **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Instance Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "InstanceType"
                ],
                "summary": "Instance Type Index API (kss_instance_type)",
                "description": "Delete a specific Instance Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Instance Type record (kss_instance_type)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutions": {
            "get": {
                "tags": [
                    "Institution"
                ],
                "summary": "Institution Index API (kss_institution)",
                "description": "Get List of Institution Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Institution** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_type": {
                                    "type": "string",
                                    "example": "college"
                                },
                                "institution_code": {
                                    "type": "string",
                                    "example": "BUIntCol"
                                },
                                "institution_name": {
                                    "type": "string",
                                    "example": "Bournemouth University International College"
                                },
                                "institution_short_name": {
                                    "type": "string",
                                    "example": "Bournemouth University International College"
                                },
                                "country_code": {
                                    "type": "string",
                                    "example": "GBR"
                                },
                                "study_contact_detail_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "registered_contact_detail_id": {
                                    "type": "integer",
                                    "example": 12
                                },
                                "registered_company_name": {
                                    "type": "string",
                                    "example": "Kaplan Bournemouth Limited"
                                },
                                "registered_company_number": {
                                    "type": "string",
                                    "example": "8291927"
                                },
                                "licence_key": {
                                    "type": "string",
                                    "example": "5JDJGYXH8"
                                },
                                "acl_code": {
                                    "type": "string",
                                    "example": "2HE832"
                                },
                                "accommodation_options": {
                                    "type": "string",
                                    "example": "10"
                                },
                                "program_name_first": {
                                    "type": "integer",
                                    "example": "0"
                                },
                                "brp_collection_address_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "expected_living_cost": {
                                    "type": "number",
                                    "example": 1015
                                },
                                "currency_code": {
                                    "type": "string",
                                    "example": "10"
                                },
                                "signatory_title": {
                                    "type": "string",
                                    "example": "Vice President, Student Recruitment"
                                },
                                "signatory_salutation": {
                                    "type": "string",
                                    "example": "MS"
                                },
                                "signatory_forename": {
                                    "type": "string",
                                    "example": "Clare"
                                },
                                "signatory_surname": {
                                    "type": "string",
                                    "example": "Rawlins"
                                },
                                "signatory_logo_image": {
                                    "type": "string",
                                    "example": "/image/path"
                                },
                                "privacy_statement_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/privacy/"
                                },
                                "terms_conditions_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/how-to-apply/uk-universities/terms-and-conditions/"
                                },
                                "accommodation_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/bournemouth/accommodation"
                                },
                                "student_life_url": {
                                    "type": "string",
                                    "example": "http://www.kaplanpathways.life/Bournemouth"
                                },
                                "payment_url": {
                                    "type": "string",
                                    "example": "https://buintcollege.flywire.com/"
                                },
                                "pre_arrival_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/bournemouth-info"
                                },
                                "offer_letter_banner_image": {
                                    "type": "string",
                                    "example": "/image/path"
                                },
                                "program_delivery_pid": {
                                    "type": "integer",
                                    "example": 20
                                },
                                "promotion_text": {
                                    "type": "string",
                                    "example": null
                                },
                                "branding_image": {
                                    "type": "string",
                                    "example": "/image/path"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "active"
                                },
                                "institution_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/colleges/bournemouth-university-international-college/"
                                },
                                "fees_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/Fees/"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **Institution** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **Institution** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **Institution**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List ofInstitution records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Institution"
                ],
                "summary": "Institution API (kss_institution)",
                "description": "Create a specific Institution and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_type": {
                                        "type": "string"
                                    },
                                    "institution_code": {
                                        "type": "string"
                                    },
                                    "institution_name": {
                                        "type": "string"
                                    },
                                    "institution_short_name": {
                                        "type": "string"
                                    },
                                    "country_code": {
                                        "type": "string"
                                    },
                                    "study_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "registered_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "registered_company_name": {
                                        "type": "string"
                                    },
                                    "registered_company_number": {
                                        "type": "string"
                                    },
                                    "licence_key": {
                                        "type": "string"
                                    },
                                    "acl_code": {
                                        "type": "string"
                                    },
                                    "accommodation_options": {
                                        "type": "string"
                                    },
                                    "program_name_first": {
                                        "type": "integer"
                                    },
                                    "brp_collection_address_id": {
                                        "type": "integer"
                                    },
                                    "expected_living_cost": {
                                        "type": "number"
                                    },
                                    "currency_code": {
                                        "type": "string"
                                    },
                                    "signatory_title": {
                                        "type": "string"
                                    },
                                    "signatory_salutation": {
                                        "type": "string"
                                    },
                                    "signatory_forename": {
                                        "type": "string"
                                    },
                                    "signatory_surname": {
                                        "type": "string"
                                    },
                                    "signatory_logo_image": {
                                        "type": "string"
                                    },
                                    "privacy_statement_url": {
                                        "type": "string"
                                    },
                                    "terms_conditions_url": {
                                        "type": "string"
                                    },
                                    "accommodation_url": {
                                        "type": "string"
                                    },
                                    "student_life_url": {
                                        "type": "string"
                                    },
                                    "payment_url": {
                                        "type": "string"
                                    },
                                    "pre_arrival_url": {
                                        "type": "string"
                                    },
                                    "offer_letter_banner_image": {
                                        "type": "string"
                                    },
                                    "program_delivery_pid": {
                                        "type": "integer"
                                    },
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "branding_image": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "institution_url": {
                                        "type": "string"
                                    },
                                    "fees_url": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutions/{id}": {
            "get": {
                "tags": [
                    "Institution"
                ],
                "summary": "Institution API (kss_institution)",
                "description": "Get A Specific Institution Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Institution record (kss_institution.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n            Please reference to **Institution** to get list of extra attributes.\n            *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n            specific attributes separate by a comma. Please reference to **Institution**\n            to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Institution"
                ],
                "summary": "Institution API (kss_institution)",
                "description": "Update a specific ModuleInstanceSession and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Institution record (kss_module_instance_session)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_type": {
                                        "type": "string"
                                    },
                                    "institution_code": {
                                        "type": "string"
                                    },
                                    "institution_name": {
                                        "type": "string"
                                    },
                                    "institution_short_name": {
                                        "type": "string"
                                    },
                                    "country_code": {
                                        "type": "string"
                                    },
                                    "study_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "registered_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "registered_company_name": {
                                        "type": "string"
                                    },
                                    "registered_company_number": {
                                        "type": "string"
                                    },
                                    "licence_key": {
                                        "type": "string"
                                    },
                                    "acl_code": {
                                        "type": "string"
                                    },
                                    "accommodation_options": {
                                        "type": "string"
                                    },
                                    "program_name_first": {
                                        "type": "integer"
                                    },
                                    "brp_collection_address_id": {
                                        "type": "integer"
                                    },
                                    "expected_living_cost": {
                                        "type": "number"
                                    },
                                    "currency_code": {
                                        "type": "string"
                                    },
                                    "signatory_title": {
                                        "type": "string"
                                    },
                                    "signatory_salutation": {
                                        "type": "string"
                                    },
                                    "signatory_forename": {
                                        "type": "string"
                                    },
                                    "signatory_surname": {
                                        "type": "string"
                                    },
                                    "signatory_logo_image": {
                                        "type": "string"
                                    },
                                    "privacy_statement_url": {
                                        "type": "string"
                                    },
                                    "terms_conditions_url": {
                                        "type": "string"
                                    },
                                    "accommodation_url": {
                                        "type": "string"
                                    },
                                    "student_life_url": {
                                        "type": "string"
                                    },
                                    "payment_url": {
                                        "type": "string"
                                    },
                                    "pre_arrival_url": {
                                        "type": "string"
                                    },
                                    "offer_letter_banner_image": {
                                        "type": "string"
                                    },
                                    "program_delivery_pid": {
                                        "type": "integer"
                                    },
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "branding_image": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "institution_url": {
                                        "type": "string"
                                    },
                                    "fees_url": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Institution"
                ],
                "summary": "Institution API (kss_institution)",
                "description": "Delete a specific Institution",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Institution record (kss_institution)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/modules": {
            "get": {
                "tags": [
                    "Module"
                ],
                "summary": "Module Index API (kss_module)",
                "description": "Get List of Module  Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Module** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 582
                                },
                                "module_code": {
                                    "type": "integer",
                                    "example": "FC002"
                                },
                                "module_name": {
                                    "type": "string",
                                    "example": "Art and Design Structured Project - 1"
                                },
                                "credits": {
                                    "type": "integer",
                                    "example": 12
                                },
                                "module_price": {
                                    "type": "number",
                                    "example": null
                                },
                                "currency_code": {
                                    "type": "integer",
                                    "example": null
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **Module** schema to get correct attributes.\n                 *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **Module** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n            specific attributes separate by a comma. Please reference to **Module**\n            to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Module"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Module"
                ],
                "summary": "Module API (kss_module)",
                "description": "Create a specific Module and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_code": {
                                        "type": "integer"
                                    },
                                    "module_name": {
                                        "type": "string"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "module_price": {
                                        "type": "number"
                                    },
                                    "currency_code": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/modules/{id}": {
            "get": {
                "tags": [
                    "Module"
                ],
                "summary": "Module API (kss_module)",
                "description": "Get A Specific Module Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n             Please reference to **Module** to get list of extra attributes.\n            *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **Module**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Module"
                ],
                "summary": "Module API (kss_module)",
                "description": "Update a specific Module and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_code": {
                                        "type": "integer"
                                    },
                                    "module_name": {
                                        "type": "string"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "module_price": {
                                        "type": "number"
                                    },
                                    "currency_code": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Module"
                ],
                "summary": "Module API (kss_module)",
                "description": "Delete a specific Module",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances": {
            "get": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "ModuleInstance Index API (kss_module_instance)",
                "description": "Get List of ModuleInstance Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleInstance** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "proc_institution_id": {
                                    "type": "integer",
                                    "example": 7
                                },
                                "proc_award_id": {
                                    "type": "integer",
                                    "example": 1001
                                },
                                "proc_program_id": {
                                    "type": "integer",
                                    "example": 12369
                                },
                                "proc_program_intake_id": {
                                    "type": "integer",
                                    "example": 19261
                                },
                                "intake_month_year": {
                                    "type": "string",
                                    "example": "2020-06-01"
                                },
                                "proc_program_intake_term_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "proc_program_intake_module_type_id": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "proc_program_intake_module_id": {
                                    "type": "integer",
                                    "example": 19891
                                },
                                "proc_grade_scale_id": {
                                    "type": "integer",
                                    "example": 27
                                },
                                "module_code": {
                                    "type": "string",
                                    "example": "207"
                                },
                                "module_name": {
                                    "type": "string",
                                    "example": "Independent and Collaborative Study"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Test_MI"
                                },
                                "class_size": {
                                    "type": "string",
                                    "example": "5"
                                },
                                "instance_type_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "active": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "stage": {
                                    "type": "integer",
                                    "example": null
                                },
                                "module_weighting": {
                                    "type": "integer",
                                    "example": null
                                },
                                "module_calculation_type_pid": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "credits": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ModuleInstance** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ModuleInstance** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ModuleInstance**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ModuleInstance records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleInstance"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "ModuleInstance API (kss_module_instance)",
                "description": "Create a specific ModuleInstance and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "moduleInstanceSessions": {
                                        "$ref": "#/components/schemas/ModuleInstance"
                                    },
                                    "moduleInstanceAssessments": {
                                        "$ref": "#/components/schemas/ModuleInstanceAssessment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ModuleInstance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances/{id}": {
            "get": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "ModuleInstance API (kss_module_instance)",
                "description": "Get A Specific ModuleInstance Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ModuleInstance record (kss_module_instance.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ModuleInstance** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ModuleInstance**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ModuleInstance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "ModuleInstance API (kss_module_instance)",
                "description": "Update a specific ModuleInstance and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ModuleInstance record (kss_module_instance)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "proc_institution_id": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "proc_award_id": {
                                        "type": "integer",
                                        "example": 1001
                                    },
                                    "proc_program_id": {
                                        "type": "integer",
                                        "example": 12369
                                    },
                                    "proc_program_intake_id": {
                                        "type": "integer",
                                        "example": 19261
                                    },
                                    "intake_month_year": {
                                        "type": "string",
                                        "example": "2020-06-01"
                                    },
                                    "proc_program_intake_term_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "proc_program_intake_module_type_id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "proc_program_intake_module_id": {
                                        "type": "integer",
                                        "example": 19891
                                    },
                                    "proc_grade_scale_id": {
                                        "type": "integer",
                                        "example": 27
                                    },
                                    "module_code": {
                                        "type": "string",
                                        "example": "207"
                                    },
                                    "module_name": {
                                        "type": "string",
                                        "example": "Independent and Collaborative Study"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Test_MI"
                                    },
                                    "class_size": {
                                        "type": "string",
                                        "example": "5"
                                    },
                                    "instance_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "active": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "stage": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "module_weighting": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "module_calculation_type_pid": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "credits": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ModuleInstance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "ModuleInstance API (kss_module_instance)",
                "description": "Delete a specific ModuleInstance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ModuleInstance record (kss_module_instance)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instances/search": {
            "get": {
                "tags": [
                    "ModuleInstance"
                ],
                "summary": "Search Module Instance",
                "description": "Search Module Instance",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleInstance** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "proc_institution_id": {
                                    "type": "integer",
                                    "example": 7
                                },
                                "proc_award_id": {
                                    "type": "integer",
                                    "example": 1001
                                },
                                "proc_program_id": {
                                    "type": "integer",
                                    "example": 12369
                                },
                                "proc_program_intake_id": {
                                    "type": "integer",
                                    "example": 19261
                                },
                                "intake_month_year": {
                                    "type": "string",
                                    "example": "2020-06-01"
                                },
                                "proc_program_intake_term_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "proc_program_intake_module_type_id": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "proc_program_intake_module_id": {
                                    "type": "integer",
                                    "example": 19891
                                },
                                "proc_grade_scale_id": {
                                    "type": "integer",
                                    "example": 27
                                },
                                "module_code": {
                                    "type": "string",
                                    "example": "207"
                                },
                                "module_name": {
                                    "type": "string",
                                    "example": "Independent and Collaborative Study"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Test_MI"
                                },
                                "class_size": {
                                    "type": "string",
                                    "example": "5"
                                },
                                "instance_type_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "active": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "stage": {
                                    "type": "integer",
                                    "example": null
                                },
                                "module_weighting": {
                                    "type": "integer",
                                    "example": null
                                },
                                "module_calculation_type_pid": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "credits": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ModuleInstance** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ModuleInstance** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ModuleInstance**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ModuleInstance records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleInstance"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-sessions": {
            "get": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "Module Instance Session Index API (kss_module_instance_session)",
                "description": "Get List of Module Instance Session Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleInstanceSession** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 582
                                },
                                "module_instance_id": {
                                    "type": "integer",
                                    "example": 267
                                },
                                "date": {
                                    "type": "string",
                                    "example": "2018-11-16"
                                },
                                "start_time": {
                                    "type": "string",
                                    "example": "16:35"
                                },
                                "end_time": {
                                    "type": "string",
                                    "example": "16:45"
                                },
                                "session_type_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "room_id": {
                                    "type": "integer",
                                    "example": 81
                                },
                                "teacher_uuid": {
                                    "type": "string",
                                    "example": "dd76470f-e0d4-4f92-af7a-e18942a3c952"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **ModuleInstanceSession** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **ModuleInstanceSession** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **ModuleInstanceSession**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Instance Session records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleInstanceSession"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "ModuleInstanceSession API (kss_module_instance_session)",
                "description": "Create a specific ModuleInstanceSession and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_instance_id": {
                                        "type": "integer"
                                    },
                                    "date": {
                                        "type": "string"
                                    },
                                    "start_time": {
                                        "type": "string"
                                    },
                                    "end_time": {
                                        "type": "string"
                                    },
                                    "session_type_id": {
                                        "type": "integer"
                                    },
                                    "room_id": {
                                        "type": "integer"
                                    },
                                    "teacher_uuid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ModuleInstanceSession object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstanceSession"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-sessions/{id}": {
            "get": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "Module Instance Session API (kss_module_instance_session)",
                "description": "Get A Specific Module Instance Session Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Session record (kss_module_instance_session.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **ModuleInstanceSession** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **ModuleInstanceSession**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ModuleInstanceSession object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstanceSession"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "ModuleInstanceSession API (kss_module_instance_session)",
                "description": "Update a specific ModuleInstanceSession and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ModuleInstanceSession record (kss_module_instance_session)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_instance_id": {
                                        "type": "integer"
                                    },
                                    "date": {
                                        "type": "string"
                                    },
                                    "start_time": {
                                        "type": "string"
                                    },
                                    "end_time": {
                                        "type": "string"
                                    },
                                    "session_type_id": {
                                        "type": "integer"
                                    },
                                    "room_id": {
                                        "type": "integer"
                                    },
                                    "teacher_uuid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ModuleInstanceSession object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstanceSession"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModuleInstanceSession"
                ],
                "summary": "ModuleInstanceSession API (kss_module_instance_session)",
                "description": "Delete a specific ModuleInstanceSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ModuleInstanceSession record (kss_module_instance_session)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students": {
            "get": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student Index API (kss_module_instance_student)",
                "description": "Get List of Module Instance Student Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ModuleInstanceStudent** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "integer",
                                    "example": 1
                                },
                                "module_instance_id": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "integer",
                                    "example": 1
                                },
                                "student_uuid": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "string",
                                    "example": "6dd5fdb4-55a3-4e5e-b8a8-03076697cf91"
                                },
                                "enrolment_id": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "integer",
                                    "example": "7679"
                                },
                                "registered_at": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "string",
                                    "example": "2020-08-27 06:50:49.0"
                                },
                                "schedule_type_id": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "integer",
                                    "example": 18
                                },
                                "schedule_term_type": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "string",
                                    "example": "FULL_TERM"
                                },
                                "schedule_from": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "string",
                                    "example": null
                                },
                                "schedule_to": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "string",
                                    "example": null
                                },
                                "deleted": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "integer",
                                    "example": 0
                                },
                                "switched": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "integer",
                                    "example": 0
                                },
                                "marked_absent": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "integer",
                                    "example": 1
                                },
                                "today_sessions": {
                                    "description": "Class ModuleInstanceStudentController",
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **ModuleInstanceStudent** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **ModuleInstanceStudent** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **ModuleInstanceStudent**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Instance Student records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "description": "Class ModuleInstanceStudentController",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModuleInstanceStudent"
                                            }
                                        },
                                        "_links": {
                                            "description": "Class ModuleInstanceStudentController",
                                            "properties": {
                                                "self": {
                                                    "description": "Class ModuleInstanceStudentController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class ModuleInstanceStudentController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "description": "Class ModuleInstanceStudentController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class ModuleInstanceStudentController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "description": "Class ModuleInstanceStudentController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class ModuleInstanceStudentController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "description": "Class ModuleInstanceStudentController",
                                            "properties": {
                                                "totalCount": {
                                                    "description": "Class ModuleInstanceStudentController",
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "description": "Class ModuleInstanceStudentController",
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "description": "Class ModuleInstanceStudentController",
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "description": "Class ModuleInstanceStudentController",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "ModuleInstanceStudent API (kss_module_instance_student)",
                "description": "Create a specific ModuleInstanceStudent and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_instance_id": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "integer"
                                    },
                                    "student_uuid": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "string"
                                    },
                                    "enrolment_id": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "integer"
                                    },
                                    "registered_at": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "string"
                                    },
                                    "schedule_type_id": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "integer"
                                    },
                                    "schedule_term_type": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "string"
                                    },
                                    "schedule_from": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "string"
                                    },
                                    "schedule_to": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "string"
                                    },
                                    "deleted": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "integer"
                                    },
                                    "switched": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "integer"
                                    },
                                    "marked_absent": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "integer"
                                    },
                                    "today_sessions": {
                                        "description": "Class ModuleInstanceStudentController",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule Student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/module-instance-students/{id}": {
            "get": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "Module Instance Student API (kss_module_instance_student)",
                "description": "Get A Specific Module Instance Student Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Student record (kss_module_instance_student.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **ModuleInstanceStudent** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **ModuleInstanceStudent**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ModuleInstanceStudent object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleInstanceStudent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ModuleInstanceStudent"
                ],
                "summary": "ModuleInstanceStudent API (kss_module_instance_student)",
                "description": "Delete a specific ModuleInstanceStudent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ModuleInstanceStudent record (kss_module_instance_student)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/pick-list-items": {
            "get": {
                "tags": [
                    "PickListItem"
                ],
                "summary": "Pick List Item Index API (kss_pick_list_item)",
                "description": "Get List of Pick List Item Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PickListItem** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 582
                                },
                                "pick_list_type": {
                                    "type": "string",
                                    "example": "ADDITIONAL_REQUIREMENT_LEVEL"
                                },
                                "code": {
                                    "type": "string",
                                    "example": "null"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Requirement"
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "System Migration"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **PickListItem** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **PickListItem** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **PickListItem**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PickListItem records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PickListItem"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PickListItem"
                ],
                "summary": "PickListItem API (kss_pick_list_item)",
                "description": "Create a specific PickListItem and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pick_list_type": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PickListItem object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PickListItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/pick-list-items/{id}": {
            "get": {
                "tags": [
                    "PickListItem"
                ],
                "summary": "Module Instance Session API (kss_pick_list_item)",
                "description": "Get A Specific PickListItem Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the PickListItem record (kss_pick_list_item.id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n            Please reference to **PickListItem** to get list of extra attributes.\n             *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **PickListItem**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickListItem object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PickListItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "PickListItem"
                ],
                "summary": "PickListItem API (kss_pick_list_item)",
                "description": "Update a specific ModuleInstanceSession and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the PickListItem record (kss_pick_list_item)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pick_list_type": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PickListItem object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PickListItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PickListItem"
                ],
                "summary": "PickListItem API (kss_pick_list_item)",
                "description": "Delete a specific PickListItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the PickListItem record (kss_pick_list_item)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programs": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Program Index API (kss_program)",
                "description": "Get List of Program Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Program** schema to\n            fill in correct type of attribute, leave empty to return all.\n            *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1001
                                },
                                "institution_id": {
                                    "type": "integer",
                                    "example": 6
                                },
                                "institution_unit_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "program_code": {
                                    "type": "string",
                                    "example": "FC2BLSS"
                                },
                                "program_title_pid": {
                                    "type": "integer",
                                    "example": null
                                },
                                "program_name": {
                                    "type": "string",
                                    "example": "Foundation Certificate 2 Terms in Business, Law and Social Sciences"
                                },
                                "entry_type_code": {
                                    "type": "string",
                                    "example": "PTW"
                                },
                                "entry_level_pid": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "program_level_pid": {
                                    "type": "integer",
                                    "example": 60
                                },
                                "program_type_pid": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "duration_pid": {
                                    "type": "integer",
                                    "example": 50
                                },
                                "duration_length": {
                                    "type": "number",
                                    "example": 2
                                },
                                "duration_unit_pid": {
                                    "type": "integer",
                                    "example": 20
                                },
                                "mpp_option_available": {
                                    "type": "integer",
                                    "example": null
                                },
                                "study_contact_detail_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "program_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/colleges/liverpool-international-college/courses/"
                                },
                                "ucas_code": {
                                    "type": "string",
                                    "example": null
                                },
                                "jacs_code": {
                                    "type": "string",
                                    "example": null
                                },
                                "atas_certificate_required": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "security_clearance_required": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "minimum_age_limit": {
                                    "type": "integer",
                                    "example": null
                                },
                                "award_id": {
                                    "type": "integer",
                                    "example": 1001
                                },
                                "is_full_time": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "hours_per_week": {
                                    "type": "integer",
                                    "example": 22
                                },
                                "document_set_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "program_status_pid": {
                                    "type": "integer",
                                    "example": 20
                                },
                                "version": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "panel_pid": {
                                    "type": "integer",
                                    "example": null
                                },
                                "subject_code": {
                                    "type": "string",
                                    "example": "BLSS"
                                },
                                "conditional_admittance_pid": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "direct_entry_point": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "promotion_text": {
                                    "type": "string",
                                    "example": ""
                                },
                                "internal_use_only": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "approval_required": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "approved_by": {
                                    "type": "string",
                                    "example": null
                                },
                                "approved_at": {
                                    "type": "string",
                                    "example": null
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": null
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": null
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "ETL Loader"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2020-07-22 06:21:36.0"
                                },
                                "additional_info_external": {
                                    "type": "string",
                                    "example": null
                                },
                                "additional_info_internal": {
                                    "type": "string",
                                    "example": null
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n            put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **Program** schema to get correct attributes.\n            *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **Program** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n            specific attributes separate by a comma. Please reference to **Program**\n            to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Program"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Program API (kss_program)",
                "description": "Create a specific Program and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "institution_unit_id": {
                                        "type": "integer"
                                    },
                                    "program_code": {
                                        "type": "string"
                                    },
                                    "program_title_pid": {
                                        "type": "integer"
                                    },
                                    "program_name": {
                                        "type": "string"
                                    },
                                    "entry_type_code": {
                                        "type": "string"
                                    },
                                    "entry_level_pid": {
                                        "type": "integer"
                                    },
                                    "program_level_pid": {
                                        "type": "integer"
                                    },
                                    "program_type_pid": {
                                        "type": "integer"
                                    },
                                    "duration_pid": {
                                        "type": "integer"
                                    },
                                    "duration_length": {
                                        "type": "number"
                                    },
                                    "duration_unit_pid": {
                                        "type": "integer"
                                    },
                                    "mpp_option_available": {
                                        "type": "integer"
                                    },
                                    "study_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "program_url": {
                                        "type": "string"
                                    },
                                    "ucas_code": {
                                        "type": "string"
                                    },
                                    "jacs_code": {
                                        "type": "string"
                                    },
                                    "atas_certificate_required": {
                                        "type": "integer"
                                    },
                                    "security_clearance_required": {
                                        "type": "integer"
                                    },
                                    "minimum_age_limit": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "is_full_time": {
                                        "type": "integer"
                                    },
                                    "hours_per_week": {
                                        "type": "integer"
                                    },
                                    "document_set_id": {
                                        "type": "integer"
                                    },
                                    "program_status_pid": {
                                        "type": "integer"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "panel_pid": {
                                        "type": "integer"
                                    },
                                    "subject_code": {
                                        "type": "string"
                                    },
                                    "conditional_admittance_pid": {
                                        "type": "integer"
                                    },
                                    "direct_entry_point": {
                                        "type": "integer"
                                    },
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "internal_use_only": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string"
                                    },
                                    "additional_info_external": {
                                        "type": "string"
                                    },
                                    "additional_info_internal": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Program object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Program"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programs/{id}": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Program API (kss_program)",
                "description": "Get A Specific Program Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Program record (kss_program.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **Program** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **Program**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Program object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Program"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Program"
                ],
                "summary": "Program API (kss_program)",
                "description": "Update a specific Program and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Program record (kss_program)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "institution_unit_id": {
                                        "type": "integer"
                                    },
                                    "program_code": {
                                        "type": "string"
                                    },
                                    "program_title_pid": {
                                        "type": "integer"
                                    },
                                    "program_name": {
                                        "type": "string"
                                    },
                                    "entry_type_code": {
                                        "type": "string"
                                    },
                                    "entry_level_pid": {
                                        "type": "integer"
                                    },
                                    "program_level_pid": {
                                        "type": "integer"
                                    },
                                    "program_type_pid": {
                                        "type": "integer"
                                    },
                                    "duration_pid": {
                                        "type": "integer"
                                    },
                                    "duration_length": {
                                        "type": "number"
                                    },
                                    "duration_unit_pid": {
                                        "type": "integer"
                                    },
                                    "mpp_option_available": {
                                        "type": "integer"
                                    },
                                    "study_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "program_url": {
                                        "type": "string"
                                    },
                                    "ucas_code": {
                                        "type": "string"
                                    },
                                    "jacs_code": {
                                        "type": "string"
                                    },
                                    "atas_certificate_required": {
                                        "type": "integer"
                                    },
                                    "security_clearance_required": {
                                        "type": "integer"
                                    },
                                    "minimum_age_limit": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "is_full_time": {
                                        "type": "integer"
                                    },
                                    "hours_per_week": {
                                        "type": "integer"
                                    },
                                    "document_set_id": {
                                        "type": "integer"
                                    },
                                    "program_status_pid": {
                                        "type": "integer"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "panel_pid": {
                                        "type": "integer"
                                    },
                                    "subject_code": {
                                        "type": "string"
                                    },
                                    "conditional_admittance_pid": {
                                        "type": "integer"
                                    },
                                    "direct_entry_point": {
                                        "type": "integer"
                                    },
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "internal_use_only": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string"
                                    },
                                    "additional_info_external": {
                                        "type": "string"
                                    },
                                    "additional_info_internal": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Program object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Program"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Program"
                ],
                "summary": "Program API (kss_program)",
                "description": "Delete a specific Program",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Program record (kss_module_instance_session)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intakes": {
            "get": {
                "tags": [
                    "ProgramIntake"
                ],
                "summary": "ProgramIntake Index API (kss_program_intake)",
                "description": "Get List of ProgramIntake Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntake** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1001
                                },
                                "program_id": {
                                    "type": "integer",
                                    "example": 1001
                                },
                                "intake_month_year": {
                                    "type": "string",
                                    "example": "2018-09-01 00:00:00.0"
                                },
                                "season_pid": {
                                    "type": "integer",
                                    "example": 30
                                },
                                "application_deadline_date": {
                                    "type": "string",
                                    "example": null
                                },
                                "program_fee": {
                                    "type": "number",
                                    "example": 15500
                                },
                                "deposit_as_program_fee": {
                                    "type": "integer",
                                    "example": 81
                                },
                                "currency_code": {
                                    "type": "string",
                                    "example": "GBP"
                                },
                                "fees_confirmed": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "program_dates_confirmed": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "fees_collected_by_pid": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "program_status_pid": {
                                    "type": "integer",
                                    "example": 30
                                },
                                "licence_key": {
                                    "type": "string",
                                    "example": ""
                                },
                                "acl_code": {
                                    "type": "string",
                                    "example": ""
                                },
                                "brp_collection_address_id": {
                                    "type": "integer",
                                    "example": ""
                                },
                                "deposit_set_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "version": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "approval_required": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "approved_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "approved_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "quota_exists": {
                                    "type": "integer",
                                    "example": ""
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramIntake** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntake** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ProgramIntake**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramIntake records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntake"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramIntake"
                ],
                "summary": "ProgramIntake API (kss_program_intake)",
                "description": "Create a specific ProgramIntake and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": 1001
                                    },
                                    "intake_month_year": {
                                        "type": "string",
                                        "example": "2018-09-01 00:00:00.0"
                                    },
                                    "season_pid": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "application_deadline_date": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "program_fee": {
                                        "type": "number",
                                        "example": 15500
                                    },
                                    "deposit_as_program_fee": {
                                        "type": "integer",
                                        "example": 81
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "GBP"
                                    },
                                    "fees_confirmed": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "program_dates_confirmed": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "fees_collected_by_pid": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "program_status_pid": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "licence_key": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "acl_code": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "brp_collection_address_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "deposit_set_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "version": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "approval_required": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "approved_by": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "quota_exists": {
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramIntake object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntake"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intakes/{id}": {
            "get": {
                "tags": [
                    "ProgramIntake"
                ],
                "summary": "ProgramIntake API (kss_program_intake)",
                "description": "Get A Specific ProgramIntake Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntake record (kss_program_intake.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntake** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ProgramIntake**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramIntake object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntake"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramIntake"
                ],
                "summary": "ProgramIntake API (kss_program_intake)",
                "description": "Update a specific ProgramIntake and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntake record (kss_program_intake)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": 1001
                                    },
                                    "intake_month_year": {
                                        "type": "string",
                                        "example": "2018-09-01 00:00:00.0"
                                    },
                                    "season_pid": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "application_deadline_date": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "program_fee": {
                                        "type": "number",
                                        "example": 15500
                                    },
                                    "deposit_as_program_fee": {
                                        "type": "integer",
                                        "example": 81
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "GBP"
                                    },
                                    "fees_confirmed": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "program_dates_confirmed": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "fees_collected_by_pid": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "program_status_pid": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "licence_key": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "acl_code": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "brp_collection_address_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "deposit_set_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "version": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "approval_required": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "approved_by": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "quota_exists": {
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramIntake object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntake"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramIntake"
                ],
                "summary": "ProgramIntake API (kss_program_intake)",
                "description": "Delete a specific ProgramIntake",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntake record (kss_program_intake)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intakes/intake-month-years": {
            "get": {
                "tags": [
                    "ProgramIntake"
                ],
                "summary": "Intake month years (kss_program_intake)",
                "description": "Intake month years",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The ID of the ProgramIntake record (kss_program_intake.id)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Intake month years",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "array",
                                        "items": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intake-module-assessments": {
            "get": {
                "tags": [
                    "ProgramIntakeModuleAssessment"
                ],
                "summary": "Program Intake Module Assessment Index API (kss_program_intake_module_assessment)",
                "description": "Get List of Program Intake Module Assessment Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntakeModuleAssessment** schema to\n            fill in correct type of attribute, leave empty to return all.\n            *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 582
                                },
                                "program_intake_module_id": {
                                    "type": "integer",
                                    "example": 32137
                                },
                                "assessment_pid": {
                                    "type": "integer",
                                    "example": 1550
                                },
                                "weighting": {
                                    "type": "number",
                                    "example": 40
                                },
                                "grade_scale_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": null
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": null
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": null
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": null
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **ProgramIntakeModuleAssessment** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **ProgramIntakeModuleAssessment** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **ProgramIntakeModuleAssessment**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramIntakeModuleAssessment records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntakeModuleAssessment"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramIntakeModuleAssessment"
                ],
                "summary": "ProgramIntakeModuleAssessment API (kss_program_intake_module_assessment)",
                "description": "Create a specific ProgramIntakeModuleAssessment and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_intake_module_id": {
                                        "type": "integer",
                                        "example": 32137
                                    },
                                    "assessment_pid": {
                                        "type": "integer",
                                        "example": 1550
                                    },
                                    "weighting": {
                                        "type": "number",
                                        "example": 40
                                    },
                                    "grade_scale_id": {
                                        "type": "integer",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramIntakeModuleAssessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeModuleAssessment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intake-module-assessments/{id}": {
            "get": {
                "tags": [
                    "ProgramIntakeModuleAssessment"
                ],
                "summary": "ProgramIntakeModuleAssessment API (kss_program_intake_module_assessment)",
                "description": "Get A SpecificProgramIntakeModuleAssessment Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeModuleAssessment record (kss_program_intake_module_assessment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **ProgramIntakeModuleAssessment** to get list of extra attributes.\n                 *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n            specific attributes separate by a comma. Please reference to **ProgramIntakeModuleAssessment**\n            to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramIntakeModuleAssessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeModuleAssessment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramIntakeModuleAssessment"
                ],
                "summary": "ProgramIntakeModuleAssessment API (kss_program_intake_module_assessment)",
                "description": "Update a specific ProgramIntakeModuleAssessment and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeModuleAssessment record (kss_program_intake_module_assessment)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_intake_module_id": {
                                        "type": "integer",
                                        "example": 32137
                                    },
                                    "assessment_pid": {
                                        "type": "integer",
                                        "example": 1550
                                    },
                                    "weighting": {
                                        "type": "number",
                                        "example": 40
                                    },
                                    "grade_scale_id": {
                                        "type": "integer",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramIntakeModuleAssessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeModuleAssessment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramIntakeModuleAssessment"
                ],
                "summary": "ProgramIntakeModuleAssessment API (kss_program_intake_module_assessment)",
                "description": "Delete a specific ProgramIntakeModuleAssessment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeModuleAssessment record (kss_program_intake_module_assessment)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intake-modules": {
            "get": {
                "tags": [
                    "ProgramIntakeModule"
                ],
                "summary": "Program Intake Module Index API (kss_program_intake_module)",
                "description": "Get List of Program Intake Module Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntakeModule** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "program_intake_id": {
                                    "type": "integer",
                                    "example": 1110
                                },
                                "module_id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "pathway_pid": {
                                    "type": "integer",
                                    "example": 140
                                },
                                "module_type_pid": {
                                    "type": "integer",
                                    "example": 20
                                },
                                "credits": {
                                    "type": "integer",
                                    "example": 55
                                },
                                "term_order": {
                                    "type": "string",
                                    "example": 1
                                },
                                "grade_scale_id": {
                                    "type": "integer",
                                    "example": 18
                                },
                                "module_calculation_type_pid": {
                                    "type": "integer",
                                    "example": null
                                },
                                "module_calculation_stage": {
                                    "type": "integer",
                                    "example": null
                                },
                                "module_weighting": {
                                    "type": "integer",
                                    "example": null
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **ProgramIntakeModule** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **ProgramIntakeModule** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **ProgramIntakeModule**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramIntakeModule records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntakeModule"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramIntakeModule"
                ],
                "summary": "ProgramIntakeModule API (kss_program_intake_module)",
                "description": "Create a specific ProgramIntakeModule and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer"
                                    },
                                    "module_id": {
                                        "type": "integer"
                                    },
                                    "pathway_pid": {
                                        "type": "integer"
                                    },
                                    "module_type_pid": {
                                        "type": "integer"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "term_order": {
                                        "type": "string"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "module_calculation_type_pid": {
                                        "type": "integer"
                                    },
                                    "module_calculation_stage": {
                                        "type": "integer"
                                    },
                                    "module_weighting": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramIntakeModule object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeModule"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intake-modules/{id}": {
            "get": {
                "tags": [
                    "ProgramIntakeModule"
                ],
                "summary": "ProgramIntakeModule API (kss_program_intake_module)",
                "description": "Get A Specific ProgramIntakeModule Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeModule record (kss_program_intake_module.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **ProgramIntakeModule** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **ProgramIntakeModule**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramIntakeModule object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeModule"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramIntakeModule"
                ],
                "summary": "ProgramIntakeModule API (kss_program_intake_module)",
                "description": "Update a specific ProgramIntakeModule and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeModule record (kss_program_intake_module)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer"
                                    },
                                    "module_id": {
                                        "type": "integer"
                                    },
                                    "pathway_pid": {
                                        "type": "integer"
                                    },
                                    "module_type_pid": {
                                        "type": "integer"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "term_order": {
                                        "type": "string"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "module_calculation_type_pid": {
                                        "type": "integer"
                                    },
                                    "module_calculation_stage": {
                                        "type": "integer"
                                    },
                                    "module_weighting": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramIntakeModule object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeModule"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramIntakeModule"
                ],
                "summary": "ProgramIntakeModule API (kss_program_intake_module)",
                "description": "Delete a specific ProgramIntakeModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeModule record (kss_program_intake_module)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intake-terms": {
            "get": {
                "tags": [
                    "ProgramIntakeTerm"
                ],
                "summary": "ProgramIntakeTerm Index API (kss_program_intake_term)",
                "description": "Get List of ProgramIntakeTerm Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntakeTerm** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "program_intake_id": {
                                    "type": "integer",
                                    "example": 1001
                                },
                                "term_id": {
                                    "type": "integer",
                                    "example": 150
                                },
                                "term_amount": {
                                    "type": "number",
                                    "example": 7750
                                },
                                "currency_code": {
                                    "type": "string",
                                    "example": "GBP"
                                },
                                "term_type_pid": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramIntakeTerm** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntakeTerm** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ProgramIntakeTerm**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramIntakeTerm records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntakeTerm"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramIntakeTerm"
                ],
                "summary": "ProgramIntakeTerm API (kss_program_intake_term)",
                "description": "Create a specific ProgramIntakeTerm and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": 1001
                                    },
                                    "term_id": {
                                        "type": "integer",
                                        "example": 150
                                    },
                                    "term_amount": {
                                        "type": "number",
                                        "example": 7750
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "GBP"
                                    },
                                    "term_type_pid": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramIntakeTerm object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeTerm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intake-terms/{id}": {
            "get": {
                "tags": [
                    "ProgramIntakeTerm"
                ],
                "summary": "ProgramIntakeTerm API (kss_program_intake_term)",
                "description": "Get A Specific ProgramIntakeTerm Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeTerm record (kss_program_intake_term.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntakeTerm** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ProgramIntakeTerm**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramIntakeTerm object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeTerm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramIntakeTerm"
                ],
                "summary": "ProgramIntakeTerm API (kss_program_intake_term)",
                "description": "Update a specific ProgramIntakeTerm and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeTerm record (kss_program_intake_term)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "term_amount": {
                                        "type": "number",
                                        "example": 7750
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "GBP"
                                    },
                                    "term_type_pid": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgramIntakeTerm object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeTerm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramIntakeTerm"
                ],
                "summary": "ProgramIntakeTerm API (kss_program_intake_term)",
                "description": "Delete a specific ProgramIntakeTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeTerm record (kss_program_intake_term)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progress-bar": {
            "get": {
                "tags": [
                    "ProgressBar"
                ],
                "summary": "ProgressBar Index API (kss_progress_bar)",
                "description": "Get List of ProgressBar Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgressBar** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "user_id": {
                                    "type": "string",
                                    "example": "77a498c2-4ad5-492d-958a-aacce8509478"
                                },
                                "action": {
                                    "type": "string",
                                    "example": "bulk-timetable-print"
                                },
                                "percentage": {
                                    "type": "integer",
                                    "example": 100
                                },
                                "complete": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "data": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgressBar** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgressBar** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ProgressBar**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgressBar records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgressBar"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgressBar"
                ],
                "summary": "ProgressBar API (kss_progress_bar)",
                "description": "Create a specific ProgressBar and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "77a498c2-4ad5-492d-958a-aacce8509478"
                                    },
                                    "action": {
                                        "type": "string",
                                        "example": "bulk-timetable-print"
                                    },
                                    "percentage": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "complete": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "data": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgressBar object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressBar"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progress-bar/{id}": {
            "get": {
                "tags": [
                    "ProgressBar"
                ],
                "summary": "ProgressBar API (kss_progress_bar)",
                "description": "Get A Specific ProgressBar Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgressBar record (kss_progress_bar.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgressBar** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ProgressBar**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgressBar object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressBar"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgressBar"
                ],
                "summary": "ProgressBar API (kss_progress_bar)",
                "description": "Update a specific ProgressBar and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgressBar record (kss_progress_bar)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "77a498c2-4ad5-492d-958a-aacce8509478"
                                    },
                                    "action": {
                                        "type": "string",
                                        "example": "bulk-timetable-print"
                                    },
                                    "percentage": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "complete": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "data": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ProgressBar object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressBar"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgressBar"
                ],
                "summary": "ProgressBar API (kss_progress_bar)",
                "description": "Delete a specific ProgressBar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgressBar record (kss_progress_bar)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/rooms": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Room Index API (kss_room)",
                "description": "Get List of Room Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Room** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 158
                                },
                                "room_type_id": {
                                    "type": "integer",
                                    "example": 134
                                },
                                "college_code": {
                                    "type": "string",
                                    "example": "KICL"
                                },
                                "room_code": {
                                    "type": "string",
                                    "example": "101"
                                },
                                "room_name": {
                                    "type": "string",
                                    "example": "Room 101"
                                },
                                "room_location": {
                                    "type": "integer",
                                    "example": null
                                },
                                "room_capacity": {
                                    "type": "integer",
                                    "example": 5
                                },
                                "active": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Room** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Room** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Room**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Room records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Room"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Room"
                ],
                "summary": "Room API (kss_room)",
                "description": "Create a specific Room and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "room_type_id": {
                                        "type": "integer",
                                        "example": 134
                                    },
                                    "college_code": {
                                        "type": "string",
                                        "example": "KICL"
                                    },
                                    "room_code": {
                                        "type": "string",
                                        "example": "101"
                                    },
                                    "room_name": {
                                        "type": "string",
                                        "example": "Room 101"
                                    },
                                    "room_location": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "room_capacity": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "active": {
                                        "type": "string",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/rooms/{id}": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Room API (kss_room)",
                "description": "Get A Specific Room Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Room record (kss_room.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Room** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Room**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Room"
                ],
                "summary": "Room API (kss_room)",
                "description": "Update a specific Room and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Room record (kss_room)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "room_type_id": {
                                        "type": "integer",
                                        "example": 134
                                    },
                                    "college_code": {
                                        "type": "string",
                                        "example": "KICL"
                                    },
                                    "room_code": {
                                        "type": "string",
                                        "example": "101"
                                    },
                                    "room_name": {
                                        "type": "string",
                                        "example": "Room 101"
                                    },
                                    "room_location": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "room_capacity": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "active": {
                                        "type": "string",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Room"
                ],
                "summary": "Room API (kss_room)",
                "description": "Delete a specific Room",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Room record (kss_room)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/rooms/search": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Search Room",
                "description": "Search Room Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Room** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 158
                                },
                                "room_type_id": {
                                    "type": "integer",
                                    "example": 134
                                },
                                "college_code": {
                                    "type": "string",
                                    "example": "KICL"
                                },
                                "room_code": {
                                    "type": "string",
                                    "example": "101"
                                },
                                "room_name": {
                                    "type": "string",
                                    "example": "Room 101"
                                },
                                "room_location": {
                                    "type": "integer",
                                    "example": null
                                },
                                "room_capacity": {
                                    "type": "integer",
                                    "example": 5
                                },
                                "active": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Room** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Room** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Room**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Room records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Room"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/session-types": {
            "get": {
                "tags": [
                    "SessionType"
                ],
                "summary": "Session Type Index API (kss_session_type)",
                "description": "Get List of Session Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **SessionType** schema to\n                fill in correct type of attribute, leave empty to return all.\n                *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "description": "Class SessionTypeController",
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "description": "Class SessionTypeController",
                                    "type": "string",
                                    "example": "Lecture"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **SessionType** schema to get correct attributes.\n                 *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **SessionType** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n            specific attributes separate by a comma. Please reference to **SessionType**\n            to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Session Type records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "description": "Class SessionTypeController",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SessionType"
                                            }
                                        },
                                        "_links": {
                                            "description": "Class SessionTypeController",
                                            "properties": {
                                                "self": {
                                                    "description": "Class SessionTypeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class SessionTypeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "description": "Class SessionTypeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class SessionTypeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "description": "Class SessionTypeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class SessionTypeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "description": "Class SessionTypeController",
                                            "properties": {
                                                "totalCount": {
                                                    "description": "Class SessionTypeController",
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "description": "Class SessionTypeController",
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "description": "Class SessionTypeController",
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "description": "Class SessionTypeController",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SessionType"
                ],
                "summary": "Session Type API (kss_session_type)",
                "description": "Create a specific Session Type and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n                 **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/session-types/{id}": {
            "get": {
                "tags": [
                    "SessionType"
                ],
                "summary": "Session Type API (kss_sesion_type)",
                "description": "Get A Specific Session Type Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Session Type record (kss_session_type.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n             Please reference to **SessionType** to get list of extra attributes.\n            *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n            specific attributes separate by a comma. Please reference to **SessionType**\n            to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SessionType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SessionType"
                ],
                "summary": "Session Type API (kss_session_type)",
                "description": "Update a specific Session Type and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Session Type record (kss_session_type)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SessionType"
                ],
                "summary": "Session Type API (kss_session_type)",
                "description": "Delete a specific Session Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Session Type record (kss_session_type)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Index API (kss_status)",
                "description": "Get List of Status Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Status** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "title": {
                                    "type": "string",
                                    "example": "Class"
                                },
                                "reference": {
                                    "type": "string",
                                    "example": "ModuleInstanceType"
                                },
                                "code": {
                                    "type": "string",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Status** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Status records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Status"
                ],
                "summary": "Status API (kss_status)",
                "description": "Create a specific Status and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Class"
                                    },
                                    "reference": {
                                        "type": "string",
                                        "example": "ModuleInstanceType"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses/{id}": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status API (kss_status)",
                "description": "Get A Specific Status Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Status"
                ],
                "summary": "Status API (kss_status)",
                "description": "Update a specific Status and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Class"
                                    },
                                    "reference": {
                                        "type": "string",
                                        "example": "ModuleInstanceType"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Status"
                ],
                "summary": "Status API (kss_status)",
                "description": "Delete a specific Status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/students": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Student Index API (kss_student)",
                "description": "Get List of Student Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Student** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "0000ef05-af26-4f8e-90ec-d0757059e133"
                                },
                                "fullname": {
                                    "type": "integer",
                                    "example": "Da LIa"
                                },
                                "student_id": {
                                    "type": "string",
                                    "example": "P095900"
                                },
                                "title": {
                                    "type": "string",
                                    "example": "MR"
                                },
                                "forename": {
                                    "type": "string",
                                    "example": "Da"
                                },
                                "surname": {
                                    "type": "string",
                                    "example": "LIa"
                                },
                                "mail": {
                                    "type": "string",
                                    "example": ""
                                },
                                "gender": {
                                    "type": "string",
                                    "example": "MALE"
                                },
                                "dateOfBirth": {
                                    "type": "string",
                                    "example": "1993-12-10"
                                },
                                "dateOfBirthTx": {
                                    "type": "integer",
                                    "example": "755456400"
                                },
                                "roles": {
                                    "type": "string",
                                    "example": "openidm-kss_students"
                                },
                                "passports": {
                                    "type": "string",
                                    "example": "ergte456456"
                                },
                                "nickname": {
                                    "type": "string",
                                    "example": "name"
                                },
                                "avatar": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Student** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Student** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Student**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Student records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Student"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Student"
                ],
                "summary": "Student API (kss_student)",
                "description": "Create a specific Student and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "0000ef05-af26-4f8e-90ec-d0757059eeee"
                                    },
                                    "fullname": {
                                        "type": "integer",
                                        "example": "Da LIa"
                                    },
                                    "student_id": {
                                        "type": "string",
                                        "example": "P095900"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "MR"
                                    },
                                    "forename": {
                                        "type": "string",
                                        "example": "Da"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": "LIa"
                                    },
                                    "mail": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "MALE"
                                    },
                                    "dateOfBirth": {
                                        "type": "string",
                                        "example": "1993-12-10"
                                    },
                                    "dateOfBirthTx": {
                                        "type": "integer",
                                        "example": "755456400"
                                    },
                                    "roles": {
                                        "type": "string",
                                        "example": "openidm-kss_students"
                                    },
                                    "passports": {
                                        "type": "string",
                                        "example": "ergte456456"
                                    },
                                    "nickname": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Student"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/students/{id}": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Student API (kss_student)",
                "description": "Get A Specific Student Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student record (kss_student.id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059eeee"
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Student** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Student**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Student"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Student"
                ],
                "summary": "Student API (kss_student)",
                "description": "Update a specific Student and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student record (kss_student)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059eeee"
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "type": "integer",
                                        "example": "Da LIa"
                                    },
                                    "student_id": {
                                        "type": "string",
                                        "example": "P095900"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "MR"
                                    },
                                    "forename": {
                                        "type": "string",
                                        "example": "Da"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": "LIa"
                                    },
                                    "mail": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "MALE"
                                    },
                                    "dateOfBirth": {
                                        "type": "string",
                                        "example": "1993-12-10"
                                    },
                                    "dateOfBirthTx": {
                                        "type": "integer",
                                        "example": "755456400"
                                    },
                                    "roles": {
                                        "type": "string",
                                        "example": "openidm-kss_students"
                                    },
                                    "passports": {
                                        "type": "string",
                                        "example": "ergte456456"
                                    },
                                    "nickname": {
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Student object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Student"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Student"
                ],
                "summary": "Student API (kss_student)",
                "description": "Delete a specific Student",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Student record (kss_student)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059eeee"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/students/search": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Student search",
                "description": "Student search",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Student** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "0000ef05-af26-4f8e-90ec-d0757059e133"
                                },
                                "fullname": {
                                    "type": "integer",
                                    "example": "Da LIa"
                                },
                                "student_id": {
                                    "type": "string",
                                    "example": "P095900"
                                },
                                "title": {
                                    "type": "string",
                                    "example": "MR"
                                },
                                "forename": {
                                    "type": "string",
                                    "example": "Da"
                                },
                                "surname": {
                                    "type": "string",
                                    "example": "LIa"
                                },
                                "mail": {
                                    "type": "string",
                                    "example": ""
                                },
                                "gender": {
                                    "type": "string",
                                    "example": "MALE"
                                },
                                "dateOfBirth": {
                                    "type": "string",
                                    "example": "1993-12-10"
                                },
                                "dateOfBirthTx": {
                                    "type": "integer",
                                    "example": "755456400"
                                },
                                "roles": {
                                    "type": "string",
                                    "example": "openidm-kss_students"
                                },
                                "passports": {
                                    "type": "string",
                                    "example": "ergte456456"
                                },
                                "nickname": {
                                    "type": "string",
                                    "example": "name"
                                },
                                "avatar": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-11-15 09:25:57"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Student** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Student** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Student**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Student records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Student"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/terms": {
            "get": {
                "tags": [
                    "Term"
                ],
                "summary": "Term Index API (kss_term)",
                "description": "Get List of Term Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Term** schema to\n                fill in correct type of attribute, leave empty to return all.\n            *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 145
                                },
                                "institution_id": {
                                    "type": "integer",
                                    "example": 26
                                },
                                "term_name": {
                                    "type": "string",
                                    "example": "TEST1"
                                },
                                "academic_year_pid": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "term_template_id": {
                                    "type": "integer",
                                    "example": null
                                },
                                "term_group_pid": {
                                    "type": "integer",
                                    "example": 20
                                },
                                "term_season_pid": {
                                    "type": "integer",
                                    "example": 10
                                },
                                "is_half_term": {
                                    "type": "integer",
                                    "example": null
                                },
                                "version": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "approval_required": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "approved_by": {
                                    "type": "string",
                                    "example": null
                                },
                                "approved_at": {
                                    "type": "string",
                                    "example": null
                                },
                                "is_bespoke": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtractsymbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **Term** schema to get correct attributes.\n                *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n            Please reference to **Term** to get list of extra attributes.\n            *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n                specific attributes separate by a comma. Please reference to **Term**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Term records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Term"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Term"
                ],
                "summary": "Term API (kss_term)",
                "description": "Create a specific Term and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n            **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer",
                                        "example": 26
                                    },
                                    "term_name": {
                                        "type": "string",
                                        "example": "TEST1"
                                    },
                                    "academic_year_pid": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "term_template_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "term_group_pid": {
                                        "type": "integer",
                                        "example": 20
                                    },
                                    "term_season_pid": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "is_half_term": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "version": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "approval_required": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "approved_by": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "is_bespoke": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Term object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/terms/{id}": {
            "get": {
                "tags": [
                    "Term"
                ],
                "summary": "Term API (kss_term)",
                "description": "Get A Specific Term Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Term record (kss_term.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **Term** to get list of extra attributes.\n                *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n            specific attributes separate by a comma. Please reference to **Term**\n                to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Term object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Term"
                ],
                "summary": "Term API (kss_term)",
                "description": "Update a specific Term and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Term record (kss_term)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer",
                                        "example": 26
                                    },
                                    "term_name": {
                                        "type": "string",
                                        "example": "TEST1"
                                    },
                                    "academic_year_pid": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "term_template_id": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "term_group_pid": {
                                        "type": "integer",
                                        "example": 20
                                    },
                                    "term_season_pid": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "is_half_term": {
                                        "type": "integer",
                                        "example": null
                                    },
                                    "version": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "approval_required": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "approved_by": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "is_bespoke": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Term object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Term"
                ],
                "summary": "Term API (kss_term)",
                "description": "Delete a specific Term",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Term record (kss_term)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Index API (kss_user)",
                "description": "Get List of Module Instance Session Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **User** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "0000ef05-af26-4f8e-90ec-d0757059e133"
                                },
                                "fullname": {
                                    "type": "string",
                                    "example": "Da LIa"
                                },
                                "title": {
                                    "type": "string",
                                    "example": "MR"
                                },
                                "forename": {
                                    "type": "string",
                                    "example": "Da"
                                },
                                "surname": {
                                    "type": "string",
                                    "example": "LIa"
                                },
                                "mail": {
                                    "type": "string",
                                    "example": null
                                },
                                "gender": {
                                    "type": "string",
                                    "example": "MALE"
                                },
                                "country": {
                                    "type": "string",
                                    "example": "CHN"
                                },
                                "primaryPhoneCode": {
                                    "type": "string",
                                    "example": null
                                },
                                "mobileNumber": {
                                    "type": "string",
                                    "example": null
                                },
                                "idmType": {
                                    "type": "string",
                                    "example": "student"
                                },
                                "version": {
                                    "type": "string",
                                    "example": "KSS-3.0.0"
                                },
                                "roles": {
                                    "type": "string",
                                    "example": "openidm-kss_user"
                                },
                                "email_signature": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **User** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **User** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **User**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Instance Session records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User API (kss_user)",
                "description": "Create a specific User and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "0000ef05-af26-4f8e-90ec-d0757059e133"
                                    },
                                    "fullname": {
                                        "type": "string",
                                        "example": "Da LIa"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "MR"
                                    },
                                    "forename": {
                                        "type": "string",
                                        "example": "Da"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": "LIa"
                                    },
                                    "mail": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "MALE"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "CHN"
                                    },
                                    "primaryPhoneCode": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "mobileNumber": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "idmType": {
                                        "type": "string",
                                        "example": "student"
                                    },
                                    "version": {
                                        "type": "string",
                                        "example": "KSS-3.0.0"
                                    },
                                    "roles": {
                                        "type": "string",
                                        "example": "openidm-kss_user"
                                    },
                                    "email_signature": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Module Instance Session API (kss_user)",
                "description": "Get A Specific Module Instance Session Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module Instance Session record (kss_user.id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059e1ee"
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **User** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **User**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "User API (kss_user)",
                "description": "Update a specific User and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the User record (kss_user)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059e1ee"
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired fields.\n **Please Delete undesired model fields**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "Da LIa"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "MR"
                                    },
                                    "forename": {
                                        "type": "string",
                                        "example": "Da"
                                    },
                                    "surname": {
                                        "type": "string",
                                        "example": "LIa"
                                    },
                                    "mail": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "MALE"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "CHN"
                                    },
                                    "primaryPhoneCode": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "mobileNumber": {
                                        "type": "string",
                                        "example": null
                                    },
                                    "idmType": {
                                        "type": "string",
                                        "example": "student"
                                    },
                                    "version": {
                                        "type": "string",
                                        "example": "KSS-3.0.0"
                                    },
                                    "roles": {
                                        "type": "string",
                                        "example": "openidm-kss_user"
                                    },
                                    "email_signature": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "User API (kss_user)",
                "description": "Delete a specific User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the User record (kss_user)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000ef05-af26-4f8e-90ec-d0757059e1ee"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users/search": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Search user",
                "description": "Search user",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **User** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "0000ef05-af26-4f8e-90ec-d0757059e133"
                                },
                                "fullname": {
                                    "type": "string",
                                    "example": "Da LIa"
                                },
                                "title": {
                                    "type": "string",
                                    "example": "MR"
                                },
                                "forename": {
                                    "type": "string",
                                    "example": "Da"
                                },
                                "surname": {
                                    "type": "string",
                                    "example": "LIa"
                                },
                                "mail": {
                                    "type": "string",
                                    "example": null
                                },
                                "gender": {
                                    "type": "string",
                                    "example": "MALE"
                                },
                                "country": {
                                    "type": "string",
                                    "example": "CHN"
                                },
                                "primaryPhoneCode": {
                                    "type": "string",
                                    "example": null
                                },
                                "mobileNumber": {
                                    "type": "string",
                                    "example": null
                                },
                                "idmType": {
                                    "type": "string",
                                    "example": "student"
                                },
                                "version": {
                                    "type": "string",
                                    "example": "KSS-3.0.0"
                                },
                                "roles": {
                                    "type": "string",
                                    "example": "openidm-kss_user"
                                },
                                "email_signature": {
                                    "type": "string",
                                    "example": ""
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": ""
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": ""
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtractsymbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **User** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "description": "ex: created_at/-created_at",
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **User** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **User**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module Instance Session records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Absence": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "attendance_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "absence_type_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "absence_reason_id": {
                        "type": "integer",
                        "example": null
                    },
                    "absence_note": {
                        "type": "string",
                        "example": null
                    },
                    "supporting_documents": {
                        "type": "string",
                        "example": null
                    },
                    "created_by": {
                        "type": "string",
                        "example": ""
                    },
                    "created_at": {
                        "type": "string",
                        "example": ""
                    },
                    "modified_by": {
                        "type": "string",
                        "example": ""
                    },
                    "modified_at": {
                        "type": "string",
                        "example": ""
                    },
                    "absenceType": {
                        "$ref": "#/components/schemas/AbsenceType"
                    },
                    "absenceReason": {
                        "$ref": "#/components/schemas/AbsenceReason"
                    },
                    "attendance": {
                        "$ref": "#/components/schemas/Attendance"
                    }
                },
                "type": "object"
            },
            "AbsenceReason": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AbsenceType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Attendance": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "event_instance_session_id": {
                        "type": "integer"
                    },
                    "event_instance_id": {
                        "type": "integer"
                    },
                    "module_instance_session_id": {
                        "type": "integer"
                    },
                    "module_instance_id": {
                        "type": "integer"
                    },
                    "term_id": {
                        "type": "integer"
                    },
                    "student_uuid": {
                        "type": "string"
                    },
                    "instance_type": {
                        "type": "integer"
                    },
                    "cause_concern": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "absent": {
                        "type": "integer"
                    },
                    "late": {
                        "type": "integer"
                    },
                    "left_early": {
                        "type": "integer"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "first_posted_at": {
                        "type": "string"
                    },
                    "module_instance_student_id": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "postedSessionStatus": {
                        "type": "boolean"
                    },
                    "timetableStatus": {
                        "type": "boolean"
                    },
                    "studentUser": {
                        "$ref": "#/components/schemas/Student"
                    },
                    "absence": {
                        "$ref": "#/components/schemas/Absence"
                    },
                    "moduleInstance": {
                        "$ref": "#/components/schemas/ModuleInstance"
                    },
                    "moduleInstanceSession": {
                        "$ref": "#/components/schemas/ModuleInstanceSession"
                    },
                    "session": {
                        "$ref": "#/components/schemas/ModuleInstanceSession"
                    },
                    "instance": {
                        "$ref": "#/components/schemas/ModuleInstance"
                    },
                    "teacherUser": {
                        "$ref": "#/components/schemas/User"
                    },
                    "moduleTeacher": {
                        "$ref": "#/components/schemas/ModuleInstanceSession"
                    },
                    "eventSession": {
                        "$ref": "#/components/schemas/Session"
                    },
                    "eventTeacher": {
                        "$ref": "#/components/schemas/Session"
                    }
                },
                "type": "object"
            },
            "Award": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "award_code": {
                        "type": "string"
                    },
                    "award_name": {
                        "type": "string"
                    },
                    "credits": {
                        "type": "integer"
                    },
                    "award_type_pid": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GradeScale": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "grade_scale_type": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "gradeScaleDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GradeScaleDetail"
                        }
                    }
                },
                "type": "object"
            },
            "GradeScaleDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lower_limit": {
                        "type": "number"
                    },
                    "upper_limit": {
                        "type": "number"
                    },
                    "credits_earned": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstanceType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Institution": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_type": {
                        "type": "string"
                    },
                    "institution_code": {
                        "type": "string"
                    },
                    "institution_name": {
                        "type": "string"
                    },
                    "institution_short_name": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "study_contact_detail_id": {
                        "type": "integer"
                    },
                    "registered_contact_detail_id": {
                        "type": "integer"
                    },
                    "registered_company_name": {
                        "type": "string"
                    },
                    "registered_company_number": {
                        "type": "string"
                    },
                    "licence_key": {
                        "type": "string"
                    },
                    "acl_code": {
                        "type": "string"
                    },
                    "accommodation_options": {
                        "type": "string"
                    },
                    "program_name_first": {
                        "type": "integer"
                    },
                    "brp_collection_address_id": {
                        "type": "integer"
                    },
                    "expected_living_cost": {
                        "type": "number"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "signatory_title": {
                        "type": "string"
                    },
                    "signatory_salutation": {
                        "type": "string"
                    },
                    "signatory_forename": {
                        "type": "string"
                    },
                    "signatory_surname": {
                        "type": "string"
                    },
                    "signatory_logo_image": {
                        "type": "string"
                    },
                    "privacy_statement_url": {
                        "type": "string"
                    },
                    "terms_conditions_url": {
                        "type": "string"
                    },
                    "accommodation_url": {
                        "type": "string"
                    },
                    "student_life_url": {
                        "type": "string"
                    },
                    "payment_url": {
                        "type": "string"
                    },
                    "pre_arrival_url": {
                        "type": "string"
                    },
                    "offer_letter_banner_image": {
                        "type": "string"
                    },
                    "program_delivery_pid": {
                        "type": "integer"
                    },
                    "promotion_text": {
                        "type": "string"
                    },
                    "branding_image": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "institution_url": {
                        "type": "string"
                    },
                    "fees_url": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Module": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_code": {
                        "type": "integer"
                    },
                    "module_name": {
                        "type": "string"
                    },
                    "credits": {
                        "type": "integer"
                    },
                    "module_price": {
                        "type": "number"
                    },
                    "currency_code": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ModuleInstance": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "proc_institution_id": {
                        "type": "integer"
                    },
                    "proc_award_id": {
                        "type": "integer"
                    },
                    "proc_program_id": {
                        "type": "integer"
                    },
                    "proc_program_intake_id": {
                        "type": "integer"
                    },
                    "intake_month_year": {
                        "type": "string"
                    },
                    "proc_program_intake_term_id": {
                        "type": "integer"
                    },
                    "proc_program_intake_module_type_id": {
                        "type": "integer"
                    },
                    "proc_program_intake_module_id": {
                        "type": "integer"
                    },
                    "proc_grade_scale_id": {
                        "type": "integer"
                    },
                    "module_code": {
                        "type": "string"
                    },
                    "module_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "class_size": {
                        "type": "string"
                    },
                    "instance_type_id": {
                        "type": "integer"
                    },
                    "active": {
                        "type": "integer"
                    },
                    "stage": {
                        "type": "integer"
                    },
                    "module_weighting": {
                        "type": "integer"
                    },
                    "module_calculation_type_pid": {
                        "type": "integer"
                    },
                    "credits": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "instanceType": {
                        "$ref": "#/components/schemas/InstanceType"
                    },
                    "moduleInstanceSessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleInstanceSession"
                        }
                    },
                    "moduleInstanceAssessments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleInstanceAssessment"
                        }
                    },
                    "programIntakeModule": {
                        "$ref": "#/components/schemas/ProgramIntakeModule"
                    },
                    "gradeScale": {
                        "$ref": "#/components/schemas/GradeScale"
                    },
                    "sessionFrom": {
                        "$ref": "#/components/schemas/ModuleInstanceSession"
                    },
                    "sessionTo": {
                        "$ref": "#/components/schemas/ModuleInstanceSession"
                    },
                    "institution": {
                        "$ref": "#/components/schemas/Institution"
                    },
                    "award": {
                        "$ref": "#/components/schemas/Award"
                    },
                    "activeModuleInstanceStudents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleInstanceStudent"
                        }
                    },
                    "studentsScheduledTotal": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ModuleInstanceAssessment": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_instance_id": {
                        "type": "integer"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "weighting": {
                        "type": "number"
                    },
                    "picklist_item_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ModuleInstanceSession": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_instance_id": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "string"
                    },
                    "session_type_id": {
                        "type": "integer"
                    },
                    "room_id": {
                        "type": "integer"
                    },
                    "teacher_uuid": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "teacherUser": {
                        "$ref": "#/components/schemas/User"
                    },
                    "room": {
                        "$ref": "#/components/schemas/Room"
                    },
                    "sessionType": {
                        "$ref": "#/components/schemas/SessionType"
                    },
                    "moduleInstance": {
                        "$ref": "#/components/schemas/ModuleInstance"
                    },
                    "attendances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attendance"
                        }
                    },
                    "timetableStatus": {
                        "type": "integer"
                    },
                    "postedSessionStatus": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ModuleInstanceStudent": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_instance_id": {
                        "type": "integer"
                    },
                    "student_uuid": {
                        "type": "string"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "registered_at": {
                        "type": "string"
                    },
                    "schedule_type_id": {
                        "type": "integer"
                    },
                    "schedule_term_type": {
                        "type": "string"
                    },
                    "schedule_from": {
                        "type": "string"
                    },
                    "schedule_to": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "switched": {
                        "type": "integer"
                    },
                    "marked_absent": {
                        "type": "integer"
                    },
                    "today_sessions": {
                        "type": "string"
                    },
                    "studentUser": {
                        "$ref": "#/components/schemas/Student"
                    },
                    "moduleInstance": {
                        "$ref": "#/components/schemas/ModuleInstance"
                    },
                    "scheduleType": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "moduleInstanceInfo": {
                        "$ref": "#/components/schemas/ModuleInstance"
                    },
                    "sessionFrom": {
                        "$ref": "#/components/schemas/ModuleInstanceSession"
                    },
                    "sessionTo": {
                        "$ref": "#/components/schemas/ModuleInstanceSession"
                    },
                    "calculatedAttendance": {
                        "properties": {
                            "average": {
                                "type": "array",
                                "items": {}
                            },
                            "average_last_10": {
                                "type": "array",
                                "items": {}
                            },
                            "rolling_days_unauthorised_absences": {
                                "type": "array",
                                "items": {}
                            },
                            "analysis": {
                                "type": "array",
                                "items": {}
                            }
                        },
                        "type": "object"
                    },
                    "moduleAttempt": {
                        "type": "integer"
                    },
                    "calculatedGrades": {
                        "type": "integer"
                    },
                    "moduleOutcomes": {
                        "type": "object"
                    },
                    "moduleStatus": {
                        "type": "string"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/ModuleInstanceStudent"
                    }
                },
                "type": "object"
            },
            "PickListItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "pick_list_type": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Program": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "institution_unit_id": {
                        "type": "integer"
                    },
                    "program_code": {
                        "type": "string"
                    },
                    "program_title_pid": {
                        "type": "integer"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "entry_type_code": {
                        "type": "string"
                    },
                    "entry_level_pid": {
                        "type": "integer"
                    },
                    "program_level_pid": {
                        "type": "integer"
                    },
                    "program_type_pid": {
                        "type": "integer"
                    },
                    "duration_pid": {
                        "type": "integer"
                    },
                    "duration_length": {
                        "type": "number"
                    },
                    "duration_unit_pid": {
                        "type": "integer"
                    },
                    "mpp_option_available": {
                        "type": "integer"
                    },
                    "study_contact_detail_id": {
                        "type": "integer"
                    },
                    "program_url": {
                        "type": "string"
                    },
                    "ucas_code": {
                        "type": "string"
                    },
                    "jacs_code": {
                        "type": "string"
                    },
                    "atas_certificate_required": {
                        "type": "integer"
                    },
                    "security_clearance_required": {
                        "type": "integer"
                    },
                    "minimum_age_limit": {
                        "type": "integer"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "is_full_time": {
                        "type": "integer"
                    },
                    "hours_per_week": {
                        "type": "integer"
                    },
                    "document_set_id": {
                        "type": "integer"
                    },
                    "program_status_pid": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "panel_pid": {
                        "type": "integer"
                    },
                    "subject_code": {
                        "type": "string"
                    },
                    "conditional_admittance_pid": {
                        "type": "integer"
                    },
                    "direct_entry_point": {
                        "type": "integer"
                    },
                    "promotion_text": {
                        "type": "string"
                    },
                    "internal_use_only": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "additional_info_external": {
                        "type": "string"
                    },
                    "additional_info_internal": {
                        "type": "string"
                    },
                    "institution": {
                        "$ref": "#/components/schemas/Institution"
                    },
                    "award": {
                        "$ref": "#/components/schemas/Award"
                    },
                    "programIntakes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramIntake"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramIntake": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "intake_month_year": {
                        "type": "string"
                    },
                    "season_pid": {
                        "type": "integer"
                    },
                    "application_deadline_date": {
                        "type": "string"
                    },
                    "program_fee": {
                        "type": "number"
                    },
                    "deposit_as_program_fee": {
                        "type": "integer"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "fees_confirmed": {
                        "type": "integer"
                    },
                    "program_dates_confirmed": {
                        "type": "integer"
                    },
                    "fees_collected_by_pid": {
                        "type": "integer"
                    },
                    "program_status_pid": {
                        "type": "integer"
                    },
                    "licence_key": {
                        "type": "string"
                    },
                    "acl_code": {
                        "type": "string"
                    },
                    "brp_collection_address_id": {
                        "type": "integer"
                    },
                    "deposit_set_id": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "quota_exists": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "program": {
                        "$ref": "#/components/schemas/Program"
                    },
                    "programIntakeModules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramIntakeModule"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramIntakeModule": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_intake_id": {
                        "type": "integer"
                    },
                    "module_id": {
                        "type": "integer"
                    },
                    "pathway_pid": {
                        "type": "integer"
                    },
                    "module_type_pid": {
                        "type": "integer"
                    },
                    "credits": {
                        "type": "integer"
                    },
                    "term_order": {
                        "type": "string"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "module_calculation_type_pid": {
                        "type": "integer"
                    },
                    "module_calculation_stage": {
                        "type": "integer"
                    },
                    "module_weighting": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "program_intake_module_assessments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramIntakeModuleAssessment"
                        }
                    },
                    "module": {
                        "$ref": "#/components/schemas/Module"
                    },
                    "programIntake": {
                        "$ref": "#/components/schemas/ProgramIntake"
                    }
                },
                "type": "object"
            },
            "ProgramIntakeModuleAssessment": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_intake_module_id": {
                        "type": "integer"
                    },
                    "assessment_pid": {
                        "type": "integer"
                    },
                    "weighting": {
                        "type": "number"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramIntakeTerm": {
                "properties": {
                    "program_intake_id": {
                        "type": "integer"
                    },
                    "term_id": {
                        "type": "integer"
                    },
                    "term_amount": {
                        "type": "number"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "term_type_pid": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgressBar": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "percentage": {
                        "type": "integer"
                    },
                    "complete": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Room": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "room_type_id": {
                        "type": "integer"
                    },
                    "college_code": {
                        "type": "string"
                    },
                    "room_code": {
                        "type": "string"
                    },
                    "room_name": {
                        "type": "string"
                    },
                    "room_location": {
                        "type": "integer"
                    },
                    "room_capacity": {
                        "type": "integer"
                    },
                    "active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "moduleInstanceSession": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleInstanceSession"
                        }
                    },
                    "eventSession": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Session"
                        }
                    },
                    "eventSessionRangeDate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Session"
                        }
                    },
                    "moduleInstanceSessionRangeDate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModuleInstanceSession"
                        }
                    }
                },
                "type": "object"
            },
            "SessionType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Status": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Student": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "fullname": {
                                "type": "integer"
                            },
                            "student_id": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "forename": {
                                "type": "string"
                            },
                            "surname": {
                                "type": "string"
                            },
                            "mail": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "string"
                            },
                            "dateOfBirth": {
                                "type": "string"
                            },
                            "dateOfBirthTx": {
                                "type": "integer"
                            },
                            "roles": {
                                "type": "string"
                            },
                            "passports": {
                                "type": "string"
                            },
                            "nickname": {
                                "type": "string"
                            },
                            "avatar": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "modified_at": {
                                "type": "string"
                            },
                            "originalAvatarUrl": {
                                "type": "string"
                            },
                            "mediumAvatarUrl": {
                                "type": "string"
                            },
                            "smallAvatarUrl": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "TeacherExpertiseModule": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "teacher_uuid": {
                        "type": "string"
                    },
                    "module_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TeacherInstitution": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "teacher_uuid": {
                        "type": "string"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "is_personal_tutor": {
                        "type": "integer"
                    },
                    "teacherUser": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Term": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "term_name": {
                        "type": "string"
                    },
                    "academic_year_pid": {
                        "type": "integer"
                    },
                    "term_template_id": {
                        "type": "integer"
                    },
                    "term_group_pid": {
                        "type": "integer"
                    },
                    "term_season_pid": {
                        "type": "integer"
                    },
                    "is_half_term": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "is_bespoke": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "forename": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "mail": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "primaryPhoneCode": {
                        "type": "string"
                    },
                    "mobileNumber": {
                        "type": "string"
                    },
                    "idmType": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "string"
                    },
                    "email_signature": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "teacherInstitutions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeacherInstitution"
                        }
                    },
                    "teacherExpertiseModules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeacherExpertiseModule"
                        }
                    }
                },
                "type": "object"
            },
            "Event": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "type_id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "attendance_taken": {
                        "type": "integer"
                    },
                    "attendance_average": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "numberOfSchedule": {
                        "type": "integer"
                    },
                    "fromDate": {
                        "type": "string"
                    },
                    "endDate": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/Type"
                    },
                    "sessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Session"
                        }
                    },
                    "institution": {
                        "$ref": "#/components/schemas/Institution"
                    },
                    "eventStudents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventStudent"
                        }
                    }
                },
                "type": "object"
            },
            "EventStudent": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "student_uuid": {
                        "type": "string"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "marked_absent": {
                        "type": "integer"
                    },
                    "today_sessions": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "student": {
                        "$ref": "#/components/schemas/Student"
                    },
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    }
                },
                "type": "object"
            },
            "Session": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "string"
                    },
                    "room_id": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string"
                    },
                    "teacher_uuid": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "timetableStatus": {
                        "type": "integer"
                    },
                    "postedSessionStatus": {
                        "type": "integer"
                    },
                    "teacher": {
                        "$ref": "#/components/schemas/User"
                    },
                    "room": {
                        "$ref": "#/components/schemas/Room"
                    },
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    },
                    "eventStudent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventStudent"
                        }
                    },
                    "attendances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attendance"
                        }
                    }
                },
                "type": "object"
            },
            "Type": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "description": "logged user token, You can got that one from KSS3 application",
                "name": "iPlanetDirectoryPro",
                "in": "header"
            }
        }
    }
}