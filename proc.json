{
    "openapi": "3.0.0",
    "info": {
        "title": "Product Catalog Microservice",
        "description": "Product Catalog Microservice APIs",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8084",
            "description": "dev server"
        },
        {
            "url": "https://product-catalogue-apple-pub.kss-dev.kapintdc.com",
            "description": "Apple server"
        },
        {
            "url": "https://product-catalogue-carrot-pub.kss-dev.kapintdc.com",
            "description": "Carrot server"
        },
        {
            "url": "https://product-catalogue-banana-pub.kss-dev.kapintdc.com",
            "description": "Banana server"
        },
        {
            "url": "https://product-catalogue.kss-uat.kapintdc.com",
            "description": "UAT server"
        }
    ],
    "paths": {
        "/api/v1/term/createbespoketerm": {
            "post": {
                "tags": [
                    "Terms"
                ],
                "summary": "create Term item",
                "description": "create Term items",
                "requestBody": {
                    "description": "create Term detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "term": {
                                                "required": [
                                                    "term_name",
                                                    "academic_year_pid",
                                                    "term_group_pid"
                                                ],
                                                "properties": {
                                                    "institution_id": {
                                                        "type": "integer"
                                                    },
                                                    "term_name": {
                                                        "type": "string"
                                                    },
                                                    "academic_year_pid": {
                                                        "type": "integer"
                                                    },
                                                    "term_template_id": {
                                                        "type": "integer"
                                                    },
                                                    "term_group_pid": {
                                                        "type": "integer"
                                                    },
                                                    "term_season_pid": {
                                                        "type": "integer"
                                                    },
                                                    "is_half_term": {
                                                        "type": "integer"
                                                    },
                                                    "version": {
                                                        "type": "integer"
                                                    },
                                                    "approval_required": {
                                                        "type": "integer"
                                                    },
                                                    "approved_by": {
                                                        "type": "string"
                                                    },
                                                    "approved_at": {
                                                        "type": "string"
                                                    },
                                                    "is_bespoke": {
                                                        "type": "integer"
                                                    },
                                                    "created_by": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    },
                                                    "modified_by": {
                                                        "type": "string"
                                                    },
                                                    "modified_at": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "term_dates": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "activity_type_id": {
                                                            "type": "integer"
                                                        },
                                                        "start_date_label": {
                                                            "type": "string"
                                                        },
                                                        "start_date": {
                                                            "type": "string"
                                                        },
                                                        "end_date_label": {
                                                            "type": "string"
                                                        },
                                                        "end_date": {
                                                            "type": "string"
                                                        },
                                                        "start_date_usage_type": {
                                                            "type": "string"
                                                        },
                                                        "end_date_usage_type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "bespoke_term_metadata": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "term_type_pid": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Term object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/coursedetail": {
            "get": {
                "tags": [
                    "CourseDetail"
                ],
                "summary": "course detail Index API (kss_course_detail)",
                "description": "Get List of course detail Records",
                "responses": {
                    "200": {
                        "description": "List of Course Detail records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonDataCourseDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CourseDetail"
                ],
                "summary": "Course Detail Create API (kss_course_detail)",
                "description": "Create a specific Course Detail",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "jsondetails": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "integer"
                                    },
                                    "aduit": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "institution_id": {
                                            "type": "integer"
                                        },
                                        "award_id": {
                                            "type": "integer"
                                        },
                                        "jsondetails": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "aduit": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/degreeaccess": {
            "get": {
                "tags": [
                    "DegreeAccess"
                ],
                "summary": "degree access Index API (kss_degree_details)",
                "description": "Get List of degree access Records",
                "responses": {
                    "200": {
                        "description": "Degree access information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonDataCourseDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DegreeAccess"
                ],
                "summary": "Degree access Create API (kss_degree_details)",
                "description": "Create a specific Degree access ",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "degree_id": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "jsondetails": {
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Degree Access object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "degree_id": {
                                            "type": "integer"
                                        },
                                        "award_id": {
                                            "type": "integer"
                                        },
                                        "jsondetails": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/degreedetail/degreeDetails": {
            "get": {
                "tags": [
                    "DegreeDetail"
                ],
                "summary": "Degree Detail  API(kss_degree_details)",
                "description": "Get degree detail",
                "parameters": [
                    {
                        "name": "pageno",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Degree Detail information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/JsonDataDegreeDetail"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/dgffeed/degreeoptions": {
            "get": {
                "tags": [
                    "DgfFeed"
                ],
                "summary": "DgfFeed Get Degree Options Action",
                "description": "Get all Degree Options records",
                "responses": {
                    "200": {
                        "description": "Dgf Degree Option object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "program_id": {
                                                        "type": "integer"
                                                    },
                                                    "degree_options": {
                                                        "type": "array",
                                                        "items": {}
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DgfFeed"
                ],
                "summary": "DgfFeed Get Degree Options Action",
                "description": "Get all Degree Options records",
                "responses": {
                    "200": {
                        "description": "Dgf Degree Option object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "program_id": {
                                                        "type": "integer"
                                                    },
                                                    "degree_options": {
                                                        "type": "array",
                                                        "items": {}
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/dgffeed": {
            "get": {
                "tags": [
                    "DgfFeed"
                ],
                "summary": "DgfFeed Index Action",
                "description": "Get list of DgfFeed records",
                "responses": {
                    "200": {
                        "description": "Dgf object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "dgf_feed": {
                                                        "type": "integer",
                                                        "example": null
                                                    },
                                                    "filters": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "institutions": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "degrees": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "degree_options": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "english_entry_key_facts": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "preparation_courses": {
                                                        "type": "array",
                                                        "items": {}
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/presigned-url?link={link}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get pre-signed url from S3",
                "parameters": [
                    {
                        "name": "link",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/download-document?link={link}&name={name}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Download S3 Document by link or name",
                "description": "Download S3 Document",
                "parameters": [
                    {
                        "name": "link",
                        "in": "query",
                        "description": "link of Document",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of Document",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Document file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/upload-document": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Upload Document to s3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "referenceId": {
                                        "type": "integer"
                                    },
                                    "referenceType": {
                                        "type": "string",
                                        "example": "Name"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "example": "Name"
                                    },
                                    "payload": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "filename"
                                        },
                                        "filename": {
                                            "type": "string",
                                            "example": "fileUrl"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/zip": {
            "get": {
                "tags": [
                    "Document"
                ],
                "description": "Download zip of Document by link or name",
                "parameters": [
                    {
                        "name": "document[][link]",
                        "in": "query",
                        "description": "link",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "offerletter/10040/72hsLvwxKRrJ_CzwdIUtZ1QVX.pdf"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Zip file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found offer"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutions/new-search": {
            "get": {
                "tags": [
                    "Institution"
                ],
                "summary": "Get all institution",
                "description": "Search institutions",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Institution** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": true,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_type": {
                                    "type": "string",
                                    "example": "college"
                                },
                                "institution_code": {
                                    "type": "integer",
                                    "example": "BUIntCol"
                                },
                                "institution_name": {
                                    "type": "string",
                                    "example": "University of Brighton"
                                },
                                "institution_short_name": {
                                    "type": "string",
                                    "example": "Nottingham Trent International College"
                                },
                                "country_code": {
                                    "type": "string",
                                    "example": "GBR"
                                },
                                "registered_company_name": {
                                    "type": "string",
                                    "example": "Cranfield University"
                                },
                                "study_contact_detail_id": {
                                    "type": "integer",
                                    "example": "24"
                                },
                                "registered_contact_detail_id": {
                                    "type": "integer",
                                    "example": "12"
                                },
                                "registered_company_number": {
                                    "type": "string",
                                    "example": "RC000151"
                                },
                                "licence_key": {
                                    "type": "string",
                                    "example": "TRAW6PAA8"
                                },
                                "acl_code": {
                                    "type": "string",
                                    "example": "2HE499"
                                },
                                "accommodation_options": {
                                    "type": "string",
                                    "example": "30"
                                },
                                "program_name_first": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "brp_collection_address_id": {
                                    "type": "integer",
                                    "example": "40"
                                },
                                "expected_living_cost": {
                                    "type": "integer",
                                    "example": 1015
                                },
                                "currency_code": {
                                    "type": "string",
                                    "example": "10"
                                },
                                "signatory_title": {
                                    "type": "string",
                                    "example": "Head of Admissions"
                                },
                                "signatory_salutation": {
                                    "type": "string",
                                    "example": "MS"
                                },
                                "signatory_forename": {
                                    "type": "string",
                                    "example": "Jude"
                                },
                                "signatory_surname": {
                                    "type": "string",
                                    "example": "Chetham"
                                },
                                "privacy_statement_url": {
                                    "type": "string",
                                    "example": "https://www.westminster.ac.uk/about-us/our-university/corporate-information/policies-and-documents-a-z/student-terms-and-conditions"
                                },
                                "terms_conditions_url": {
                                    "type": "string",
                                    "example": "https://www.westminster.ac.uk/about-us/our-university/corporate-information/policies-and-documents-a-z/student-terms-and-conditions"
                                },
                                "accommodation_url": {
                                    "type": "string",
                                    "example": "https://www.westminster.ac.uk/study/accommodation"
                                },
                                "student_life_url": {
                                    "type": "string",
                                    "example": "http://www1.uwe.ac.uk/students/getinvolved.aspx"
                                },
                                "payment_url": {
                                    "type": "string",
                                    "example": "https://webpayments.cranfield.ac.uk"
                                },
                                "pre_arrival_url": {
                                    "type": "string",
                                    "example": "https://www.cranfield.ac.uk/study/taught-degrees/arrivals-and-registration"
                                },
                                "program_delivery_pid": {
                                    "type": "integer",
                                    "example": "20"
                                },
                                "promotion_text": {
                                    "type": "string",
                                    "example": ""
                                },
                                "status": {
                                    "type": "string",
                                    "example": "active"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "Danny"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "Danny"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "institution_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/universities/northeastern-university/"
                                },
                                "fees_url": {
                                    "type": "string",
                                    "example": "https://www.flywire.com/pay/gpnortheastern"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Institution** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Institution** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_by"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, institution_type, institution_name, country_code, expected_living_cost"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/kssfeed/course_detail": {
            "get": {
                "tags": [
                    "KssFeed"
                ],
                "summary": "KssFeed Course Detail Action (kss_productcatalog_course_cache_data)",
                "description": "Get one specific course detail for purpose of adding studyplan",
                "parameters": [
                    {
                        "name": "_filters[id]",
                        "in": "query",
                        "description": "Id of Course Detail (can be search in table kss_productcatalog_course_cache_data)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1024_4401"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "pageCount": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "KssFeed"
                ],
                "summary": "KssFeed Course Detail Action (kss_productcatalog_course_cache_data)",
                "description": "Get one specific course detail for purpose of adding studyplan",
                "parameters": [
                    {
                        "name": "_filters[id]",
                        "in": "query",
                        "description": "Id of Course Detail (can be search in table kss_productcatalog_course_cache_data)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1024_4401"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "pageCount": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/kssfeed/institutions": {
            "get": {
                "tags": [
                    "KssFeed"
                ],
                "summary": "KssFeed Institution Search Action",
                "description": "Get list of institution based on type",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Institution type. There are only two option for the moment: college, university.\n                        Leave this field empty to return all institution",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "college"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "KssFeed"
                ],
                "summary": "KssFeed Institution Search Action",
                "description": "Get list of institution based on type",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Institution type. There are only two option for the moment: college, university.\n                        Leave this field empty to return all institution",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "college"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/kssfeed/lookup": {
            "get": {
                "tags": [
                    "KssFeed"
                ],
                "summary": "KssFeed Look Up Action",
                "description": "Get list Product Catalogue data for pick list filter",
                "responses": {
                    "200": {
                        "description": "Lookup object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lookup": {
                                            "properties": {
                                                "award": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "duration": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_type": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "entry_level": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_level": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "panel": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "term_type": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "test_set": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "additional_requirement_type": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "test_type_pid": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "test_category_pid": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "entry_type": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "deposit_set": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "qualification": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "module": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "season": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "document_set": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "licence_address": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "course_intake_year": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "degree_intake_year": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_type_code": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "degree_institution_department": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_code": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_type_description": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "KssFeed"
                ],
                "summary": "KssFeed Look Up Action",
                "description": "Get list Product Catalogue data for pick list filter",
                "responses": {
                    "200": {
                        "description": "Lookup object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lookup": {
                                            "properties": {
                                                "award": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "duration": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_type": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "entry_level": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_level": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "panel": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "term_type": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "test_set": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "additional_requirement_type": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "test_type_pid": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "test_category_pid": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "entry_type": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "deposit_set": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "qualification": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "module": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "season": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "document_set": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "licence_address": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "course_intake_year": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "degree_intake_year": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_type_code": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "degree_institution_department": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_code": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "program_type_description": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programs/cm-update/{id}": {
            "put": {
                "tags": [
                    "Programs"
                ],
                "summary": "Update Program item with cm-update",
                "description": "Update Program items with cm-update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Program record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Program detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "program_url": {
                                        "type": "string"
                                    },
                                    "processed_by": {
                                        "type": "string"
                                    },
                                    "program_subject_area": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "subject_area_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1001"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-bulks/template": {
            "get": {
                "tags": [
                    "ProgramBulk"
                ],
                "summary": "ProgramBulk Export Template action",
                "description": "Get ProgramBulk Template file",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Program** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter to search for program (program)",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1032,1033"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "filter[entry_type_code][eq]",
                        "in": "query",
                        "description": "Program entry type code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "PTW"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-cm-bulks/template": {
            "get": {
                "tags": [
                    "ProgramCmBulk"
                ],
                "summary": "ProgramCmBulk Export Template action",
                "description": "Get ProgramCmBulk Template file",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Program** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter to search for program (program)",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1032,1033"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intake-bulks/template": {
            "get": {
                "tags": [
                    "ProgramIntakeBulk"
                ],
                "summary": "ProgramIntakeBulk Export Template action",
                "description": "Get ProgramIntakeBulk Template file",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntake** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter to search for program intake (program_intake)",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1032,1033"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "filter[program.entry_type_code][eq]",
                        "in": "query",
                        "description": "Program entry type code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "PTW"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-intake-module-bulks/template": {
            "get": {
                "tags": [
                    "ProgramIntakeModuleBulk"
                ],
                "summary": "ProgramIntakeModuleBulk Export Template action",
                "description": "Get ProgramIntakeModuleBulk Template file",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntakeModule** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter to search for program intake module (program_intake_module)",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1032,1033"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-module-assessment-bulks/template": {
            "get": {
                "tags": [
                    "ProgramModuleAssessmentBulk"
                ],
                "summary": "ProgramModuleAssessmentBulk Export Template action",
                "description": "Get ProgramModuleAssessmentBulk Template file",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramModuleAssessment** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter to search for program module assessment \n * (program_module_assessment)",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1032,1033"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/program-module-bulks/template": {
            "get": {
                "tags": [
                    "ProgramModuleBulk"
                ],
                "summary": "ProgramModuleBulk Export Template action",
                "description": "Get ProgramModuleBulk Template file",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramModule** schema to\n                        fill in correct type of attribute, leave empty to return all. \n                        *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter to search for program module (program_module)",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1032,1033"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progression-route-module/bulk-update/{id}": {
            "patch": {
                "tags": [
                    "ProgressionRouteModule"
                ],
                "summary": "Progression Route Module bulk update feature",
                "description": "Update some specific Progression Route Module records.\nOnly for 3 fields: module_score, module_type_pid, core_choice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Progression Route record (progression_route_module.progression_route_id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 146
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, should follow the structure given. All the attributes is required\n or they will be set to null",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "module_id": {
                                            "type": "integer",
                                            "example": 4
                                        },
                                        "module_score": {
                                            "type": "integer",
                                            "example": 70
                                        },
                                        "type": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "core_choice": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of progression route module objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "models": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "progression_route_id": {
                                                        "type": "integer"
                                                    },
                                                    "module_id": {
                                                        "type": "integer"
                                                    },
                                                    "module_score": {
                                                        "type": "integer"
                                                    },
                                                    "order_number": {
                                                        "type": "integer"
                                                    },
                                                    "module_type_pid": {
                                                        "type": "integer"
                                                    },
                                                    "core_choice": {
                                                        "type": "integer"
                                                    },
                                                    "include_on_offer_letter": {
                                                        "type": "integer"
                                                    },
                                                    "created_by": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    },
                                                    "modified_by": {
                                                        "type": "string"
                                                    },
                                                    "modified_at": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progression-route-module": {
            "get": {
                "tags": [
                    "ProgressionRouteModules"
                ],
                "summary": "Progression route module Index API",
                "description": "Get List of Progression route module Records",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgressionRouteModule** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "progression_route_id": {
                                    "type": "integer",
                                    "example": 114
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgressionRouteModule** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgressionRouteModule** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_by"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, institution_type, institution_name, country_code, expected_living_cost"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of progression route module records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgressionRouteModule"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgressionRouteModules"
                ],
                "summary": "create ProgressionRouteModule item",
                "description": "create ProgressionRouteModule items",
                "requestBody": {
                    "description": "create ProgressionRouteModule detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "progression_route_id",
                                    "module_id"
                                ],
                                "properties": {
                                    "progression_route_id": {
                                        "type": "integer",
                                        "example": "114"
                                    },
                                    "module_id": {
                                        "type": "integer",
                                        "example": "25"
                                    },
                                    "module_score": {
                                        "type": "integer",
                                        "example": "50"
                                    },
                                    "order_number": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "module_type_pid": {
                                        "type": "integer"
                                    },
                                    "core_choice": {
                                        "type": "integer"
                                    },
                                    "include_on_offer_letter": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-08-28 13:37:51"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-08-28 13:37:51"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgressionRouteModule object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressionRouteModule"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/term/search-term": {
            "get": {
                "tags": [
                    "Terms"
                ],
                "summary": "Search Terms by condition",
                "description": "Search Terms",
                "parameters": [
                    {
                        "name": "program_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 12345
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-01-01"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-12-12"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Term object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "term_id": {
                                                        "type": "integer",
                                                        "example": "944"
                                                    },
                                                    "term_name": {
                                                        "type": "string",
                                                        "example": "September 2T - Term 2"
                                                    },
                                                    "is_bespoke": {
                                                        "type": "integer",
                                                        "example": "0"
                                                    },
                                                    "term_level": {
                                                        "type": "string",
                                                        "example": "Planned"
                                                    },
                                                    "term_type_pid": {
                                                        "type": "integer",
                                                        "example": "10"
                                                    },
                                                    "term_type": {
                                                        "type": "string",
                                                        "example": "Academic"
                                                    },
                                                    "program_intake_id": {
                                                        "type": "integer",
                                                        "example": "19295"
                                                    },
                                                    "term_amount": {
                                                        "type": "integer",
                                                        "example": "9500"
                                                    },
                                                    "currency_code": {
                                                        "type": "string",
                                                        "example": "GBP"
                                                    },
                                                    "teaching_start_date": {
                                                        "type": "string",
                                                        "example": "2020-01-06"
                                                    },
                                                    "teaching_end_date": {
                                                        "type": "string",
                                                        "example": "2020-05-29"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/activitytypes": {
            "get": {
                "tags": [
                    "ActivityTypes"
                ],
                "summary": "Get all activitytypes",
                "description": "Search activitytypes",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ActivityType** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Enrolment"
                                },
                                "order_number": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "start_date_required": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "end_date_required": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "multiple_records_supported": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "level": {
                                    "type": "string",
                                    "example": "PROGRAM"
                                },
                                "is_mandatory": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ActivityType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ActivityType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, order_number, level"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Activitytype detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Activitytype"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ActivityTypes"
                ],
                "summary": "create Activitytype item",
                "description": "create Activitytype items",
                "requestBody": {
                    "description": "create Activitytype detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activitytype"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Activitytype object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activitytype"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/activitytypes/{id}": {
            "get": {
                "tags": [
                    "ActivityTypes"
                ],
                "summary": "Get specical Activitytype record",
                "description": "Get specical Activitytype record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Activitytype record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ActivityType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, order_number, level"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activitytype object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activitytype"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ActivityTypes"
                ],
                "summary": "Update Activitytype item",
                "description": "Update Activitytype items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Activitytype record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Activitytype detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activitytype"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Activitytype object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activitytype"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ActivityTypes"
                ],
                "summary": "Cancel Activitytype item",
                "description": "Cancel Activitytype items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Activitytype record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/activitytypes/search": {
            "get": {
                "tags": [
                    "ActivityTypes"
                ],
                "summary": "Search all Activitytypes",
                "description": "Search Activitytypes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_date_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "end_date_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "multiple_records_supported",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_mandatory",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Activitytype object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Activitytype"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/awards": {
            "get": {
                "tags": [
                    "Awards"
                ],
                "summary": "Get all awards",
                "description": "Search awards",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Award** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1001"
                                },
                                "award_code": {
                                    "type": "string",
                                    "example": "FC BLSS"
                                },
                                "award_name": {
                                    "type": "string",
                                    "example": "Foundation Certificate for Business, Law and Social Sciences"
                                },
                                "credits": {
                                    "type": "integer"
                                },
                                "award_type_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-07-31 12:45:12"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Award** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Award** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, award_code, award_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Award detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Award"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Awards"
                ],
                "summary": "create Award item",
                "description": "create Award items",
                "requestBody": {
                    "description": "create Award detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "award_code",
                                    "award_name",
                                    "credits"
                                ],
                                "properties": {
                                    "award_code": {
                                        "type": "string",
                                        "example": "FC BLSS"
                                    },
                                    "award_name": {
                                        "type": "string",
                                        "example": "Foundation Certificate for Business, Law and Social Sciences"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "award_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-07-31 12:45:12"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Award object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Award"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/awards/{id}": {
            "get": {
                "tags": [
                    "Awards"
                ],
                "summary": "Get specical Award record",
                "description": "Get specical Award record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Award record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Award** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, award_code, award_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Award object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Award"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Awards"
                ],
                "summary": "Update Award item",
                "description": "Update Award items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Award record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Award detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "award_code",
                                    "award_name",
                                    "credits"
                                ],
                                "properties": {
                                    "award_code": {
                                        "type": "string",
                                        "example": "FC BLSS"
                                    },
                                    "award_name": {
                                        "type": "string",
                                        "example": "Foundation Certificate for Business, Law and Social Sciences"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "award_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-07-31 12:45:12"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Award object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Award"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Awards"
                ],
                "summary": "Cancel Award item",
                "description": "Cancel Award items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Award record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/awards/search": {
            "get": {
                "tags": [
                    "Awards"
                ],
                "summary": "Search all Awards",
                "description": "Search Awards",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1001"
                        }
                    },
                    {
                        "name": "award_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "FC BLSS"
                        }
                    },
                    {
                        "name": "award_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Foundation Certificate for Business, Law and Social Sciences"
                        }
                    },
                    {
                        "name": "credits",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "award_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-07-31 12:45:12"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Award object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Award"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/bankaccounts": {
            "get": {
                "tags": [
                    "BankAccounts"
                ],
                "summary": "Get all bankaccounts",
                "description": "Search bankaccounts",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BankAccountDetail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "account_name": {
                                    "type": "string",
                                    "example": "kss3"
                                },
                                "account_number": {
                                    "type": "string",
                                    "example": "kss3"
                                },
                                "bank_name": {
                                    "type": "string",
                                    "example": "HSBC"
                                },
                                "bank_sort_code": {
                                    "type": "string",
                                    "example": "DSAFA123"
                                },
                                "account_swift_code": {
                                    "type": "string",
                                    "example": "DSAFA123"
                                },
                                "account_iban_number": {
                                    "type": "string",
                                    "example": "DSAFA123"
                                },
                                "aba_code": {
                                    "type": "string",
                                    "example": "DSAFA123"
                                },
                                "bank_address_id": {
                                    "type": "integer",
                                    "example": 1234
                                },
                                "beneficiary_address_id": {
                                    "type": "integer",
                                    "example": 1234
                                },
                                "payment_nationality_code": {
                                    "type": "string",
                                    "example": "DSAFA123"
                                },
                                "payment_country_code": {
                                    "type": "string",
                                    "example": "DSAFA123"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BankAccountDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BankAccountDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, account_name, account_number"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Bank Account detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BankAccountDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "BankAccounts"
                ],
                "summary": "create BankAccount item",
                "description": "create BankAccount items",
                "requestBody": {
                    "description": "create BankAccount detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "institution_id",
                                    "account_name",
                                    "account_number",
                                    "bank_name",
                                    "bank_address_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "account_name": {
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "type": "string"
                                    },
                                    "bank_name": {
                                        "type": "string"
                                    },
                                    "bank_sort_code": {
                                        "type": "string"
                                    },
                                    "account_swift_code": {
                                        "type": "string"
                                    },
                                    "account_iban_number": {
                                        "type": "string"
                                    },
                                    "aba_code": {
                                        "type": "string"
                                    },
                                    "bank_address_id": {
                                        "type": "integer"
                                    },
                                    "beneficiary_address_id": {
                                        "type": "integer"
                                    },
                                    "payment_nationality_code": {
                                        "type": "string"
                                    },
                                    "payment_country_code": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "BankAccount object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/bankaccounts/{id}": {
            "get": {
                "tags": [
                    "BankAccounts"
                ],
                "summary": "Get specical licences record",
                "description": "Get specical Bank Account record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Bank Account record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BankAccountDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, account_name, account_number"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContactDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "BankAccounts"
                ],
                "summary": "Update BankAccount item",
                "description": "Update BankAccount items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of BankAccount record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update BankAccount detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "institution_id",
                                    "account_name",
                                    "account_number",
                                    "bank_name",
                                    "bank_address_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "account_name": {
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "type": "string"
                                    },
                                    "bank_name": {
                                        "type": "string"
                                    },
                                    "bank_sort_code": {
                                        "type": "string"
                                    },
                                    "account_swift_code": {
                                        "type": "string"
                                    },
                                    "account_iban_number": {
                                        "type": "string"
                                    },
                                    "aba_code": {
                                        "type": "string"
                                    },
                                    "bank_address_id": {
                                        "type": "integer"
                                    },
                                    "beneficiary_address_id": {
                                        "type": "integer"
                                    },
                                    "payment_nationality_code": {
                                        "type": "string"
                                    },
                                    "payment_country_code": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ContactDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BankAccounts"
                ],
                "summary": "Cancel BankAccount item",
                "description": "Cancel BankAccount items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of BankAccount record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/bankaccounts/search": {
            "get": {
                "tags": [
                    "BankAccounts"
                ],
                "summary": "Search all bankaccounts",
                "description": "Search bankaccounts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "account_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account_number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bank_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bank_sort_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account_swift_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account_iban_number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "aba_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bank_address_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "beneficiary_address_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payment_nationality_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payment_country_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Bank Account object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BankAccountDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/bespoketermmetadatas": {
            "get": {
                "tags": [
                    "BespokeTermMetadatas"
                ],
                "summary": "Get all BespokeTermMetadatas",
                "description": "Search BespokeTermMetadatas",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BespokeTermMetadata** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "term_id": {
                                    "type": "integer",
                                    "example": "1990"
                                },
                                "term_type_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "term_authorised_document": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BespokeTermMetadata** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BespokeTermMetadata** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_id, term_type_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BespokeTermMetadata detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BespokeTermMetadata"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "BespokeTermMetadatas"
                ],
                "summary": "create BespokeTermMetadata item",
                "description": "create BespokeTermMetadata items",
                "requestBody": {
                    "description": "create BespokeTermMetadata detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_id",
                                    "term_type_pid"
                                ],
                                "properties": {
                                    "term_id": {
                                        "type": "integer",
                                        "example": "1990"
                                    },
                                    "term_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "term_authorised_document": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "BespokeTermMetadata object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BespokeTermMetadata"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/bespoketermmetadatas/{id}": {
            "get": {
                "tags": [
                    "BespokeTermMetadatas"
                ],
                "summary": "Get specical BespokeTermMetadata record",
                "description": "Get specical BespokeTermMetadata record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the BespokeTermMetadata record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BespokeTermMetadata** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_id, term_type_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BespokeTermMetadata object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BespokeTermMetadata"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "BespokeTermMetadatas"
                ],
                "summary": "Update BespokeTermMetadata item",
                "description": "Update BespokeTermMetadata items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of BespokeTermMetadata record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update BespokeTermMetadata detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_id",
                                    "term_type_pid"
                                ],
                                "properties": {
                                    "term_id": {
                                        "type": "integer",
                                        "example": "1990"
                                    },
                                    "term_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "term_authorised_document": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "BespokeTermMetadata object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BespokeTermMetadata"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BespokeTermMetadatas"
                ],
                "summary": "Cancel BespokeTermMetadata item",
                "description": "Cancel BespokeTermMetadata items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of BespokeTermMetadata record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/bespoketermmetadatas/search": {
            "get": {
                "tags": [
                    "BespokeTermMetadatas"
                ],
                "summary": "Search all BespokeTermMetadatas",
                "description": "Search BespokeTermMetadatas",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_authorised_document",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BespokeTermMetadata object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BespokeTermMetadata"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/careeroptions": {
            "get": {
                "tags": [
                    "CareerOptions"
                ],
                "summary": "Get all CareerOptions",
                "description": "Search CareerOptions",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CareerOption** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "subject_area_id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Farmer"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-08-17 09:22:50"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-08-17 09:22:50"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CareerOption** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CareerOption** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, subject_area_id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CareerOption detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CareerOption"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CareerOptions"
                ],
                "summary": "create CareerOption item",
                "description": "create CareerOption items",
                "requestBody": {
                    "description": "create CareerOption detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "subject_area_id",
                                    "description"
                                ],
                                "properties": {
                                    "subject_area_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Farmer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-08-17 09:22:50"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-08-17 09:22:50"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "CareerOption object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CareerOption"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/careeroptions/{id}": {
            "get": {
                "tags": [
                    "CareerOptions"
                ],
                "summary": "Get specical CareerOption record",
                "description": "Get specical CareerOption record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the CareerOption record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CareerOption** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, subject_area_id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CareerOption object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CareerOption"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CareerOptions"
                ],
                "summary": "Update CareerOption item",
                "description": "Update CareerOption items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of CareerOption record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update CareerOption detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "subject_area_id",
                                    "description"
                                ],
                                "properties": {
                                    "subject_area_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Farmer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-08-17 09:22:50"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-08-17 09:22:50"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "CareerOption object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CareerOption"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CareerOptions"
                ],
                "summary": "Cancel CareerOption item",
                "description": "Cancel CareerOption items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of CareerOption record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/careeroptions/search": {
            "get": {
                "tags": [
                    "CareerOptions"
                ],
                "summary": "Search all CareerOptions",
                "description": "Search CareerOptions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "subject_area_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Farmer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-08-17 09:22:50"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CareerOption object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CareerOption"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/changemanagementdetails": {
            "get": {
                "tags": [
                    "ChangeManagementDetails"
                ],
                "summary": "Get all ChangeManagementDetails",
                "description": "Search ChangeManagementDetails",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ChangeManagementDetail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "change_management_header_id": {
                                    "type": "integer"
                                },
                                "table_name": {
                                    "type": "string"
                                },
                                "table_id": {
                                    "type": "integer"
                                },
                                "table_label_name": {
                                    "type": "string"
                                },
                                "field_name": {
                                    "type": "string"
                                },
                                "field_label_name": {
                                    "type": "string"
                                },
                                "old_value": {
                                    "type": "string"
                                },
                                "new_value": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ChangeManagementDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ChangeManagementDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, code, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ChangeManagementDetail detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ChangeManagementDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ChangeManagementDetails"
                ],
                "summary": "create ChangeManagementDetail item",
                "description": "create ChangeManagementDetail items",
                "requestBody": {
                    "description": "create ChangeManagementDetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "change_management_header_id",
                                    "table_name",
                                    "table_id",
                                    "field_name"
                                ],
                                "properties": {
                                    "change_management_header_id": {
                                        "type": "integer"
                                    },
                                    "table_name": {
                                        "type": "string"
                                    },
                                    "table_id": {
                                        "type": "integer"
                                    },
                                    "table_label_name": {
                                        "type": "string"
                                    },
                                    "field_name": {
                                        "type": "string"
                                    },
                                    "field_label_name": {
                                        "type": "string"
                                    },
                                    "old_value": {
                                        "type": "string"
                                    },
                                    "new_value": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ChangeManagementDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangeManagementDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/changemanagementdetails/{id}": {
            "get": {
                "tags": [
                    "ChangeManagementDetails"
                ],
                "summary": "Get specical ChangeManagementDetail record",
                "description": "Get specical ChangeManagementDetail record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ChangeManagementDetail record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ChangeManagementDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, code, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ChangeManagementDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangeManagementDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ChangeManagementDetails"
                ],
                "summary": "Update ChangeManagementDetail item",
                "description": "Update ChangeManagementDetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ChangeManagementDetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ChangeManagementDetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "change_management_header_id",
                                    "table_name",
                                    "table_id",
                                    "field_name"
                                ],
                                "properties": {
                                    "change_management_header_id": {
                                        "type": "integer"
                                    },
                                    "table_name": {
                                        "type": "string"
                                    },
                                    "table_id": {
                                        "type": "integer"
                                    },
                                    "table_label_name": {
                                        "type": "string"
                                    },
                                    "field_name": {
                                        "type": "string"
                                    },
                                    "field_label_name": {
                                        "type": "string"
                                    },
                                    "old_value": {
                                        "type": "string"
                                    },
                                    "new_value": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ChangeManagementDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangeManagementDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ChangeManagementDetails"
                ],
                "summary": "Cancel ChangeManagementDetail item",
                "description": "Cancel ChangeManagementDetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ChangeManagementDetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/changemanagementdetails/search": {
            "get": {
                "tags": [
                    "ChangeManagementDetails"
                ],
                "summary": "Search all ChangeManagementDetails",
                "description": "Search ChangeManagementDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "change_management_header_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "table_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "table_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "table_label_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field_label_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "old_value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "new_value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ChangeManagementDetail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ChangeManagementDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/changemanagementheaders": {
            "get": {
                "tags": [
                    "ChangeManagementHeaders"
                ],
                "summary": "Get all Subjects",
                "description": "Search Subjects",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ChangeManagementHeader** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "entity_name": {
                                    "type": "string"
                                },
                                "entity_id": {
                                    "type": "integer"
                                },
                                "change_management_status_pid": {
                                    "type": "integer"
                                },
                                "rejection_reason": {
                                    "type": "string"
                                },
                                "action": {
                                    "type": "string"
                                },
                                "version": {
                                    "type": "integer"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ChangeManagementHeader** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ChangeManagementHeader** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, entity_name, entity_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ChangeManagementHeader detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ChangeManagementHeader"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ChangeManagementHeaders"
                ],
                "summary": "create ChangeManagementHeader item",
                "description": "create ChangeManagementHeader items",
                "requestBody": {
                    "description": "create ChangeManagementHeader detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "entity_name",
                                    "entity_id"
                                ],
                                "properties": {
                                    "entity_name": {
                                        "type": "string"
                                    },
                                    "entity_id": {
                                        "type": "integer"
                                    },
                                    "change_management_status_pid": {
                                        "type": "integer"
                                    },
                                    "rejection_reason": {
                                        "type": "string"
                                    },
                                    "action": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ChangeManagementHeader object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangeManagementHeader"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/changemanagementheaders/{id}": {
            "get": {
                "tags": [
                    "ChangeManagementHeaders"
                ],
                "summary": "Get specical ChangeManagementHeader record",
                "description": "Get specical ChangeManagementHeader record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ChangeManagementHeader record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ChangeManagementHeader** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, entity_name, entity_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ChangeManagementHeader object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangeManagementHeader"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ChangeManagementHeaders"
                ],
                "summary": "Update ChangeManagementHeader item",
                "description": "Update ChangeManagementHeader items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ChangeManagementHeader record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ChangeManagementHeader detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "entity_name",
                                    "entity_id"
                                ],
                                "properties": {
                                    "entity_name": {
                                        "type": "string"
                                    },
                                    "entity_id": {
                                        "type": "integer"
                                    },
                                    "change_management_status_pid": {
                                        "type": "integer"
                                    },
                                    "rejection_reason": {
                                        "type": "string"
                                    },
                                    "action": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ChangeManagementHeader object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangeManagementHeader"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ChangeManagementHeaders"
                ],
                "summary": "Cancel ChangeManagementHeader item",
                "description": "Cancel ChangeManagementHeader items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ChangeManagementHeader record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/changemanagementheaders/search": {
            "get": {
                "tags": [
                    "ChangeManagementHeaders"
                ],
                "summary": "Search all ChangeManagementHeaders",
                "description": "Search ChangeManagementHeaders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "entity_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "change_management_status_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rejection_reason",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ChangeManagementHeader object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ChangeManagementHeader"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contactdetails": {
            "get": {
                "tags": [
                    "Contactdetails"
                ],
                "summary": "Get all contactdetails",
                "description": "Search contactdetails",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ContactDetail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "address_line1": {
                                    "type": "string",
                                    "example": "Vietnam"
                                },
                                "address_line2": {
                                    "type": "string",
                                    "example": "Vietnam"
                                },
                                "address_line3": {
                                    "type": "string",
                                    "example": "Vietnam"
                                },
                                "town_city": {
                                    "type": "string",
                                    "example": "Hanoi"
                                },
                                "postcode": {
                                    "type": "string",
                                    "example": "DSAFA123"
                                },
                                "country_code": {
                                    "type": "string",
                                    "example": "UK"
                                },
                                "region_pid": {
                                    "type": "integer",
                                    "example": 123
                                },
                                "admissions_phone": {
                                    "type": "string",
                                    "example": "+871324671265"
                                },
                                "admissions_email": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "contact_phone": {
                                    "type": "string",
                                    "example": "+871324671265"
                                },
                                "contact_email": {
                                    "type": "string",
                                    "example": "+kss.admin@yopmail.com"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ContactDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ContactDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, address_line1, town_city"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Licences detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contactdetails"
                ],
                "summary": "create ContactDetail item",
                "description": "create ContactDetail items",
                "requestBody": {
                    "description": "create ContactDetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactDetail"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ContactDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contactdetails/{id}": {
            "get": {
                "tags": [
                    "Contactdetails"
                ],
                "summary": "Get specical licences record",
                "description": "Get specical licences record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the licences record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ContactDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, unit_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContactDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Contactdetails"
                ],
                "summary": "Update ContactDetail item",
                "description": "Update ContactDetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ContactDetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ContactDetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactDetail"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ContactDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contactdetails"
                ],
                "summary": "Cancel ContactDetail item",
                "description": "Cancel ContactDetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ContactDetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contactdetails/search": {
            "get": {
                "tags": [
                    "Contactdetails"
                ],
                "summary": "Search all ContactDetails",
                "description": "Search ContactDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "address_line1",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address_line2",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "town_city",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "admissions_phone",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "admissions_email",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contact_phone",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contact_email",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/coursedetail/{id}": {
            "get": {
                "tags": [
                    "CourseDetail"
                ],
                "summary": "Course Detail View API (kss_course_detail)",
                "description": "Get A Specific Course Detail Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Course Detail record (kss_course_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CourseDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CourseDetail**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, description"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CourseDetail"
                ],
                "summary": "Course detail Update API (kss_course_detail)",
                "description": "Update a specific course detail and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Course Detail record (kss_course_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "jsondetails": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "integer"
                                    },
                                    "aduit": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Additional Requirement object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "institution_id": {
                                            "type": "integer"
                                        },
                                        "award_id": {
                                            "type": "integer"
                                        },
                                        "jsondetails": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "aduit": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CourseDetail"
                ],
                "summary": "Course Detail  Delete API (kss_course_detail)",
                "description": "Delete a specific Course Detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Course Detail record (kss_course_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/coursedetail/search": {
            "get": {
                "tags": [
                    "CourseDetail"
                ],
                "summary": "Course Detail search API (kss_course_detail)",
                "description": "search Course Detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "3"
                        }
                    },
                    {
                        "name": "award_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1001"
                        }
                    },
                    {
                        "name": "jsondetails",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "aduit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-10-15 00:05:07"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Course Detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CourseDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/degreeaccess/{id}": {
            "get": {
                "tags": [
                    "DegreeAccess"
                ],
                "summary": "Degree access View API (kss_degree_details)",
                "description": "Get A Specific Degree access Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Degree access record (kss_degree_details.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DegreeAccess** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **DegreeAccess**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, degree_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Degree Access object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DegreeAccess"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DegreeAccess"
                ],
                "summary": "Degree access Update API (kss_degree_details)",
                "description": "Update a specific Degree access and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Degree Access record (kss_degree_details.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "degree_id": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "jsondetails": {
                                        "type": "string"
                                    },
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Degree Access object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "degree_id": {
                                            "type": "integer"
                                        },
                                        "award_id": {
                                            "type": "integer"
                                        },
                                        "jsondetails": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DegreeAccess"
                ],
                "summary": "Degree access  Delete API (kss_degree_details)",
                "description": "Delete a specific Degree access",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Degree Access record (kss_degree_details.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/degreeaccess/search": {
            "get": {
                "tags": [
                    "DegreeAccess"
                ],
                "summary": "Degree Access search API (kss_degree_details)",
                "description": "search Degree access",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "4734"
                        }
                    },
                    {
                        "name": "degree_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "4226"
                        }
                    },
                    {
                        "name": "award_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "jsondetails",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-10-15 10:05:07"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Degree Access object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DegreeAccess"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/depositsets": {
            "get": {
                "tags": [
                    "DepositSets"
                ],
                "summary": "Get all DepositSets",
                "description": "Search DepositSets",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **DepositSet** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "UK-Pathways-Standard Pathway programme-Standard deposit"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-07-04 16:52:45"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-07-04 16:52:45"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DepositSet** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **DepositSet** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of DepositSet detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DepositSet"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DepositSets"
                ],
                "summary": "create DepositSet item",
                "description": "create DepositSet items",
                "requestBody": {
                    "description": "create DepositSet detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "UK-Pathways-Standard Pathway programme-Standard deposit"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-07-04 16:52:45"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-07-04 16:52:45"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "DepositSet object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepositSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/depositsets/{id}": {
            "get": {
                "tags": [
                    "DepositSets"
                ],
                "summary": "Get specical DepositSet record",
                "description": "Get specical DepositSet record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the DepositSet record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DepositSet** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DepositSet object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepositSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DepositSets"
                ],
                "summary": "Update DepositSet item",
                "description": "Update DepositSet items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of DepositSet record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update DepositSet detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "UK-Pathways-Standard Pathway programme-Standard deposit"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-07-04 16:52:45"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-07-04 16:52:45"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "DepositSet object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepositSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DepositSets"
                ],
                "summary": "Cancel DepositSet item",
                "description": "Cancel DepositSet items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of DepositSet record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/depositsets/search": {
            "get": {
                "tags": [
                    "DepositSets"
                ],
                "summary": "Search all DepositSets",
                "description": "Search DepositSets",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "UK-Pathways-Standard Pathway programme-Standard deposit"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-07-04 16:52:45"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of DepositSet object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DepositSet"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/dgffeed/search": {
            "get": {
                "tags": [
                    "DgfFeed"
                ],
                "summary": "DgfFeed Search Action",
                "description": "Get list of DgfFeed records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Leave empty to return empty object.\n                        Only accept condition of dgf_feed=1 right now.",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "dgf_feed": {
                                    "type": "integer",
                                    "example": 1
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lookup object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "dgf_feed": {
                                                        "type": "integer",
                                                        "example": null
                                                    },
                                                    "filters": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "institutions": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "degrees": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "degree_options": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "english_entry_key_facts": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "preparation_courses": {
                                                        "type": "array",
                                                        "items": {}
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documentdetails": {
            "get": {
                "tags": [
                    "DocumentDetails"
                ],
                "summary": "Get all DocumentDetails",
                "description": "Search DocumentDetails",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **DocumentDetail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "document_set_id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "document_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "document_status_pid": {
                                    "type": "integer",
                                    "example": "30"
                                },
                                "is_required": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-11-29 07:52:13"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-11-29 07:52:13"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DocumentDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **DocumentDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, document_set_id, document_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of DocumentDetail detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DocumentDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DocumentDetails"
                ],
                "summary": "create DocumentDetail item",
                "description": "create DocumentDetail items",
                "requestBody": {
                    "description": "create DocumentDetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "document_set_id",
                                    "document_pid",
                                    "document_status_pid"
                                ],
                                "properties": {
                                    "document_set_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "document_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "document_status_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "is_required": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-11-29 07:52:13"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-11-29 07:52:13"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "DocumentDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documentdetails/{id}": {
            "get": {
                "tags": [
                    "DocumentDetails"
                ],
                "summary": "Get specical DocumentDetail record",
                "description": "Get specical DocumentDetail record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the DocumentDetail record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DocumentDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, document_set_id, document_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DocumentDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DocumentDetails"
                ],
                "summary": "Update DocumentDetail item",
                "description": "Update DocumentDetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of DocumentDetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update DocumentDetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "document_set_id",
                                    "document_pid",
                                    "document_status_pid"
                                ],
                                "properties": {
                                    "document_set_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "document_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "document_status_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "is_required": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-11-29 07:52:13"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-11-29 07:52:13"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "DocumentDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DocumentDetails"
                ],
                "summary": "Cancel DocumentDetail item",
                "description": "Cancel DocumentDetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of DocumentDetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documentdetails/search": {
            "get": {
                "tags": [
                    "DocumentDetails"
                ],
                "summary": "Search all DocumentDetails",
                "description": "Search DocumentDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "document_set_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "document_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "document_status_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "30"
                        }
                    },
                    {
                        "name": "is_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-11-29 07:52:13"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of DocumentDetail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DocumentDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documentsets": {
            "get": {
                "tags": [
                    "DocumentSets"
                ],
                "summary": "Get all DocumentSets",
                "description": "Search DocumentSets",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **DocumentSet** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Northeastern (American Classroom-Standard)"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-11-29 07:52:13"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-11-29 07:52:13"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DocumentSet** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **DocumentSet** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of DocumentSet detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DocumentSet"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DocumentSets"
                ],
                "summary": "create DocumentSet item",
                "description": "create DocumentSet items",
                "requestBody": {
                    "description": "create DocumentSet detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "Northeastern (American Classroom-Standard)"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-11-29 07:52:13"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-11-29 07:52:13"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "DocumentSet object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documentsets/{id}": {
            "get": {
                "tags": [
                    "DocumentSets"
                ],
                "summary": "Get specical DocumentSet record",
                "description": "Get specical DocumentSet record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the DocumentSet record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DocumentSet** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, code, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DocumentSet object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DocumentSets"
                ],
                "summary": "Update DocumentSet item",
                "description": "Update DocumentSet items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of DocumentSet record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update DocumentSet detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "Northeastern (American Classroom-Standard)"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-11-29 07:52:13"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-11-29 07:52:13"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "DocumentSet object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DocumentSets"
                ],
                "summary": "Cancel DocumentSet item",
                "description": "Cancel DocumentSet items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of DocumentSet record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documentsets/search": {
            "get": {
                "tags": [
                    "DocumentSets"
                ],
                "summary": "Search all DocumentSets",
                "description": "Search DocumentSets",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Northeastern (American Classroom-Standard)"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-11-29 07:52:13"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of DocumentSet object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DocumentSet"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/entryadditionalrequirements": {
            "get": {
                "tags": [
                    "Entryadditionalrequirements"
                ],
                "summary": "Get all Entryadditionalrequirements",
                "description": "Search Entryadditionalrequirements",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EntryAdditionalRequirement** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "4480"
                                },
                                "entry_requirement_id": {
                                    "type": "integer",
                                    "example": "20189"
                                },
                                "additional_requirement_type_pid": {
                                    "type": "integer",
                                    "example": "80"
                                },
                                "condition_text": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "Sila.Sen"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2020-01-30 10:09:31"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EntryAdditionalRequirement** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EntryAdditionalRequirement** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, entry_requirement_id, condition_text"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Entryadditionalrequirement detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EntryAdditionalRequirement"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Entryadditionalrequirements"
                ],
                "summary": "create Entryadditionalrequirement item",
                "description": "create Entryadditionalrequirement items",
                "requestBody": {
                    "description": "create Entryadditionalrequirement detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "entry_requirement_id",
                                    "additional_requirement_type_pid"
                                ],
                                "properties": {
                                    "entry_requirement_id": {
                                        "type": "integer",
                                        "example": "20189"
                                    },
                                    "additional_requirement_type_pid": {
                                        "type": "integer",
                                        "example": "80"
                                    },
                                    "condition_text": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "Sila.Sen"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-01-30 10:09:31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Entryadditionalrequirement object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntryAdditionalRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/entryadditionalrequirements/{id}": {
            "get": {
                "tags": [
                    "Entryadditionalrequirements"
                ],
                "summary": "Get specical Entryadditionalrequirement record",
                "description": "Get specical Entryadditionalrequirement record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Entryadditionalrequirement record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EntryAdditionalRequirement** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, entry_requirement_id, condition_text"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entryadditionalrequirement object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntryAdditionalRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Entryadditionalrequirements"
                ],
                "summary": "Update Entryadditionalrequirement item",
                "description": "Update Entryadditionalrequirement items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Entryadditionalrequirement record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Entryadditionalrequirement detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "entry_requirement_id",
                                    "additional_requirement_type_pid"
                                ],
                                "properties": {
                                    "entry_requirement_id": {
                                        "type": "integer",
                                        "example": "20189"
                                    },
                                    "additional_requirement_type_pid": {
                                        "type": "integer",
                                        "example": "80"
                                    },
                                    "condition_text": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "Sila.Sen"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-01-30 10:09:31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Entryadditionalrequirement object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntryAdditionalRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Entryadditionalrequirements"
                ],
                "summary": "Cancel Entryadditionalrequirement item",
                "description": "Cancel Entryadditionalrequirement items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Entryadditionalrequirement record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/entryadditionalrequirements/search": {
            "get": {
                "tags": [
                    "Entryadditionalrequirements"
                ],
                "summary": "Search all Entryadditionalrequirements",
                "description": "Search Entryadditionalrequirements",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "4480"
                        }
                    },
                    {
                        "name": "entry_requirement_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "20189"
                        }
                    },
                    {
                        "name": "additional_requirement_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "80"
                        }
                    },
                    {
                        "name": "condition_text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Providing a personal statement or portfolio demonstrating your interest in, eligibility for and commitment to the degree, which is subject to Admissions approval"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Sila.Sen"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-30 10:09:31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Entryadditionalrequirement object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EntryAdditionalRequirement"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/entryrequirements": {
            "get": {
                "tags": [
                    "EntryRequirement"
                ],
                "summary": "Get all EntryRequirements",
                "description": "Search EntryRequirements",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EntryRequirement** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "program_intake_id": {
                                    "type": "integer",
                                    "example": "1110"
                                },
                                "entry_requirement_type_pid": {
                                    "type": "integer",
                                    "example": "20"
                                },
                                "qualification_id": {
                                    "type": "integer"
                                },
                                "test_set_id": {
                                    "type": "integer",
                                    "example": "38"
                                },
                                "valid_from": {
                                    "type": "string",
                                    "example": "2018-01-01"
                                },
                                "progression_institution_id": {
                                    "type": "integer"
                                },
                                "progression_program_intake_id": {
                                    "type": "integer"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-07-26 16:15:50"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-07-26 16:15:50"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EntryRequirement** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EntryRequirement** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_intake_id, entry_requirement_type_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EntryRequirement detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/entryRequirement"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EntryRequirement"
                ],
                "summary": "create EntryRequirement item",
                "description": "create EntryRequirement items",
                "requestBody": {
                    "description": "create EntryRequirement detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_intake_id"
                                ],
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": "1110"
                                    },
                                    "entry_requirement_type_pid": {
                                        "type": "integer",
                                        "example": "20"
                                    },
                                    "qualification_id": {
                                        "type": "integer"
                                    },
                                    "test_set_id": {
                                        "type": "integer",
                                        "example": "38"
                                    },
                                    "valid_from": {
                                        "type": "string",
                                        "example": "2018-01-01"
                                    },
                                    "progression_institution_id": {
                                        "type": "integer"
                                    },
                                    "progression_program_intake_id": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-07-26 16:15:50"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-07-26 16:15:50"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EntryRequirement object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entryRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/entryrequirements/{id}": {
            "get": {
                "tags": [
                    "EntryRequirement"
                ],
                "summary": "Get specical EntryRequirement record",
                "description": "Get specical EntryRequirement record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EntryRequirement record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EntryRequirement** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_intake_id, entry_requirement_type_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EntryRequirement object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entryRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EntryRequirement"
                ],
                "summary": "Update EntryRequirement item",
                "description": "Update EntryRequirement items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of EntryRequirement record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update EntryRequirement detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_intake_id"
                                ],
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": "1110"
                                    },
                                    "entry_requirement_type_pid": {
                                        "type": "integer",
                                        "example": "20"
                                    },
                                    "qualification_id": {
                                        "type": "integer"
                                    },
                                    "test_set_id": {
                                        "type": "integer",
                                        "example": "38"
                                    },
                                    "valid_from": {
                                        "type": "string",
                                        "example": "2018-01-01"
                                    },
                                    "progression_institution_id": {
                                        "type": "integer"
                                    },
                                    "progression_program_intake_id": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-07-26 16:15:50"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-07-26 16:15:50"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EntryRequirement object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entryRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EntryRequirement"
                ],
                "summary": "Cancel EntryRequirement item",
                "description": "Cancel EntryRequirement items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of EntryRequirement record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/entryrequirements/search": {
            "get": {
                "tags": [
                    "EntryRequirement"
                ],
                "summary": "Search all EntryRequirements",
                "description": "Search EntryRequirements",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "program_intake_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1110"
                        }
                    },
                    {
                        "name": "entry_requirement_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "20"
                        }
                    },
                    {
                        "name": "qualification_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "test_set_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "38"
                        }
                    },
                    {
                        "name": "valid_from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-01-01"
                        }
                    },
                    {
                        "name": "progression_institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "progression_program_intake_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-07-26 16:15:50"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EntryRequirement object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/entryRequirement"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/entrytypes": {
            "get": {
                "tags": [
                    "EntryTypes"
                ],
                "summary": "Get all EntryTypes",
                "description": "Search EntryTypes",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EntryType** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "entry_type_code": {
                                    "type": "string",
                                    "example": "DGR"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Degree"
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EntryType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EntryType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, entry_type_code, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EntryType detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EntryType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EntryTypes"
                ],
                "summary": "create EntryType item",
                "description": "create EntryType items",
                "requestBody": {
                    "description": "create EntryType detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "entry_type_code",
                                    "description"
                                ],
                                "properties": {
                                    "entry_type_code": {
                                        "type": "string",
                                        "example": "DGR"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Degree"
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EntryType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntryType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/entrytypes/search": {
            "get": {
                "tags": [
                    "EntryTypes"
                ],
                "summary": "Search all EntryTypes",
                "description": "Search EntryTypes",
                "parameters": [
                    {
                        "name": "entry_type_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "DGR"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Degree"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EntryType object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EntryType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/exemptioncriterias": {
            "get": {
                "tags": [
                    "ExemptionCriterias"
                ],
                "summary": "Get all ExemptionCriterias",
                "description": "Search ExemptionCriterias",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ExemptionCriteria** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "module_id": {
                                    "type": "integer",
                                    "example": "481"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "exemption detail 1"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2020-08-18 15:52:27"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2020-08-18 15:52:27"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ExemptionCriteria** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ExemptionCriteria** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, module_id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ExemptionCriteria detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ExemptionCriteria"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ExemptionCriterias"
                ],
                "summary": "create ExemptionCriteria item",
                "description": "create ExemptionCriteria items",
                "requestBody": {
                    "description": "create ExemptionCriteria detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "module_id"
                                ],
                                "properties": {
                                    "module_id": {
                                        "type": "integer",
                                        "example": "481"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "exemption detail 1"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2020-08-18 15:52:27"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-08-18 15:52:27"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ExemptionCriteria object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExemptionCriteria"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/exemptioncriterias/{id}": {
            "get": {
                "tags": [
                    "ExemptionCriterias"
                ],
                "summary": "Get specical ExemptionCriteria record",
                "description": "Get specical ExemptionCriteria record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ExemptionCriteria record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ExemptionCriteria** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, module_id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExemptionCriteria object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExemptionCriteria"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ExemptionCriterias"
                ],
                "summary": "Update ExemptionCriteria item",
                "description": "Update ExemptionCriteria items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ExemptionCriteria record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ExemptionCriteria detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "module_id"
                                ],
                                "properties": {
                                    "module_id": {
                                        "type": "integer",
                                        "example": "481"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "exemption detail 1"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2020-08-18 15:52:27"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-08-18 15:52:27"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ExemptionCriteria object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExemptionCriteria"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ExemptionCriterias"
                ],
                "summary": "Cancel ExemptionCriteria item",
                "description": "Cancel ExemptionCriteria items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ExemptionCriteria record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/exemptioncriterias/search": {
            "get": {
                "tags": [
                    "ExemptionCriterias"
                ],
                "summary": "Search all ExemptionCriterias",
                "description": "Search ExemptionCriterias",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "module_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "481"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "exemption detail 1"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "kss.admin@yopmail.com"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-08-18 15:52:27"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "kss.admin@yopmail.com"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-08-18 15:52:27"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ExemptionCriteria object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ExemptionCriteria"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/fieldnamemappings": {
            "get": {
                "tags": [
                    "FieldNameMappings"
                ],
                "summary": "Get all FieldNameMappings",
                "description": "Search FieldNameMappings",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **FieldNameMapping** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "field_name": {
                                    "type": "string"
                                },
                                "table_name": {
                                    "type": "string",
                                    "example": "program"
                                },
                                "field_label_name": {
                                    "type": "string"
                                },
                                "table_label_name": {
                                    "type": "string",
                                    "example": "Program"
                                },
                                "section_label_name": {
                                    "type": "string",
                                    "example": "Program Detail"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **FieldNameMapping** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **FieldNameMapping** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, field_name, table_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of FieldNameMapping detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FieldNameMapping"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "FieldNameMappings"
                ],
                "summary": "create FieldNameMapping item",
                "description": "create FieldNameMapping items",
                "requestBody": {
                    "description": "create FieldNameMapping detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "field_name": {
                                        "type": "string"
                                    },
                                    "table_name": {
                                        "type": "string",
                                        "example": "program"
                                    },
                                    "field_label_name": {
                                        "type": "string"
                                    },
                                    "table_label_name": {
                                        "type": "string",
                                        "example": "Program"
                                    },
                                    "section_label_name": {
                                        "type": "string",
                                        "example": "Program Detail"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "FieldNameMapping object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldNameMapping"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/fieldnamemappings/{id}": {
            "get": {
                "tags": [
                    "FieldNameMappings"
                ],
                "summary": "Get specical FieldNameMapping record",
                "description": "Get specical FieldNameMapping record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the FieldNameMapping record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **FieldNameMapping** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, field_name, table_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FieldNameMapping object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldNameMapping"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "FieldNameMappings"
                ],
                "summary": "Update FieldNameMapping item",
                "description": "Update FieldNameMapping items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of FieldNameMapping record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update FieldNameMapping detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "field_name": {
                                        "type": "string"
                                    },
                                    "table_name": {
                                        "type": "string",
                                        "example": "program"
                                    },
                                    "field_label_name": {
                                        "type": "string"
                                    },
                                    "table_label_name": {
                                        "type": "string",
                                        "example": "Program"
                                    },
                                    "section_label_name": {
                                        "type": "string",
                                        "example": "Program Detail"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "FieldNameMapping object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldNameMapping"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "FieldNameMappings"
                ],
                "summary": "Cancel FieldNameMapping item",
                "description": "Cancel FieldNameMapping items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of FieldNameMapping record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/fieldnamemappings/search": {
            "get": {
                "tags": [
                    "FieldNameMappings"
                ],
                "summary": "Search all FieldNameMappings",
                "description": "Search FieldNameMappings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "field_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "table_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "program"
                        }
                    },
                    {
                        "name": "field_label_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "table_label_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Program"
                        }
                    },
                    {
                        "name": "section_label_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Program Detail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of FieldNameMapping object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FieldNameMapping"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/gradescales": {
            "get": {
                "tags": [
                    "GradeScales"
                ],
                "summary": "Get all GradeScales",
                "description": "Search GradeScales",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **GradeScale** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "17"
                                },
                                "code": {
                                    "type": "string",
                                    "example": "40%EANCB"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "40% English Attainment (NCB)"
                                },
                                "grade_scale_type": {
                                    "type": "string",
                                    "example": "Module"
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "Krishna Kusalavan"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-05-10 13:08:53"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-12-03 04:56:51"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **GradeScale** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **GradeScale** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, code, name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of GradeScale detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GradeScale"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "GradeScales"
                ],
                "summary": "create GradeScale item",
                "description": "create GradeScale items",
                "requestBody": {
                    "description": "create GradeScale detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "40%EANCB"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "40% English Attainment (NCB)"
                                    },
                                    "grade_scale_type": {
                                        "type": "string",
                                        "example": "Module"
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "Krishna Kusalavan"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-05-10 13:08:53"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-12-03 04:56:51"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "GradeScale object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScale"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/gradescales/{id}": {
            "get": {
                "tags": [
                    "GradeScales"
                ],
                "summary": "Get specical GradeScale record",
                "description": "Get specical GradeScale record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the GradeScale record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **GradeScale** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, code, name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GradeScale object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScale"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "GradeScales"
                ],
                "summary": "Update GradeScale item",
                "description": "Update GradeScale items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of GradeScale record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update GradeScale detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "40%EANCB"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "40% English Attainment (NCB)"
                                    },
                                    "grade_scale_type": {
                                        "type": "string",
                                        "example": "Module"
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "Krishna Kusalavan"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-05-10 13:08:53"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-12-03 04:56:51"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "GradeScale object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GradeScale"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "GradeScales"
                ],
                "summary": "Cancel GradeScale item",
                "description": "Cancel GradeScale items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of GradeScale record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/gradescales/search": {
            "get": {
                "tags": [
                    "GradeScales"
                ],
                "summary": "Search all GradeScales",
                "description": "Search GradeScales",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "17"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "40%EANCB"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "40% English Attainment (NCB)"
                        }
                    },
                    {
                        "name": "grade_scale_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Module"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Krishna Kusalavan"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-05-10 13:08:53"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-12-03 04:56:51"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of GradeScale object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GradeScale"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/immigrationdetails": {
            "get": {
                "tags": [
                    "ImmigrationDetails"
                ],
                "summary": "Get all ImmigrationDetails",
                "description": "Search ImmigrationDetails",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ImmigrationDetail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "3"
                                },
                                "program_id": {
                                    "type": "integer",
                                    "example": "1003"
                                },
                                "number_cas_required": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "immigration_notes": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ImmigrationDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ImmigrationDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_id, number_cas_required"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ImmigrationDetail detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ImmigrationDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ImmigrationDetails"
                ],
                "summary": "create ImmigrationDetail item",
                "description": "create ImmigrationDetail items",
                "requestBody": {
                    "description": "create ImmigrationDetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id"
                                ],
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1003"
                                    },
                                    "number_cas_required": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "immigration_notes": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ImmigrationDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImmigrationDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/immigrationdetails/{id}": {
            "get": {
                "tags": [
                    "ImmigrationDetails"
                ],
                "summary": "Get specical ImmigrationDetail record",
                "description": "Get specical ImmigrationDetail record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ImmigrationDetail record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ImmigrationDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_id, number_cas_required"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ImmigrationDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImmigrationDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ImmigrationDetails"
                ],
                "summary": "Update ImmigrationDetail item",
                "description": "Update ImmigrationDetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ImmigrationDetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ImmigrationDetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id"
                                ],
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1003"
                                    },
                                    "number_cas_required": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "immigration_notes": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ImmigrationDetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImmigrationDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ImmigrationDetails"
                ],
                "summary": "Cancel ImmigrationDetail item",
                "description": "Cancel ImmigrationDetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ImmigrationDetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/immigrationdetails/search": {
            "get": {
                "tags": [
                    "ImmigrationDetails"
                ],
                "summary": "Search all ImmigrationDetails",
                "description": "Search ImmigrationDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "number_cas_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "immigration_notes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ImmigrationDetail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ImmigrationDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutions": {
            "get": {
                "tags": [
                    "Institution"
                ],
                "summary": "Get all institution",
                "description": "Search institutions",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Institution** schema to\n                fill in correct type of attribute, leave empty to return all.\n                 *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_type": {
                                    "type": "string",
                                    "example": "college"
                                },
                                "institution_code": {
                                    "type": "integer",
                                    "example": "BUIntCol"
                                },
                                "institution_name": {
                                    "type": "string",
                                    "example": "University of Brighton"
                                },
                                "institution_short_name": {
                                    "type": "string",
                                    "example": "Nottingham Trent International College"
                                },
                                "country_code": {
                                    "type": "string",
                                    "example": "GBR"
                                },
                                "registered_company_name": {
                                    "type": "string",
                                    "example": "Cranfield University"
                                },
                                "study_contact_detail_id": {
                                    "type": "integer",
                                    "example": "24"
                                },
                                "registered_contact_detail_id": {
                                    "type": "integer",
                                    "example": "12"
                                },
                                "registered_company_number": {
                                    "type": "string",
                                    "example": "RC000151"
                                },
                                "licence_key": {
                                    "type": "string",
                                    "example": "TRAW6PAA8"
                                },
                                "acl_code": {
                                    "type": "string",
                                    "example": "2HE499"
                                },
                                "accommodation_options": {
                                    "type": "string",
                                    "example": "30"
                                },
                                "program_name_first": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "brp_collection_address_id": {
                                    "type": "integer",
                                    "example": "40"
                                },
                                "expected_living_cost": {
                                    "type": "integer",
                                    "example": 1015
                                },
                                "currency_code": {
                                    "type": "string",
                                    "example": "10"
                                },
                                "signatory_title": {
                                    "type": "string",
                                    "example": "Head of Admissions"
                                },
                                "signatory_salutation": {
                                    "type": "string",
                                    "example": "MS"
                                },
                                "signatory_forename": {
                                    "type": "string",
                                    "example": "Jude"
                                },
                                "signatory_surname": {
                                    "type": "string",
                                    "example": "Chetham"
                                },
                                "privacy_statement_url": {
                                    "type": "string",
                                    "example": "https://www.westminster.ac.uk/about-us/our-university/corporate-information/policies-and-documents-a-z/student-terms-and-conditions"
                                },
                                "terms_conditions_url": {
                                    "type": "string",
                                    "example": "https://www.westminster.ac.uk/about-us/our-university/corporate-information/policies-and-documents-a-z/student-terms-and-conditions"
                                },
                                "accommodation_url": {
                                    "type": "string",
                                    "example": "https://www.westminster.ac.uk/study/accommodation"
                                },
                                "student_life_url": {
                                    "type": "string",
                                    "example": "http://www1.uwe.ac.uk/students/getinvolved.aspx"
                                },
                                "payment_url": {
                                    "type": "string",
                                    "example": "https://webpayments.cranfield.ac.uk"
                                },
                                "pre_arrival_url": {
                                    "type": "string",
                                    "example": "https://www.cranfield.ac.uk/study/taught-degrees/arrivals-and-registration"
                                },
                                "program_delivery_pid": {
                                    "type": "integer",
                                    "example": "20"
                                },
                                "promotion_text": {
                                    "type": "string",
                                    "example": ""
                                },
                                "status": {
                                    "type": "string",
                                    "example": "active"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "institution_url": {
                                    "type": "string",
                                    "example": "https://www.kaplanpathways.com/universities/northeastern-university/"
                                },
                                "fees_url": {
                                    "type": "string",
                                    "example": "https://www.flywire.com/pay/gpnortheastern"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n            Please reference to **Institution** to get list of extra attributes.\n             *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n                put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n                for ASC sort, please reference to **Institution** schema to get correct attributes.\n                 *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_by"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, institution_type, institution_name, country_code, expected_living_cost"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Institution"
                ],
                "summary": "create institution item",
                "description": "create institution items",
                "requestBody": {
                    "description": "create institution detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "institution_type",
                                    "institution_code",
                                    "institution_name",
                                    "country_code"
                                ],
                                "properties": {
                                    "institution_type": {
                                        "type": "string"
                                    },
                                    "institution_code": {
                                        "type": "string"
                                    },
                                    "institution_name": {
                                        "type": "string"
                                    },
                                    "institution_short_name": {
                                        "type": "string"
                                    },
                                    "country_code": {
                                        "type": "string"
                                    },
                                    "study_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "registered_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "registered_company_name": {
                                        "type": "string"
                                    },
                                    "registered_company_number": {
                                        "type": "string"
                                    },
                                    "licence_key": {
                                        "type": "string"
                                    },
                                    "acl_code": {
                                        "type": "string"
                                    },
                                    "accommodation_options": {
                                        "type": "string"
                                    },
                                    "program_name_first": {
                                        "type": "integer"
                                    },
                                    "brp_collection_address_id": {
                                        "type": "integer"
                                    },
                                    "expected_living_cost": {
                                        "type": "string"
                                    },
                                    "currency_code": {
                                        "type": "string"
                                    },
                                    "signatory_title": {
                                        "type": "string"
                                    },
                                    "signatory_salutation": {
                                        "type": "string"
                                    },
                                    "signatory_forename": {
                                        "type": "string"
                                    },
                                    "signatory_surname": {
                                        "type": "string"
                                    },
                                    "privacy_statement_url": {
                                        "type": "string"
                                    },
                                    "terms_conditions_url": {
                                        "type": "string"
                                    },
                                    "accommodation_url": {
                                        "type": "string"
                                    },
                                    "student_life_url": {
                                        "type": "string"
                                    },
                                    "payment_url": {
                                        "type": "string"
                                    },
                                    "pre_arrival_url": {
                                        "type": "string"
                                    },
                                    "program_delivery_pid": {
                                        "type": "integer"
                                    },
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    },
                                    "institution_url": {
                                        "type": "string"
                                    },
                                    "fees_url": {
                                        "type": "string"
                                    },
                                    "signatory_logo_image": {
                                        "$ref": "#/components/schemas/SignatoryLogoImage"
                                    },
                                    "offer_letter_banner_image": {
                                        "$ref": "#/components/schemas/OfferLetterBannerImage"
                                    },
                                    "branding_image": {
                                        "$ref": "#/components/schemas/BrandingImage"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutions/{id}": {
            "get": {
                "tags": [
                    "Institution"
                ],
                "summary": "Get specical institution record",
                "description": "Get specical institution record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the institution record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n                Please reference to **Institution** to get list of extra attributes.\n                 *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, institution_type, institution_name, country_code, expected_living_cost"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Institution"
                ],
                "summary": "Update institution item",
                "description": "Update institiotion items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Institution record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update institution detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "institution_type",
                                    "institution_code",
                                    "institution_name",
                                    "country_code"
                                ],
                                "properties": {
                                    "institution_type": {
                                        "type": "string"
                                    },
                                    "institution_code": {
                                        "type": "string"
                                    },
                                    "institution_name": {
                                        "type": "string"
                                    },
                                    "institution_short_name": {
                                        "type": "string"
                                    },
                                    "country_code": {
                                        "type": "string"
                                    },
                                    "study_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "registered_contact_detail_id": {
                                        "type": "integer"
                                    },
                                    "registered_company_name": {
                                        "type": "string"
                                    },
                                    "registered_company_number": {
                                        "type": "string"
                                    },
                                    "licence_key": {
                                        "type": "string"
                                    },
                                    "acl_code": {
                                        "type": "string"
                                    },
                                    "accommodation_options": {
                                        "type": "string"
                                    },
                                    "program_name_first": {
                                        "type": "integer"
                                    },
                                    "brp_collection_address_id": {
                                        "type": "integer"
                                    },
                                    "expected_living_cost": {
                                        "type": "string"
                                    },
                                    "currency_code": {
                                        "type": "string"
                                    },
                                    "signatory_title": {
                                        "type": "string"
                                    },
                                    "signatory_salutation": {
                                        "type": "string"
                                    },
                                    "signatory_forename": {
                                        "type": "string"
                                    },
                                    "signatory_surname": {
                                        "type": "string"
                                    },
                                    "privacy_statement_url": {
                                        "type": "string"
                                    },
                                    "terms_conditions_url": {
                                        "type": "string"
                                    },
                                    "accommodation_url": {
                                        "type": "string"
                                    },
                                    "student_life_url": {
                                        "type": "string"
                                    },
                                    "payment_url": {
                                        "type": "string"
                                    },
                                    "pre_arrival_url": {
                                        "type": "string"
                                    },
                                    "program_delivery_pid": {
                                        "type": "integer"
                                    },
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    },
                                    "institution_url": {
                                        "type": "string"
                                    },
                                    "fees_url": {
                                        "type": "string"
                                    },
                                    "signatory_logo_image": {
                                        "$ref": "#/components/schemas/SignatoryLogoImage"
                                    },
                                    "offer_letter_banner_image": {
                                        "$ref": "#/components/schemas/OfferLetterBannerImage"
                                    },
                                    "branding_image": {
                                        "$ref": "#/components/schemas/BrandingImage"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Institution"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Institution"
                ],
                "summary": "Cancel institution item",
                "description": "Cancel institution items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of institution record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutions/search": {
            "get": {
                "tags": [
                    "Institution"
                ],
                "summary": "Search all institution",
                "description": "Search institutions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "college"
                    },
                    {
                        "name": "institution_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "college"
                    },
                    {
                        "name": "institution_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "BUIntCol"
                    },
                    {
                        "name": "institution_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "institution_short_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "registered_company_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "study_contact_detail_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "registered_contact_detail_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "registered_company_number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "licence_key",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "acl_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accommodation_options",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_name_first",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brp_collection_address_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expected_living_cost",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currency_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signatory_title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signatory_salutation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signatory_forename",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signatory_surname",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "privacy_statement_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "terms_conditions_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accommodation_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "student_life_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payment_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pre_arrival_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_delivery_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "promotion_text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "institution_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fees_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutionunits": {
            "get": {
                "tags": [
                    "InstitutionUnit"
                ],
                "summary": "Get all institution Units",
                "description": "Search institution Units",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **InstitutionUnit** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_unit_name": {
                                    "type": "string",
                                    "example": "Cass Business School"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **InstitutionUnit** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **InstitutionUnit** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_by"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, institution_type, institution_name, country_code, expected_living_cost"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InstitutionUnit"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "InstitutionUnit"
                ],
                "summary": "create institution Unit item",
                "description": "create institution unit items",
                "requestBody": {
                    "description": "create institution unit detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "institution_id"
                                ],
                                "properties": {
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "institution_unit_name": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Institution Unit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstitutionUnit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutionunits/{id}": {
            "get": {
                "tags": [
                    "InstitutionUnit"
                ],
                "summary": "Get specical institution unit record",
                "description": "Get specical institution unit record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the institution unit record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **InstitutionUnit** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, institution_id, institution_unit_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Institution Unit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstitutionUnit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "InstitutionUnit"
                ],
                "summary": "Update institution unit item",
                "description": "Update institiotion unit items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Institution Unit record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update institution unit detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "institution_id"
                                ],
                                "properties": {
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "institution_unit_name": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Institution Unit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstitutionUnit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "InstitutionUnit"
                ],
                "summary": "Cancel institution unit item",
                "description": "Cancel institution unit items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of institution unit record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutionunits/search": {
            "get": {
                "tags": [
                    "InstitutionUnit"
                ],
                "summary": "Search all institution unit",
                "description": "Search institutionunits",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 25
                    },
                    {
                        "name": "institution_unit_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Department of Architecture and Built Environment"
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutionunitdetails": {
            "get": {
                "tags": [
                    "InstitutionUnitDetail"
                ],
                "summary": "Get all institutionunitdetails",
                "description": "Search institutionunitdetails",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **InstitutionUnitDetail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_unit_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_unit_type_pid": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "unit_name": {
                                    "type": "string",
                                    "example": "University of Brighton"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **InstitutionUnitDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **InstitutionUnitDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, unit_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution unit detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InstitutionUnitDetails"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "InstitutionUnitDetail"
                ],
                "summary": "create institution item",
                "description": "create institution items",
                "requestBody": {
                    "description": "create institution detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "institution_unit_id",
                                    "institution_unit_type_pid",
                                    "unit_name"
                                ],
                                "properties": {
                                    "institution_unit_id": {
                                        "type": "integer"
                                    },
                                    "institution_unit_type_pid": {
                                        "type": "integer"
                                    },
                                    "unit_name": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstitutionUnitDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutionunitdetails/{id}": {
            "get": {
                "tags": [
                    "InstitutionUnitDetail"
                ],
                "summary": "Get specical institution record",
                "description": "Get specical institution record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the institution record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **InstitutionUnitDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, unit_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstitutionUnitDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "InstitutionUnitDetail"
                ],
                "summary": "Update institution item",
                "description": "Update institution items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Institution record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update institution detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "institution_unit_id",
                                    "institution_unit_type_pid",
                                    "unit_name"
                                ],
                                "properties": {
                                    "institution_unit_id": {
                                        "type": "integer"
                                    },
                                    "institution_unit_type_pid": {
                                        "type": "integer"
                                    },
                                    "unit_name": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstitutionUnitDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "InstitutionUnitDetail"
                ],
                "summary": "Cancel institution item",
                "description": "Cancel institution items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of institution record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/institutionunitdetails/search": {
            "get": {
                "tags": [
                    "InstitutionUnitDetail"
                ],
                "summary": "Search all institution",
                "description": "Search institutions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "institution_unit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "institution_unit_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "unit_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InstitutionUnitDetails"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/licences": {
            "get": {
                "tags": [
                    "Licences"
                ],
                "summary": "Get all licences",
                "description": "Search licences",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Licence** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "licence_key": {
                                    "type": "string",
                                    "example": 1
                                },
                                "licence_name": {
                                    "type": "string",
                                    "example": 1
                                },
                                "licence_contact_detail_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Licence** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Licence** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, licence_key, licence_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Licences detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Licence"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Licences"
                ],
                "summary": "create Licence item",
                "description": "create Licence items",
                "requestBody": {
                    "description": "create Licence detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "licence_key",
                                    "licence_name"
                                ],
                                "properties": {
                                    "licence_key": {
                                        "type": "string"
                                    },
                                    "licence_name": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Licence object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Licence"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/licences/{id}": {
            "get": {
                "tags": [
                    "Licences"
                ],
                "summary": "Get specical licences record",
                "description": "Get specical licences record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the licences record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Licence** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, unit_name"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Licence"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Licences"
                ],
                "summary": "Update Licence item",
                "description": "Update Licence items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Licence record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Licences detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "licence_key",
                                    "licence_name"
                                ],
                                "properties": {
                                    "licence_key": {
                                        "type": "string"
                                    },
                                    "licence_name": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Institution object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Licence"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Licences"
                ],
                "summary": "Cancel Licence item",
                "description": "Cancel Licence items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Licence record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/licences/search": {
            "get": {
                "tags": [
                    "Licences"
                ],
                "summary": "Search all Licences",
                "description": "Search Licences",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "licence_key",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    },
                    {
                        "name": "licence_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Licence"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/modules": {
            "get": {
                "tags": [
                    "Module V1"
                ],
                "summary": "Module Index API (kss_module)",
                "description": "Get List of Module Records",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Module** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Module** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -module_code"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Module** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Module**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,module_code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Term"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Module V1"
                ],
                "summary": "Module Create API (kss_module)",
                "description": "Create a specific Module and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_code": {
                                        "type": "string"
                                    },
                                    "module_name": {
                                        "type": "string"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "module_price": {
                                        "type": "number"
                                    },
                                    "currency_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_code": {
                                            "type": "string"
                                        },
                                        "module_name": {
                                            "type": "string"
                                        },
                                        "credits": {
                                            "type": "integer"
                                        },
                                        "module_price": {
                                            "type": "number"
                                        },
                                        "currency_code": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/modules/{id}": {
            "get": {
                "tags": [
                    "Module V1"
                ],
                "summary": "Module View API (kss_module)",
                "description": "Get A Specific Module Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Module** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Module**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, module_code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Module V1"
                ],
                "summary": "Module Update API (kss_module)",
                "description": "Update a specific Module and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_code": {
                                        "type": "string"
                                    },
                                    "module_name": {
                                        "type": "string"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "module_price": {
                                        "type": "number"
                                    },
                                    "currency_code": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "module_code": {
                                            "type": "string"
                                        },
                                        "module_name": {
                                            "type": "string"
                                        },
                                        "credits": {
                                            "type": "integer"
                                        },
                                        "module_price": {
                                            "type": "number"
                                        },
                                        "currency_code": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Module V1"
                ],
                "summary": "Module Delete API (kss_module)",
                "description": "Delete a specific Module",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/modules/search": {
            "get": {
                "tags": [
                    "Module V1"
                ],
                "summary": "Module search API (kss_module)",
                "description": "Search Module",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "module_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "FC002"
                        }
                    },
                    {
                        "name": "module_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Art and Design Structured Project - 1"
                        }
                    },
                    {
                        "name": "credits",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "12"
                        }
                    },
                    {
                        "name": "module_price",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "currency_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-08-09 15:56:21"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/picklistitem": {
            "get": {
                "tags": [
                    "PickListItems"
                ],
                "summary": "Get all PickListItems",
                "description": "Search PickListItems",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PickListItem** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "pick_list_type": {
                                    "type": "string",
                                    "example": "ADDITIONAL_REQUIREMENT_LEVEL"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Requirement"
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "System Migration"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-11-22 12:19:36"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-11-22 12:19:36"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PickListItem** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **PickListItem** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, pick_list_type, code"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PickListItem detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PickListItem"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PickListItems"
                ],
                "summary": "create PickListItem item",
                "description": "create PickListItem items",
                "requestBody": {
                    "description": "create PickListItem detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "pick_list_type",
                                    "description"
                                ],
                                "properties": {
                                    "pick_list_type": {
                                        "type": "string",
                                        "example": "ADDITIONAL_REQUIREMENT_LEVEL"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Requirement"
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "System Migration"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-11-22 12:19:36"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-11-22 12:19:36"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PickListItem object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PickListItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/picklistitem/search": {
            "get": {
                "tags": [
                    "PickListItems"
                ],
                "summary": "Search all PickListItems",
                "description": "Search PickListItems",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "pick_list_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ADDITIONAL_REQUIREMENT_LEVEL"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Requirement"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "System Migration"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-11-22 12:19:36"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-11-22 12:19:36"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PickListItem object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PickListItem"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programs": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Get all programs",
                "description": "Search programs",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Program** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_id": {
                                    "type": "integer",
                                    "example": "6"
                                },
                                "institution_unit_id": {
                                    "type": "integer",
                                    "example": "109"
                                },
                                "program_code": {
                                    "type": "string",
                                    "example": "W230 BA/FD"
                                },
                                "program_title_pid": {
                                    "type": "integer",
                                    "example": 110
                                },
                                "program_name": {
                                    "type": "string",
                                    "example": "Fashion Design"
                                },
                                "entry_type_code": {
                                    "type": "string",
                                    "example": "DGR"
                                },
                                "entry_level_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "program_level_pid": {
                                    "type": "integer",
                                    "example": "120"
                                },
                                "program_type_pid": {
                                    "type": "integer",
                                    "example": "30"
                                },
                                "duration_pid": {
                                    "type": "integer",
                                    "example": "130"
                                },
                                "duration_length": {
                                    "type": "integer",
                                    "example": "3.00"
                                },
                                "duration_unit_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "mpp_option_available": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "study_contact_detail_id": {
                                    "type": "integer",
                                    "example": "46"
                                },
                                "program_url": {
                                    "type": "string"
                                },
                                "ucas_code": {
                                    "type": "string"
                                },
                                "jacs_code": {
                                    "type": "string"
                                },
                                "atas_certificate_required": {
                                    "type": "integer"
                                },
                                "security_clearance_required": {
                                    "type": "integer"
                                },
                                "minimum_age_limit": {
                                    "type": "integer"
                                },
                                "award_id": {
                                    "type": "integer"
                                },
                                "is_full_time": {
                                    "type": "integer"
                                },
                                "hours_per_week": {
                                    "type": "integer"
                                },
                                "document_set_id": {
                                    "type": "integer"
                                },
                                "program_status_pid": {
                                    "type": "integer"
                                },
                                "version": {
                                    "type": "integer"
                                },
                                "panel_pid": {
                                    "type": "integer"
                                },
                                "subject_code": {
                                    "type": "integer"
                                },
                                "conditional_admittance_pid": {
                                    "type": "integer"
                                },
                                "direct_entry_point": {
                                    "type": "integer"
                                },
                                "promotion_text": {
                                    "type": "string"
                                },
                                "internal_use_only": {
                                    "type": "integer"
                                },
                                "approval_required": {
                                    "type": "integer"
                                },
                                "approved_by": {
                                    "type": "string"
                                },
                                "approved_at": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Program** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Program** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_name, academic_year_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Program"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Programs"
                ],
                "summary": "create Program item",
                "description": "create Program items",
                "requestBody": {
                    "description": "create Program detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_name",
                                    "academic_year_pid",
                                    "term_group_pid"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "institution_id": {
                                        "type": "integer",
                                        "example": "6"
                                    },
                                    "institution_unit_id": {
                                        "type": "integer",
                                        "example": "109"
                                    },
                                    "program_code": {
                                        "type": "string",
                                        "example": "W230 BA/FD"
                                    },
                                    "program_title_pid": {
                                        "type": "integer",
                                        "example": 110
                                    },
                                    "program_name": {
                                        "type": "string",
                                        "example": "Fashion Design"
                                    },
                                    "entry_type_code": {
                                        "type": "string",
                                        "example": "DGR"
                                    },
                                    "entry_level_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "program_level_pid": {
                                        "type": "integer",
                                        "example": "120"
                                    },
                                    "program_type_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "duration_pid": {
                                        "type": "integer",
                                        "example": "130"
                                    },
                                    "duration_length": {
                                        "type": "integer",
                                        "example": "3.00"
                                    },
                                    "duration_unit_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "mpp_option_available": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "study_contact_detail_id": {
                                        "type": "integer",
                                        "example": "46"
                                    },
                                    "program_url": {
                                        "type": "string"
                                    },
                                    "ucas_code": {
                                        "type": "string"
                                    },
                                    "jacs_code": {
                                        "type": "string"
                                    },
                                    "atas_certificate_required": {
                                        "type": "integer"
                                    },
                                    "security_clearance_required": {
                                        "type": "integer"
                                    },
                                    "minimum_age_limit": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "is_full_time": {
                                        "type": "integer"
                                    },
                                    "hours_per_week": {
                                        "type": "integer"
                                    },
                                    "document_set_id": {
                                        "type": "integer"
                                    },
                                    "program_status_pid": {
                                        "type": "integer"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "panel_pid": {
                                        "type": "integer"
                                    },
                                    "subject_code": {
                                        "type": "string"
                                    },
                                    "conditional_admittance_pid": {
                                        "type": "integer"
                                    },
                                    "direct_entry_point": {
                                        "type": "integer"
                                    },
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "internal_use_only": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-06-22 07:08:23"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-06-22 07:08:23"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Program"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programs/{id}": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Get specical Program record",
                "description": "Get specical Program record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Program record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Program** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_name, academic_year_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Program object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Program"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Programs"
                ],
                "summary": "Update Program item",
                "description": "Update Program items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Program record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Program detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_name",
                                    "academic_year_pid",
                                    "term_group_pid"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "institution_id": {
                                        "type": "integer",
                                        "example": "6"
                                    },
                                    "institution_unit_id": {
                                        "type": "integer",
                                        "example": "109"
                                    },
                                    "program_code": {
                                        "type": "string",
                                        "example": "W230 BA/FD"
                                    },
                                    "program_title_pid": {
                                        "type": "integer",
                                        "example": 110
                                    },
                                    "program_name": {
                                        "type": "string",
                                        "example": "Fashion Design"
                                    },
                                    "entry_type_code": {
                                        "type": "string",
                                        "example": "DGR"
                                    },
                                    "entry_level_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "program_level_pid": {
                                        "type": "integer",
                                        "example": "120"
                                    },
                                    "program_type_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "duration_pid": {
                                        "type": "integer",
                                        "example": "130"
                                    },
                                    "duration_length": {
                                        "type": "integer",
                                        "example": "3.00"
                                    },
                                    "duration_unit_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "mpp_option_available": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "study_contact_detail_id": {
                                        "type": "integer",
                                        "example": "46"
                                    },
                                    "program_url": {
                                        "type": "string"
                                    },
                                    "ucas_code": {
                                        "type": "string"
                                    },
                                    "jacs_code": {
                                        "type": "string"
                                    },
                                    "atas_certificate_required": {
                                        "type": "integer"
                                    },
                                    "security_clearance_required": {
                                        "type": "integer"
                                    },
                                    "minimum_age_limit": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "is_full_time": {
                                        "type": "integer"
                                    },
                                    "hours_per_week": {
                                        "type": "integer"
                                    },
                                    "document_set_id": {
                                        "type": "integer"
                                    },
                                    "program_status_pid": {
                                        "type": "integer"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "panel_pid": {
                                        "type": "integer"
                                    },
                                    "subject_code": {
                                        "type": "integer"
                                    },
                                    "conditional_admittance_pid": {
                                        "type": "integer"
                                    },
                                    "direct_entry_point": {
                                        "type": "integer"
                                    },
                                    "promotion_text": {
                                        "type": "string"
                                    },
                                    "internal_use_only": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-06-22 07:08:23"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-06-22 07:08:23"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Program"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Programs"
                ],
                "summary": "Cancel Program item",
                "description": "Cancel Program items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Program record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programs/search": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Search all Programs",
                "description": "Search Programs",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "institution_unit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_title_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entry_type_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entry_level_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_level_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "duration_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "duration_length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "duration_unit_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ucas_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jacs_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "atas_certificate_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "security_clearance_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "award_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_full_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_status_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "conditional_admittance_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "direct_entry_point",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "promotion_text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "internal_use_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "approval_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "additional_info_external",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "additional_info_internal",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Program"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programaudits": {
            "get": {
                "tags": [
                    "ProgramAudits"
                ],
                "summary": "Get all ProgramAudits",
                "description": "Search ProgramAudits",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramAudit** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "program_audit_id": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "institution_id": {
                                    "type": "integer"
                                },
                                "institution_unit_id": {
                                    "type": "integer"
                                },
                                "program_code": {
                                    "type": "string"
                                },
                                "program_title_pid": {
                                    "type": "integer"
                                },
                                "program_name": {
                                    "type": "string"
                                },
                                "entry_type_code": {
                                    "type": "string"
                                },
                                "entry_level_pid": {
                                    "type": "integer"
                                },
                                "program_level_pid": {
                                    "type": "integer"
                                },
                                "program_type_pid": {
                                    "type": "integer"
                                },
                                "duration_pid": {
                                    "type": "integer"
                                },
                                "mpp_option_available": {
                                    "type": "integer"
                                },
                                "study_contact_detail_id": {
                                    "type": "integer"
                                },
                                "program_url": {
                                    "type": "string"
                                },
                                "ucas_code": {
                                    "type": "string"
                                },
                                "jacs_code": {
                                    "type": "string"
                                },
                                "atas_certificate_required": {
                                    "type": "integer"
                                },
                                "security_clearance_required": {
                                    "type": "integer"
                                },
                                "minimum_age_limit": {
                                    "type": "number"
                                },
                                "award_id": {
                                    "type": "integer"
                                },
                                "is_full_time": {
                                    "type": "integer"
                                },
                                "hours_per_week": {
                                    "type": "integer"
                                },
                                "document_set_id": {
                                    "type": "integer"
                                },
                                "program_status_pid": {
                                    "type": "integer"
                                },
                                "version": {
                                    "type": "integer"
                                },
                                "panel_pid": {
                                    "type": "integer"
                                },
                                "subject_code": {
                                    "type": "string"
                                },
                                "conditional_admittance_pid": {
                                    "type": "integer"
                                },
                                "direct_entry_point": {
                                    "type": "integer"
                                },
                                "promotion_text": {
                                    "type": "string"
                                },
                                "internal_use_only": {
                                    "type": "integer"
                                },
                                "approval_required": {
                                    "type": "integer"
                                },
                                "approved_by": {
                                    "type": "string"
                                },
                                "approved_at": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramAudit** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramAudit** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, institution_id, institution_unit_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramAudit detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramAudit"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramAudits"
                ],
                "summary": "create ProgramAudit item",
                "description": "create ProgramAudit items",
                "requestBody": {
                    "description": "create ProgramAudit detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "description"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramAudit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramAudit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programaudits/{id}": {
            "get": {
                "tags": [
                    "ProgramAudits"
                ],
                "summary": "Get specical ProgramAudit record",
                "description": "Get specical ProgramAudit record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramAudit record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramAudit** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, institution_id, institution_unit_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramAudit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramAudit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramAudits"
                ],
                "summary": "Update ProgramAudit item",
                "description": "Update ProgramAudit items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramAudit record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ProgramAudit detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "description"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramAudit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramAudit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramAudits"
                ],
                "summary": "Cancel ProgramAudit item",
                "description": "Cancel ProgramAudit items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramAudit record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programaudits/search": {
            "get": {
                "tags": [
                    "ProgramAudits"
                ],
                "summary": "Search all ProgramAudits",
                "description": "Search ProgramAudits",
                "parameters": [
                    {
                        "name": "program_audit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "institution_unit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_title_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entry_type_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entry_level_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_level_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "duration_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "mpp_option_available",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "study_contact_detail_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ucas_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jacs_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "atas_certificate_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "security_clearance_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minimum_age_limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "award_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_full_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hours_per_week",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "document_set_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_status_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "panel_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subject_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conditional_admittance_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "direct_entry_point",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "promotion_text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "internal_use_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "approval_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "approved_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approved_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramAudit object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramAudit"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programdates": {
            "get": {
                "tags": [
                    "ProgramDates"
                ],
                "summary": "Get all ProgramDates",
                "description": "Search ProgramDates",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramDate** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "program_intake_id": {
                                    "type": "integer",
                                    "example": "1001"
                                },
                                "activity_type_id": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "start_date_label": {
                                    "type": "string"
                                },
                                "start_date": {
                                    "type": "string",
                                    "example": "2018-09-17"
                                },
                                "end_date_label": {
                                    "type": "string"
                                },
                                "end_date": {
                                    "type": "string",
                                    "example": "2018-10-08"
                                },
                                "start_date_usage_type": {
                                    "type": "string",
                                    "example": "External (A,P,S + Student)"
                                },
                                "end_date_usage_type": {
                                    "type": "string",
                                    "example": "Internal Only"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-11-26 13:21:20"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-11-26 13:21:20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramDate** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramDate** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_intake_id, start_date_label"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramDate detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramDate"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramDates"
                ],
                "summary": "create ProgramDate item",
                "description": "create ProgramDate items",
                "requestBody": {
                    "description": "create ProgramDate detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_intake_id",
                                    "activity_type_id"
                                ],
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": "1001"
                                    },
                                    "activity_type_id": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "start_date_label": {
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2018-09-17"
                                    },
                                    "end_date_label": {
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2018-10-08"
                                    },
                                    "start_date_usage_type": {
                                        "type": "string",
                                        "example": "External (A,P,S + Student)"
                                    },
                                    "end_date_usage_type": {
                                        "type": "string",
                                        "example": "Internal Only"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-11-26 13:21:20"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-11-26 13:21:20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramDate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programdates/{id}": {
            "get": {
                "tags": [
                    "ProgramDates"
                ],
                "summary": "Get specical ProgramDate record",
                "description": "Get specical ProgramDate record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramDate record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramDate** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_intake_id, start_date_label"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramDate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramDates"
                ],
                "summary": "Update ProgramDate item",
                "description": "Update ProgramDate items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramDate record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ProgramDate detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_intake_id",
                                    "activity_type_id"
                                ],
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": "1001"
                                    },
                                    "activity_type_id": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "start_date_label": {
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2018-09-17"
                                    },
                                    "end_date_label": {
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2018-10-08"
                                    },
                                    "start_date_usage_type": {
                                        "type": "string",
                                        "example": "External (A,P,S + Student)"
                                    },
                                    "end_date_usage_type": {
                                        "type": "string",
                                        "example": "Internal Only"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-11-26 13:21:20"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-11-26 13:21:20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramDate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramDates"
                ],
                "summary": "Cancel ProgramDate item",
                "description": "Cancel ProgramDate items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramDate record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programdates/search": {
            "get": {
                "tags": [
                    "ProgramDates"
                ],
                "summary": "Search all ProgramDates",
                "description": "Search ProgramDates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "program_intake_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1001"
                        }
                    },
                    {
                        "name": "activity_type_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "start_date_label",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-09-17"
                        }
                    },
                    {
                        "name": "end_date_label",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-10-08"
                        }
                    },
                    {
                        "name": "start_date_usage_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "External (A,P,S + Student)"
                        }
                    },
                    {
                        "name": "end_date_usage_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Internal Only"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-11-26 13:21:20"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramDate object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramDate"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintakes": {
            "get": {
                "tags": [
                    "Programintakes"
                ],
                "summary": "Program Intake Index API (kss_program_intake)",
                "description": "Get List of Program Intake Records",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntake** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1001"
                                },
                                "program_id": {
                                    "type": "integer",
                                    "example": "1001"
                                },
                                "intake_month_year": {
                                    "type": "string",
                                    "example": "2018-09-01 00:00:00"
                                },
                                "season_pid": {
                                    "type": "integer",
                                    "example": "30"
                                },
                                "application_deadline_date": {
                                    "type": "string",
                                    "example": "2018-09-01 00:00:00"
                                },
                                "program_fee": {
                                    "type": "number",
                                    "example": "15500.00"
                                },
                                "deposit_as_program_fee": {
                                    "type": "integer"
                                },
                                "currency_code": {
                                    "type": "string",
                                    "example": "GBP"
                                },
                                "fees_confirmed": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "program_dates_confirmed": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "fees_collected_by_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "program_status_pid": {
                                    "type": "integer",
                                    "example": "30"
                                },
                                "licence_key": {
                                    "type": "string"
                                },
                                "acl_code": {
                                    "type": "string"
                                },
                                "brp_collection_address_id": {
                                    "type": "integer"
                                },
                                "deposit_set_id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "version": {
                                    "type": "integer"
                                },
                                "approval_required": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "approved_by": {
                                    "type": "string"
                                },
                                "approved_at": {
                                    "type": "string",
                                    "example": "2020-07-22 05:45:54"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2020-07-22 05:45:54"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2020-07-22 05:45:54"
                                },
                                "quota_exists": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntake** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramIntake** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, intake_month_year, season_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Programintake detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntake"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Programintakes"
                ],
                "summary": "Program Intake Create API (kss_program_intake)",
                "description": "Create a specific Program Intake and related object (if any)",
                "requestBody": {
                    "description": "create Programintake detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id",
                                    "intake_month_year"
                                ],
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1001"
                                    },
                                    "intake_month_year": {
                                        "type": "string",
                                        "example": "2018-09-01 00:00:00"
                                    },
                                    "season_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "application_deadline_date": {
                                        "type": "string",
                                        "example": "2018-09-01 00:00:00"
                                    },
                                    "program_fee": {
                                        "type": "number",
                                        "example": "15500.00"
                                    },
                                    "deposit_as_program_fee": {
                                        "type": "integer"
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "GBP"
                                    },
                                    "fees_confirmed": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "program_dates_confirmed": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "fees_collected_by_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "program_status_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "licence_key": {
                                        "type": "string",
                                        "example": "5JDJGYXH8"
                                    },
                                    "acl_code": {
                                        "type": "string"
                                    },
                                    "brp_collection_address_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "deposit_set_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "example": "2020-07-22 05:45:54"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2020-07-22 05:45:54"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-07-22 05:45:54"
                                    },
                                    "quota_exists": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Programintake object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntake"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintakes/{id}": {
            "get": {
                "tags": [
                    "Programintakes"
                ],
                "summary": "Program Intake View API (kss_program_intake)",
                "description": "Get A Specific Program Intake Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Programintake record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntake** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, intake_month_year, season_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Programintake object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntake"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Programintakes"
                ],
                "summary": "Program Intake Update API (kss_program_intake)",
                "description": "Update a specific Program Intake and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Programintake record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Programintake detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id",
                                    "intake_month_year"
                                ],
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1001"
                                    },
                                    "intake_month_year": {
                                        "type": "string",
                                        "example": "2018-09-01 00:00:00"
                                    },
                                    "season_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "application_deadline_date": {
                                        "type": "string",
                                        "example": "2018-09-01 00:00:00"
                                    },
                                    "program_fee": {
                                        "type": "number",
                                        "example": "15500.00"
                                    },
                                    "deposit_as_program_fee": {
                                        "type": "integer"
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "GBP"
                                    },
                                    "fees_confirmed": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "program_dates_confirmed": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "fees_collected_by_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "program_status_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "licence_key": {
                                        "type": "string",
                                        "example": "5JDJGYXH8"
                                    },
                                    "acl_code": {
                                        "type": "string"
                                    },
                                    "brp_collection_address_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "deposit_set_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "example": "2020-07-22 05:45:54"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2020-07-22 05:45:54"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-07-22 05:45:54"
                                    },
                                    "quota_exists": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Programintake object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntake"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Programintakes"
                ],
                "summary": "Program Intake Delete API (kss_program_intake)",
                "description": "Delete a specific Program Intake",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Programintake record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintakes/search": {
            "get": {
                "tags": [
                    "Programintakes"
                ],
                "summary": "Program Intake Search API (kss_program_intake)",
                "description": "Search Program Intake Records",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1001"
                        }
                    },
                    {
                        "name": "program_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1001"
                        }
                    },
                    {
                        "name": "intake_month_year",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-09-01 00:00:00"
                        }
                    },
                    {
                        "name": "season_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "30"
                        }
                    },
                    {
                        "name": "application_deadline_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "program_fee",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "15500.00"
                        }
                    },
                    {
                        "name": "deposit_as_program_fee",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "currency_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "GBP"
                        }
                    },
                    {
                        "name": "fees_confirmed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "program_dates_confirmed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "fees_collected_by_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "program_status_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "30"
                        }
                    },
                    {
                        "name": "licence_key",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "acl_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "brp_collection_address_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "deposit_set_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "approval_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "approved_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "approved_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-07-22 05:45:54"
                        }
                    },
                    {
                        "name": "quota_exists",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Programintake object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntake"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintakeaudits": {
            "get": {
                "tags": [
                    "ProgramIntakeAudits"
                ],
                "summary": "Get all ProgramIntakeAudits",
                "description": "Search ProgramIntakeAudits",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntakeAudit** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "program_intake_audit_id": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "program_id": {
                                    "type": "integer"
                                },
                                "intake_month_year": {
                                    "type": "string"
                                },
                                "season_pid": {
                                    "type": "integer"
                                },
                                "application_deadline_date": {
                                    "type": "string"
                                },
                                "program_fee": {
                                    "type": "number"
                                },
                                "deposit_as_program_fee": {
                                    "type": "integer"
                                },
                                "currency_code": {
                                    "type": "string"
                                },
                                "fees_confirmed": {
                                    "type": "integer"
                                },
                                "program_dates_confirmed": {
                                    "type": "integer"
                                },
                                "fees_collected_by_pid": {
                                    "type": "integer"
                                },
                                "program_status_pid": {
                                    "type": "integer"
                                },
                                "licence_key": {
                                    "type": "string"
                                },
                                "acl_code": {
                                    "type": "string"
                                },
                                "brp_collection_address_id": {
                                    "type": "integer"
                                },
                                "deposit_set_id": {
                                    "type": "integer"
                                },
                                "version": {
                                    "type": "integer"
                                },
                                "approval_required": {
                                    "type": "integer"
                                },
                                "approved_by": {
                                    "type": "string"
                                },
                                "approved_at": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntakeAudit** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramIntakeAudit** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_intake_audit_id, program_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramIntakeAudit detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntakeAudit"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramIntakeAudits"
                ],
                "summary": "create ProgramIntakeAudit item",
                "description": "create ProgramIntakeAudit items",
                "requestBody": {
                    "description": "create ProgramIntakeAudit detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "description"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramIntakeAudit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeAudit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintakeaudits/{id}": {
            "get": {
                "tags": [
                    "ProgramIntakeAudits"
                ],
                "summary": "Get specical ProgramIntakeAudit record",
                "description": "Get specical ProgramIntakeAudit record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeAudit record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntakeAudit** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_intake_audit_id, program_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramIntakeAudit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeAudit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramIntakeAudits"
                ],
                "summary": "Update ProgramIntakeAudit item",
                "description": "Update ProgramIntakeAudit items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramIntakeAudit record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ProgramIntakeAudit detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "description"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramIntakeAudit object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeAudit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramIntakeAudits"
                ],
                "summary": "Cancel ProgramIntakeAudit item",
                "description": "Cancel ProgramIntakeAudit items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramIntakeAudit record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintakeaudits/search": {
            "get": {
                "tags": [
                    "ProgramIntakeAudits"
                ],
                "summary": "Search all ProgramIntakeAudits",
                "description": "Search ProgramIntakeAudits",
                "parameters": [
                    {
                        "name": "program_intake_audit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "intake_month_year",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "season_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "application_deadline_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_fee",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "deposit_as_program_fee",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "currency_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fees_confirmed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_dates_confirmed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "fees_collected_by_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_status_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "licence_key",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "acl_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brp_collection_address_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "deposit_set_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "approval_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "approved_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approved_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramIntakeAudit object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntakeAudit"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintaketerm": {
            "get": {
                "tags": [
                    "ProgramIntakeTerms"
                ],
                "summary": "Get all ProgramIntakeTerms",
                "description": "Search ProgramIntakeTerms",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramIntakeTerm** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "program_intake_id": {
                                    "type": "integer",
                                    "example": "1001"
                                },
                                "term_id": {
                                    "type": "integer",
                                    "example": "150"
                                },
                                "term_amount": {
                                    "type": "number",
                                    "example": "7750.00"
                                },
                                "currency_code": {
                                    "type": "string",
                                    "example": "GBP"
                                },
                                "term_type_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2020-03-30 01:45:23"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2020-03-30 01:45:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntakeTerm** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramIntakeTerm** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "program_intake_id, term_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramIntakeTerm detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntakeTerm"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramIntakeTerms"
                ],
                "summary": "create ProgramIntakeTerm item",
                "description": "create ProgramIntakeTerm items",
                "requestBody": {
                    "description": "create ProgramIntakeTerm detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_intake_id",
                                    "term_id"
                                ],
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": "1001"
                                    },
                                    "term_id": {
                                        "type": "integer",
                                        "example": "150"
                                    },
                                    "term_amount": {
                                        "type": "number",
                                        "example": "7750.00"
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "GBP"
                                    },
                                    "term_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2020-03-30 01:45:23"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-03-30 01:45:23"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramIntakeTerm object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeTerm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintaketerm/{id}": {
            "get": {
                "tags": [
                    "ProgramIntakeTerms"
                ],
                "summary": "Get specical ProgramIntakeTerm record",
                "description": "Get specical ProgramIntakeTerm record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramIntakeTerm record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramIntakeTerm** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "program_intake_id, term_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramIntakeTerm object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeTerm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramIntakeTerms"
                ],
                "summary": "Update ProgramIntakeTerm item",
                "description": "Update ProgramIntakeTerm items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramIntakeTerm record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ProgramIntakeTerm detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_intake_id",
                                    "term_id"
                                ],
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": "1001"
                                    },
                                    "term_id": {
                                        "type": "integer",
                                        "example": "150"
                                    },
                                    "term_amount": {
                                        "type": "number",
                                        "example": "7750.00"
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "GBP"
                                    },
                                    "term_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2020-03-30 01:45:23"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-03-30 01:45:23"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramIntakeTerm object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntakeTerm"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramIntakeTerms"
                ],
                "summary": "Cancel ProgramIntakeTerm item",
                "description": "Cancel ProgramIntakeTerm items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramIntakeTerm record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programintaketerm/search": {
            "get": {
                "tags": [
                    "ProgramIntakeTerms"
                ],
                "summary": "Search all ProgramIntakeTerms",
                "description": "Search ProgramIntakeTerms",
                "parameters": [
                    {
                        "name": "program_intake_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1001"
                        }
                    },
                    {
                        "name": "term_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "150"
                        }
                    },
                    {
                        "name": "term_amount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "7750.00"
                        }
                    },
                    {
                        "name": "currency_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "GBP"
                        }
                    },
                    {
                        "name": "term_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-03-30 01:45:23"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramIntakeTerm object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntakeTerm"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programmodules": {
            "get": {
                "tags": [
                    "ProgramModules"
                ],
                "summary": "Get all ProgramModules",
                "description": "Search ProgramModules",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramModule** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "6453"
                                },
                                "program_id": {
                                    "type": "integer",
                                    "example": "1032"
                                },
                                "module_id": {
                                    "type": "integer",
                                    "example": "324"
                                },
                                "pathway_pid": {
                                    "type": "integer"
                                },
                                "module_type_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "credits": {
                                    "type": "integer"
                                },
                                "term_order": {
                                    "type": "string",
                                    "example": "1,2"
                                },
                                "grade_scale_id": {
                                    "type": "integer",
                                    "example": "26"
                                },
                                "module_calculation_type_pid": {
                                    "type": "integer",
                                    "example": "30"
                                },
                                "module_calculation_stage": {
                                    "type": "integer"
                                },
                                "module_weighting": {
                                    "type": "integer"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-08-07 16:38:21"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-08-28 12:58:29"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramModule** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramModule** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_id, module_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramModule detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramModule"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramModules"
                ],
                "summary": "create ProgramModule item",
                "description": "create ProgramModule items",
                "requestBody": {
                    "description": "create ProgramModule detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id",
                                    "module_id"
                                ],
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1032"
                                    },
                                    "module_id": {
                                        "type": "integer",
                                        "example": "324"
                                    },
                                    "pathway_pid": {
                                        "type": "integer"
                                    },
                                    "module_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "term_order": {
                                        "type": "string",
                                        "example": "1,2"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer",
                                        "example": "26"
                                    },
                                    "module_calculation_type_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "module_calculation_stage": {
                                        "type": "integer"
                                    },
                                    "module_weighting": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-08-07 16:38:21"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-08-28 12:58:29"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramModule object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramModule"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programmodules/{id}": {
            "get": {
                "tags": [
                    "ProgramModules"
                ],
                "summary": "Get specical ProgramModule record",
                "description": "Get specical ProgramModule record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramModule record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramModule** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_id, module_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramModule object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramModule"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramModules"
                ],
                "summary": "Update ProgramModule item",
                "description": "Update ProgramModule items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramModule record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ProgramModule detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id",
                                    "module_id"
                                ],
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1032"
                                    },
                                    "module_id": {
                                        "type": "integer",
                                        "example": "324"
                                    },
                                    "pathway_pid": {
                                        "type": "integer"
                                    },
                                    "module_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "term_order": {
                                        "type": "string",
                                        "example": "1,2"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer",
                                        "example": "26"
                                    },
                                    "module_calculation_type_pid": {
                                        "type": "integer",
                                        "example": "30"
                                    },
                                    "module_calculation_stage": {
                                        "type": "integer"
                                    },
                                    "module_weighting": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-08-07 16:38:21"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-08-28 12:58:29"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramModule object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramModule"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramModules"
                ],
                "summary": "Cancel ProgramModule item",
                "description": "Cancel ProgramModule items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramModule record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programmodules/search": {
            "get": {
                "tags": [
                    "ProgramModules"
                ],
                "summary": "Search all ProgramModules",
                "description": "Search ProgramModules",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "6453"
                        }
                    },
                    {
                        "name": "program_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1032"
                        }
                    },
                    {
                        "name": "module_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "324"
                        }
                    },
                    {
                        "name": "pathway_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "module_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "credits",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1,2"
                        }
                    },
                    {
                        "name": "grade_scale_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "26"
                        }
                    },
                    {
                        "name": "module_calculation_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "30"
                        }
                    },
                    {
                        "name": "module_calculation_stage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "module_weighting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-08-07 16:38:21"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-08-28 12:58:29"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramModule object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramModule"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programmoduleassessments": {
            "get": {
                "tags": [
                    "ProgramModuleAssessments"
                ],
                "summary": "Get all ProgramModuleAssessments",
                "description": "Search ProgramModuleAssessments",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramModuleAssessment** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "3891"
                                },
                                "program_module_id": {
                                    "type": "integer",
                                    "example": "6575"
                                },
                                "assessment_pid": {
                                    "type": "integer",
                                    "example": "1550"
                                },
                                "weighting": {
                                    "type": "number",
                                    "example": "40"
                                },
                                "grade_scale_id": {
                                    "type": "integer"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-09-03 21:01:50"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-09-03 21:01:50"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramModuleAssessment** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramModuleAssessment** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "assessment_pid, weighting"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramModuleAssessment detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramModuleAssessment"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramModuleAssessments"
                ],
                "summary": "create ProgramModuleAssessment item",
                "description": "create ProgramModuleAssessment items",
                "requestBody": {
                    "description": "create ProgramModuleAssessment detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_module_id"
                                ],
                                "properties": {
                                    "program_module_id": {
                                        "type": "integer",
                                        "example": "6575"
                                    },
                                    "assessment_pid": {
                                        "type": "integer",
                                        "example": "1550"
                                    },
                                    "weighting": {
                                        "type": "number",
                                        "example": "40"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-09-03 21:01:50"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-09-03 21:01:50"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramModuleAssessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramModuleAssessment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programmoduleassessments/{id}": {
            "get": {
                "tags": [
                    "ProgramModuleAssessments"
                ],
                "summary": "Get specical ProgramModuleAssessment record",
                "description": "Get specical ProgramModuleAssessment record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramModuleAssessment record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramModuleAssessment** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "assessment_pid, weighting"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramModuleAssessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramModuleAssessment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramModuleAssessments"
                ],
                "summary": "Update ProgramModuleAssessment item",
                "description": "Update ProgramModuleAssessment items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramModuleAssessment record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ProgramModuleAssessment detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_module_id"
                                ],
                                "properties": {
                                    "program_module_id": {
                                        "type": "integer",
                                        "example": "6575"
                                    },
                                    "assessment_pid": {
                                        "type": "integer",
                                        "example": "1550"
                                    },
                                    "weighting": {
                                        "type": "number",
                                        "example": "40"
                                    },
                                    "grade_scale_id": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-09-03 21:01:50"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-09-03 21:01:50"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramModuleAssessment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramModuleAssessment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramModuleAssessments"
                ],
                "summary": "Cancel ProgramModuleAssessment item",
                "description": "Cancel ProgramModuleAssessment items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramModuleAssessment record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programmoduleassessments/search": {
            "get": {
                "tags": [
                    "ProgramModuleAssessments"
                ],
                "summary": "Search all ProgramModuleAssessments",
                "description": "Search ProgramModuleAssessments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_module_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "assessment_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "weighting",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "grade_scale_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramModuleAssessment object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramModuleAssessment"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programsubjectareas": {
            "get": {
                "tags": [
                    "ProgramSubjectAreas"
                ],
                "summary": "Get all ProgramSubjectAreas",
                "description": "Search ProgramSubjectAreas",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgramSubjectArea** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "program_id": {
                                    "type": "integer",
                                    "example": "1518"
                                },
                                "subject_area_id": {
                                    "type": "integer",
                                    "example": "9"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramSubjectArea** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgramSubjectArea** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_id, subject_area_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramSubjectArea detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramSubjectArea"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgramSubjectAreas"
                ],
                "summary": "create ProgramSubjectArea item",
                "description": "create ProgramSubjectArea items",
                "requestBody": {
                    "description": "create ProgramSubjectArea detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id",
                                    "subject_area_id"
                                ],
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1518"
                                    },
                                    "subject_area_id": {
                                        "type": "integer",
                                        "example": "9"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramSubjectArea object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramSubjectArea"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programsubjectareas/{id}": {
            "get": {
                "tags": [
                    "ProgramSubjectAreas"
                ],
                "summary": "Get specical ProgramSubjectArea record",
                "description": "Get specical ProgramSubjectArea record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ProgramSubjectArea record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgramSubjectArea** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, program_id, subject_area_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramSubjectArea object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramSubjectArea"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgramSubjectAreas"
                ],
                "summary": "Update ProgramSubjectArea item",
                "description": "Update ProgramSubjectArea items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramSubjectArea record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update ProgramSubjectArea detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id",
                                    "subject_area_id"
                                ],
                                "properties": {
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1518"
                                    },
                                    "subject_area_id": {
                                        "type": "integer",
                                        "example": "9"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProgramSubjectArea object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramSubjectArea"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgramSubjectAreas"
                ],
                "summary": "Cancel ProgramSubjectArea item",
                "description": "Cancel ProgramSubjectArea items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of ProgramSubjectArea record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/programsubjectareas/search": {
            "get": {
                "tags": [
                    "ProgramSubjectAreas"
                ],
                "summary": "Search all ProgramSubjectAreas",
                "description": "Search ProgramSubjectAreas",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "program_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1518"
                        }
                    },
                    {
                        "name": "subject_area_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "9"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgramSubjectArea object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramSubjectArea"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progression-route-module/search": {
            "get": {
                "tags": [
                    "ProgressionRouteModules"
                ],
                "summary": "Search all ProgressionRouteModules",
                "description": "Search ProgressionRouteModules",
                "parameters": [
                    {
                        "name": "progression_route_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "114"
                        }
                    },
                    {
                        "name": "module_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "25"
                        }
                    },
                    {
                        "name": "module_score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "50"
                        }
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "module_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "core_choice",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_on_offer_letter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-08-28 13:37:51"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ProgressionRouteModule object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgressionRouteModule"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progressionadditionalrequirements": {
            "get": {
                "tags": [
                    "ProgressionAdditionalRequirements"
                ],
                "summary": "Get all ProgressionAdditionalRequirements",
                "description": "Search ProgressionAdditionalRequirements",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgressionAdditionalRequirement** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "progression_route_id": {
                                    "type": "integer",
                                    "example": "15368"
                                },
                                "additional_requirement_type_pid": {
                                    "type": "integer",
                                    "example": "250"
                                },
                                "condition_text": {
                                    "type": "string",
                                    "example": "One English skill can be 55% as long as overall English is achieved."
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-08-05 20:22:33"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-08-05 20:22:33"
                                },
                                "additional_requirement_level_pid": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgressionAdditionalRequirement** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgressionAdditionalRequirement** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, progression_route_id, additional_requirement_type_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Subject detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgressionAdditionalRequirement"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProgressionAdditionalRequirements"
                ],
                "summary": "create Subject item",
                "description": "create Subject items",
                "requestBody": {
                    "description": "create Subject detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "progression_route_id",
                                    "additional_requirement_type_pid",
                                    "additional_requirement_level_pid"
                                ],
                                "properties": {
                                    "progression_route_id": {
                                        "type": "integer",
                                        "example": "15368"
                                    },
                                    "additional_requirement_type_pid": {
                                        "type": "integer",
                                        "example": "250"
                                    },
                                    "condition_text": {
                                        "type": "string",
                                        "example": "One English skill can be 55% as long as overall English is achieved."
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-08-05 20:22:33"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-08-05 20:22:33"
                                    },
                                    "additional_requirement_level_pid": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subject object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressionAdditionalRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progressionadditionalrequirements/{id}": {
            "get": {
                "tags": [
                    "ProgressionAdditionalRequirements"
                ],
                "summary": "Get specical Subject record",
                "description": "Get specical Subject record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Subject record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgressionAdditionalRequirement** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, progression_route_id, additional_requirement_type_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressionAdditionalRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProgressionAdditionalRequirements"
                ],
                "summary": "Update Subject item",
                "description": "Update Subject items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Subject record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Subject detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "progression_route_id",
                                    "additional_requirement_type_pid",
                                    "additional_requirement_level_pid"
                                ],
                                "properties": {
                                    "progression_route_id": {
                                        "type": "integer",
                                        "example": "15368"
                                    },
                                    "additional_requirement_type_pid": {
                                        "type": "integer",
                                        "example": "250"
                                    },
                                    "condition_text": {
                                        "type": "string",
                                        "example": "One English skill can be 55% as long as overall English is achieved."
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2019-08-05 20:22:33"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-08-05 20:22:33"
                                    },
                                    "additional_requirement_level_pid": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subject object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressionAdditionalRequirement"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProgressionAdditionalRequirements"
                ],
                "summary": "Cancel Subject item",
                "description": "Cancel Subject items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Subject record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progressionadditionalrequirements/search": {
            "get": {
                "tags": [
                    "ProgressionAdditionalRequirements"
                ],
                "summary": "Search all ProgressionAdditionalRequirements",
                "description": "Search ProgressionAdditionalRequirements",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "progression_route_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "15368"
                        }
                    },
                    {
                        "name": "additional_requirement_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "250"
                        }
                    },
                    {
                        "name": "condition_text",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "One English skill can be 55% as long as overall English is achieved."
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-08-05 20:22:33"
                        }
                    },
                    {
                        "name": "additional_requirement_level_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Subject object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgressionAdditionalRequirement"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progressionroutes": {
            "get": {
                "tags": [
                    "Progressionroutes"
                ],
                "summary": "Get all Progressionroutes",
                "description": "Search Progressionroutes",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ProgressionRoute** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "institution_id": {
                                    "type": "integer",
                                    "example": "7"
                                },
                                "award_id": {
                                    "type": "integer",
                                    "example": "1003"
                                },
                                "program_id": {
                                    "type": "integer",
                                    "example": "1205"
                                },
                                "program_intake_id": {
                                    "type": "integer",
                                    "example": "1365"
                                },
                                "pathway_pid": {
                                    "type": "integer",
                                    "example": "90"
                                },
                                "academic_score": {
                                    "type": "number",
                                    "example": "65.00"
                                },
                                "english_exit_score": {
                                    "type": "number",
                                    "example": "70.00"
                                },
                                "english_reading_score": {
                                    "type": "number",
                                    "example": "55.00"
                                },
                                "english_writing_score": {
                                    "type": "number",
                                    "example": "55.00"
                                },
                                "english_listening_score": {
                                    "type": "number",
                                    "example": "55.00"
                                },
                                "english_speaking_score": {
                                    "type": "number",
                                    "example": "55.00"
                                },
                                "progression_to_year": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "progression_to_semester": {
                                    "type": "integer"
                                },
                                "progression_institution_id": {
                                    "type": "integer",
                                    "example": "16"
                                },
                                "progression_institution_unit_id": {
                                    "type": "integer",
                                    "example": "17"
                                },
                                "progression_program_id": {
                                    "type": "integer",
                                    "example": "1518"
                                },
                                "progression_program_intake_id": {
                                    "type": "integer",
                                    "example": "3000"
                                },
                                "module_operator_logic": {
                                    "type": "string"
                                },
                                "version": {
                                    "type": "integer"
                                },
                                "approval_required": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "approved_by": {
                                    "type": "string"
                                },
                                "approved_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-08-05 20:24:00"
                                },
                                "progression_route_status_pid": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgressionRoute** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ProgressionRoute** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, award_id, pathway_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Progressionroute detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgressionRoute"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Progressionroutes"
                ],
                "summary": "create Progressionroute item",
                "description": "create Progressionroute items",
                "requestBody": {
                    "description": "create Progressionroute detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer",
                                        "example": "7"
                                    },
                                    "award_id": {
                                        "type": "integer",
                                        "example": "1003"
                                    },
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1205"
                                    },
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": "1365"
                                    },
                                    "pathway_pid": {
                                        "type": "integer",
                                        "example": "90"
                                    },
                                    "academic_score": {
                                        "type": "number",
                                        "example": "65.00"
                                    },
                                    "english_exit_score": {
                                        "type": "number",
                                        "example": "70.00"
                                    },
                                    "english_reading_score": {
                                        "type": "number",
                                        "example": "55.00"
                                    },
                                    "english_writing_score": {
                                        "type": "number",
                                        "example": "55.00"
                                    },
                                    "english_listening_score": {
                                        "type": "number",
                                        "example": "55.00"
                                    },
                                    "english_speaking_score": {
                                        "type": "number",
                                        "example": "55.00"
                                    },
                                    "progression_to_year": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "progression_to_semester": {
                                        "type": "integer"
                                    },
                                    "progression_institution_id": {
                                        "type": "integer",
                                        "example": "16"
                                    },
                                    "progression_institution_unit_id": {
                                        "type": "integer",
                                        "example": "17"
                                    },
                                    "progression_program_id": {
                                        "type": "integer",
                                        "example": "1518"
                                    },
                                    "progression_program_intake_id": {
                                        "type": "integer",
                                        "example": "3000"
                                    },
                                    "module_operator_logic": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-08-05 20:24:00"
                                    },
                                    "progression_route_status_pid": {
                                        "type": "integer",
                                        "example": "20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Progressionroute object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressionRoute"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progressionroutes/{id}": {
            "get": {
                "tags": [
                    "Progressionroutes"
                ],
                "summary": "Get specical Progressionroute record",
                "description": "Get specical Progressionroute record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Progressionroute record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ProgresisonRoute** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, award_id, pathway_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Progressionroute object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressionRoute"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Progressionroutes"
                ],
                "summary": "Update Progressionroute item",
                "description": "Update Progressionroute items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Progressionroute record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Progressionroute detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "institution_id": {
                                        "type": "integer",
                                        "example": "7"
                                    },
                                    "award_id": {
                                        "type": "integer",
                                        "example": "1003"
                                    },
                                    "program_id": {
                                        "type": "integer",
                                        "example": "1205"
                                    },
                                    "program_intake_id": {
                                        "type": "integer",
                                        "example": "1365"
                                    },
                                    "pathway_pid": {
                                        "type": "integer",
                                        "example": "90"
                                    },
                                    "academic_score": {
                                        "type": "number",
                                        "example": "65.00"
                                    },
                                    "english_exit_score": {
                                        "type": "number",
                                        "example": "70.00"
                                    },
                                    "english_reading_score": {
                                        "type": "number",
                                        "example": "55.00"
                                    },
                                    "english_writing_score": {
                                        "type": "number",
                                        "example": "55.00"
                                    },
                                    "english_listening_score": {
                                        "type": "number",
                                        "example": "55.00"
                                    },
                                    "english_speaking_score": {
                                        "type": "number",
                                        "example": "55.00"
                                    },
                                    "progression_to_year": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "progression_to_semester": {
                                        "type": "integer"
                                    },
                                    "progression_institution_id": {
                                        "type": "integer",
                                        "example": "16"
                                    },
                                    "progression_institution_unit_id": {
                                        "type": "integer",
                                        "example": "17"
                                    },
                                    "progression_program_id": {
                                        "type": "integer",
                                        "example": "1518"
                                    },
                                    "progression_program_intake_id": {
                                        "type": "integer",
                                        "example": "3000"
                                    },
                                    "module_operator_logic": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2019-08-05 20:24:00"
                                    },
                                    "progression_route_status_pid": {
                                        "type": "integer",
                                        "example": "20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Progressionroute object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressionRoute"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Progressionroutes"
                ],
                "summary": "Cancel Progressionroute item",
                "description": "Cancel Progressionroute items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Progressionroute record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/progressionroutes/search": {
            "get": {
                "tags": [
                    "Progressionroutes"
                ],
                "summary": "Search all Progressionroutes",
                "description": "Search Progressionroutes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "7"
                        }
                    },
                    {
                        "name": "award_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1003"
                        }
                    },
                    {
                        "name": "program_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1205"
                        }
                    },
                    {
                        "name": "program_intake_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1365"
                        }
                    },
                    {
                        "name": "pathway_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "90"
                        }
                    },
                    {
                        "name": "academic_score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "65.00"
                        }
                    },
                    {
                        "name": "english_exit_score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "70.00"
                        }
                    },
                    {
                        "name": "english_reading_score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "55.00"
                        }
                    },
                    {
                        "name": "english_writing_score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "55.00"
                        }
                    },
                    {
                        "name": "english_listening_score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "55.00"
                        }
                    },
                    {
                        "name": "english_speaking_score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": "55.00"
                        }
                    },
                    {
                        "name": "progression_to_year",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "progression_to_semester",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    },
                    {
                        "name": "progression_institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "16"
                        }
                    },
                    {
                        "name": "progression_institution_unit_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "17"
                        }
                    },
                    {
                        "name": "progression_program_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1518"
                        }
                    },
                    {
                        "name": "progression_program_intake_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "3000"
                        }
                    },
                    {
                        "name": "module_operator_logic",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "approval_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "approved_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "approved_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2019-08-05 20:24:00"
                        }
                    },
                    {
                        "name": "progression_route_status_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "20"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Progressionroute object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgressionRoute"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/publicholidays": {
            "get": {
                "tags": [
                    "Publicholidays"
                ],
                "summary": "Get all publicholidays",
                "description": "Search publicholidays",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PublicHoliday** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "country_code": {
                                    "type": "string",
                                    "example": "GBR"
                                },
                                "region_pid": {
                                    "type": "integer",
                                    "example": "20"
                                },
                                "date": {
                                    "type": "string",
                                    "example": "2019-05-06"
                                },
                                "is_confirmed": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Early May bank holiday"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PublicHoliday** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **PublicHoliday** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, country_code, date"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Publicholiday detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Publicholiday"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Publicholidays"
                ],
                "summary": "create Publicholiday item",
                "description": "create Publicholiday items",
                "requestBody": {
                    "description": "create Publicholiday detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Publicholiday"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Publicholiday object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Publicholiday"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/publicholidays/{id}": {
            "get": {
                "tags": [
                    "Publicholidays"
                ],
                "summary": "Get specical Publicholiday record",
                "description": "Get specical Publicholiday record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Publicholiday record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PublicHoliday** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, account_name, account_number"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publicholiday object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Publicholiday"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Publicholidays"
                ],
                "summary": "Update Publicholiday item",
                "description": "Update Publicholiday items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Publicholiday record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Publicholiday detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Publicholiday"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Publicholiday object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Publicholiday"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Publicholidays"
                ],
                "summary": "Cancel Publicholiday item",
                "description": "Cancel Publicholiday items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Publicholiday record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/publicholidays/search": {
            "get": {
                "tags": [
                    "Publicholidays"
                ],
                "summary": "Search all Publicholidays",
                "description": "Search Publicholidays",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "country_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_confirmed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Publicholiday object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Publicholiday"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualifications": {
            "get": {
                "tags": [
                    "Qualifications"
                ],
                "summary": "Get all Qualifications",
                "description": "Search Qualifications",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Qualification** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1001"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "UK-Aberdeen-NTIC-FC"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2020-08-07 14:11:31"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Qualification** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Qualification** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Qualification detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Qualification"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Qualifications"
                ],
                "summary": "create Qualification item",
                "description": "create Qualification items",
                "requestBody": {
                    "description": "create Qualification detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "UK-Aberdeen-NTIC-FC"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-08-07 14:11:31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Qualification object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Qualification"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualifications/{id}": {
            "get": {
                "tags": [
                    "Qualifications"
                ],
                "summary": "Get specical Qualification record",
                "description": "Get specical Qualification record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Qualification** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Qualification object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Qualification"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Qualifications"
                ],
                "summary": "Update Qualification item",
                "description": "Update Qualification items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Qualification record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Qualification detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "UK-Aberdeen-NTIC-FC"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string",
                                        "example": "kss.admin@yopmail.com"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2020-08-07 14:11:31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Qualification object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Qualification"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Qualifications"
                ],
                "summary": "Cancel Qualification item",
                "description": "Cancel Qualification items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Qualification record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualifications/search": {
            "get": {
                "tags": [
                    "Qualifications"
                ],
                "summary": "Search all Qualifications",
                "description": "Search Qualifications",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1001"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "UK-Aberdeen-NTIC-FC"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "kss.admin@yopmail.com"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-08-07 14:11:31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Qualification object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Qualification"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/subjects": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get all Subjects",
                "description": "Search Subjects",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Subject** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "AC"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "American Classroom"
                                },
                                "is_active": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Subject** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Subject** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, code, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Subject detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subject"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subjects"
                ],
                "summary": "create Subject item",
                "description": "create Subject items",
                "requestBody": {
                    "description": "create Subject detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "description"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "AC"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "American Classroom"
                                    },
                                    "is_active": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subject object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/subjects/search": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Search all Subjects",
                "description": "Search Subjects",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "AC"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "American Classroom"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Subject object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subject"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/subjectareas": {
            "get": {
                "tags": [
                    "SubjectAreas"
                ],
                "summary": "Get all SubjectAreas",
                "description": "Search SubjectAreas",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **SubjectArea** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Environment and Agriculture"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-08-17 09:22:50"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **SubjectArea** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **SubjectArea** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, name, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of SubjectArea detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubjectArea"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SubjectAreas"
                ],
                "summary": "create SubjectArea item",
                "description": "create SubjectArea items",
                "requestBody": {
                    "description": "create SubjectArea detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Environment and Agriculture"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-08-17 09:22:50"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "SubjectArea object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubjectArea"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/subjectareas/{id}": {
            "get": {
                "tags": [
                    "SubjectAreas"
                ],
                "summary": "Get specical SubjectArea record",
                "description": "Get specical SubjectArea record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the SubjectArea record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **SubjectArea** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, name, description"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubjectArea object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubjectArea"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SubjectAreas"
                ],
                "summary": "Update SubjectArea item",
                "description": "Update SubjectArea items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of SubjectArea record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update SubjectArea detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Environment and Agriculture"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-08-17 09:22:50"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "SubjectArea object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubjectArea"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SubjectAreas"
                ],
                "summary": "Cancel SubjectArea item",
                "description": "Cancel SubjectArea items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of SubjectArea record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/subjectareas/search": {
            "get": {
                "tags": [
                    "SubjectAreas"
                ],
                "summary": "Search all SubjectAreas",
                "description": "Search SubjectAreas",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Environment and Agriculture"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "You'll gain a broad understanding of environmental and / or food production issues on an Agriculture and Environment degree. Subjects include Environmental Policy, Environmental Science, Equine Sport Science, Food Policy, Geography, and Wildlife Conservation. As an Agriculture and Environment graduate, you could become:"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-08-17 09:22:50"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of SubjectArea object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubjectArea"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/terms": {
            "get": {
                "tags": [
                    "Terms"
                ],
                "summary": "Get all terms",
                "description": "Search terms",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Term** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "institution_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "term_name": {
                                    "type": "string",
                                    "example": "September 2T - Term 1"
                                },
                                "academic_year_pid": {
                                    "type": "integer",
                                    "example": "20"
                                },
                                "term_template_id": {
                                    "type": "integer",
                                    "example": 382
                                },
                                "term_group_pid": {
                                    "type": "integer",
                                    "example": 80
                                },
                                "term_season_pid": {
                                    "type": "integer",
                                    "example": 30
                                },
                                "is_half_term": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "version": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "approval_required": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "approved_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "approved_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "is_bespoke": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2019-06-22 07:08:23"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Term** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Term** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_name, academic_year_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Term detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Term"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Terms"
                ],
                "summary": "create Term item",
                "description": "create Term items",
                "requestBody": {
                    "description": "create Term detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_name",
                                    "academic_year_pid",
                                    "term_group_pid"
                                ],
                                "properties": {
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "term_name": {
                                        "type": "string"
                                    },
                                    "academic_year_pid": {
                                        "type": "integer"
                                    },
                                    "term_template_id": {
                                        "type": "integer"
                                    },
                                    "term_group_pid": {
                                        "type": "integer"
                                    },
                                    "term_season_pid": {
                                        "type": "integer"
                                    },
                                    "is_half_term": {
                                        "type": "integer"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string"
                                    },
                                    "is_bespoke": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Term object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/terms/{id}": {
            "get": {
                "tags": [
                    "Terms"
                ],
                "summary": "Get specical Term record",
                "description": "Get specical Term record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Term record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Term** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_name, academic_year_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Term object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Terms"
                ],
                "summary": "Update Term item",
                "description": "Update Term items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Term record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Term detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_name",
                                    "academic_year_pid",
                                    "term_group_pid"
                                ],
                                "properties": {
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "term_name": {
                                        "type": "string"
                                    },
                                    "academic_year_pid": {
                                        "type": "integer"
                                    },
                                    "term_template_id": {
                                        "type": "integer"
                                    },
                                    "term_group_pid": {
                                        "type": "integer"
                                    },
                                    "term_season_pid": {
                                        "type": "integer"
                                    },
                                    "is_half_term": {
                                        "type": "integer"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "approval_required": {
                                        "type": "integer"
                                    },
                                    "approved_by": {
                                        "type": "string"
                                    },
                                    "approved_at": {
                                        "type": "string"
                                    },
                                    "is_bespoke": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Term object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Terms"
                ],
                "summary": "Cancel Term item",
                "description": "Cancel Term items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Term record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/terms/search": {
            "get": {
                "tags": [
                    "Terms"
                ],
                "summary": "Search all Terms",
                "description": "Search Terms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "institution_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "term_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "academic_year_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_template_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_group_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_season_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_half_term",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "approval_required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "approved_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approved_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_bespoke",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Term object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Term"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termdates": {
            "get": {
                "tags": [
                    "TermDates"
                ],
                "summary": "Get all TermDates",
                "description": "Search TermDates",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EltQualification** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "289"
                                },
                                "term_id": {
                                    "type": "integer",
                                    "example": "145"
                                },
                                "activity_type_id": {
                                    "type": "integer",
                                    "example": "1000"
                                },
                                "start_date_label": {
                                    "type": "string",
                                    "example": "TEST1"
                                },
                                "start_date": {
                                    "type": "string",
                                    "example": "2018-06-04"
                                },
                                "end_date_label": {
                                    "type": "string",
                                    "example": "TEST1"
                                },
                                "end_date": {
                                    "type": "string",
                                    "example": "2018-06-03"
                                },
                                "start_date_usage_type": {
                                    "type": "string",
                                    "example": "Internal Only"
                                },
                                "end_date_usage_type": {
                                    "type": "string",
                                    "example": "Internal Only"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 10:59:38"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-06-08 10:59:38"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EltQualification** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EltQualification** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_id, activity_type_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TermDate detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TermDate"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TermDates"
                ],
                "summary": "create TermDate item",
                "description": "create TermDate items",
                "requestBody": {
                    "description": "create TermDate detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_id",
                                    "activity_type_id"
                                ],
                                "properties": {
                                    "term_id": {
                                        "type": "integer",
                                        "example": "145"
                                    },
                                    "activity_type_id": {
                                        "type": "integer",
                                        "example": "1000"
                                    },
                                    "start_date_label": {
                                        "type": "string",
                                        "example": "TEST1"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2018-06-04"
                                    },
                                    "end_date_label": {
                                        "type": "string",
                                        "example": "TEST1"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2018-06-03"
                                    },
                                    "start_date_usage_type": {
                                        "type": "string",
                                        "example": "Internal Only"
                                    },
                                    "end_date_usage_type": {
                                        "type": "string",
                                        "example": "Internal Only"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 10:59:38"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 10:59:38"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "TermDate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termdates/{id}": {
            "get": {
                "tags": [
                    "TermDates"
                ],
                "summary": "Get specical TermDate record",
                "description": "Get specical TermDate record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the TermDate record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EltQualification** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_id, activity_type_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TermDate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TermDates"
                ],
                "summary": "Update TermDate item",
                "description": "Update TermDate items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of TermDate record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update TermDate detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_id",
                                    "activity_type_id"
                                ],
                                "properties": {
                                    "term_id": {
                                        "type": "integer",
                                        "example": "145"
                                    },
                                    "activity_type_id": {
                                        "type": "integer",
                                        "example": "1000"
                                    },
                                    "start_date_label": {
                                        "type": "string",
                                        "example": "TEST1"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2018-06-04"
                                    },
                                    "end_date_label": {
                                        "type": "string",
                                        "example": "TEST1"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2018-06-03"
                                    },
                                    "start_date_usage_type": {
                                        "type": "string",
                                        "example": "Internal Only"
                                    },
                                    "end_date_usage_type": {
                                        "type": "string",
                                        "example": "Internal Only"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 10:59:38"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 10:59:38"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "TermDate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TermDates"
                ],
                "summary": "Cancel TermDate item",
                "description": "Cancel TermDate items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of TermDate record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termdates/search": {
            "get": {
                "tags": [
                    "TermDates"
                ],
                "summary": "Search all TermDates",
                "description": "Search TermDates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "289"
                        }
                    },
                    {
                        "name": "term_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "145"
                        }
                    },
                    {
                        "name": "activity_type_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1000"
                        }
                    },
                    {
                        "name": "start_date_label",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "TEST1"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-06-04"
                        }
                    },
                    {
                        "name": "end_date_label",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "TEST1"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-06-03"
                        }
                    },
                    {
                        "name": "start_date_usage_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Internal Only"
                        }
                    },
                    {
                        "name": "end_date_usage_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Internal Only"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-06-08 10:59:38"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TermDate object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TermDate"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termtemplates": {
            "get": {
                "tags": [
                    "Termtemplates"
                ],
                "summary": "Get all termtemplates",
                "description": "Search termtemplates",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **TermTemplate** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "132"
                                },
                                "term_name": {
                                    "type": "string",
                                    "example": "303"
                                },
                                "academic_year_pid": {
                                    "type": "integer",
                                    "example": "20"
                                },
                                "term_group_pid": {
                                    "type": "integer",
                                    "example": "20"
                                },
                                "term_season_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "is_half_term": {
                                    "type": "integer"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TermTemplate** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **TermTemplate** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_name, academic_year_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Termtemplate detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Termtemplate"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Termtemplates"
                ],
                "summary": "create Termtemplate item",
                "description": "create Termtemplate items",
                "requestBody": {
                    "description": "create Termtemplate detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_name",
                                    "academic_year_pid",
                                    "term_group_pid"
                                ],
                                "properties": {
                                    "term_name": {
                                        "type": "string",
                                        "example": "303"
                                    },
                                    "academic_year_pid": {
                                        "type": "integer",
                                        "example": "20"
                                    },
                                    "term_group_pid": {
                                        "type": "integer",
                                        "example": "20"
                                    },
                                    "term_season_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "is_half_term": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Termtemplate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Termtemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termtemplates/{id}": {
            "get": {
                "tags": [
                    "Termtemplates"
                ],
                "summary": "Get specical Termtemplate record",
                "description": "Get specical Termtemplate record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Termtemplate record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TermTemplate** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_name, academic_year_pid"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Termtemplate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Termtemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Termtemplates"
                ],
                "summary": "Update Termtemplate item",
                "description": "Update Termtemplate items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Termtemplate record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Termtemplate detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_name",
                                    "academic_year_pid",
                                    "term_group_pid"
                                ],
                                "properties": {
                                    "term_name": {
                                        "type": "string",
                                        "example": "303"
                                    },
                                    "academic_year_pid": {
                                        "type": "integer",
                                        "example": "20"
                                    },
                                    "term_group_pid": {
                                        "type": "integer",
                                        "example": "20"
                                    },
                                    "term_season_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "is_half_term": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Termtemplate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Termtemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Termtemplates"
                ],
                "summary": "Cancel Termtemplate item",
                "description": "Cancel Termtemplate items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Termtemplate record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termtemplates/search": {
            "get": {
                "tags": [
                    "Termtemplates"
                ],
                "summary": "Search all Termtemplates",
                "description": "Search Termtemplates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "term_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "academic_year_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_group_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_season_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_half_term",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Termtemplate object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Termtemplate"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termtemplatedates": {
            "get": {
                "tags": [
                    "Termtemplatedates"
                ],
                "summary": "Get all termtemplatedates",
                "description": "Search termtemplatedates",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **TermTemplateDate** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "term_template_id": {
                                    "type": "integer"
                                },
                                "activity_type_id": {
                                    "type": "integer"
                                },
                                "start_date_label": {
                                    "type": "string"
                                },
                                "start_date": {
                                    "type": "string"
                                },
                                "end_date_label": {
                                    "type": "string"
                                },
                                "end_date": {
                                    "type": "string"
                                },
                                "start_date_usage_type": {
                                    "type": "string"
                                },
                                "end_date_usage_type": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TermTemplateDate** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **TermTemplateDate** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_template_id, activity_type_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Termtemplatedate detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TermTemplateDate"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Termtemplatedates"
                ],
                "summary": "create Termtemplatedate item",
                "description": "create Termtemplatedate items",
                "requestBody": {
                    "description": "create Termtemplatedate detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_template_id",
                                    "activity_type_id"
                                ],
                                "properties": {
                                    "term_template_id": {
                                        "type": "integer"
                                    },
                                    "activity_type_id": {
                                        "type": "integer"
                                    },
                                    "start_date_label": {
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "type": "string"
                                    },
                                    "end_date_label": {
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "type": "string"
                                    },
                                    "start_date_usage_type": {
                                        "type": "string"
                                    },
                                    "end_date_usage_type": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Termtemplatedate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermTemplateDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termtemplatedates/{id}": {
            "get": {
                "tags": [
                    "Termtemplatedates"
                ],
                "summary": "Get specical Termtemplatedate record",
                "description": "Get specical Termtemplatedate record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Termtemplatedate record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TermTemplateDate** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, term_template_id, term_template_id"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Termtemplatedate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermTemplateDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Termtemplatedates"
                ],
                "summary": "Update Termtemplatedate item",
                "description": "Update Termtemplatedate items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Termtemplatedate record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Termtemplatedate detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "term_template_id",
                                    "activity_type_id"
                                ],
                                "properties": {
                                    "term_template_id": {
                                        "type": "integer"
                                    },
                                    "activity_type_id": {
                                        "type": "integer"
                                    },
                                    "start_date_label": {
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "type": "string"
                                    },
                                    "end_date_label": {
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "type": "string"
                                    },
                                    "start_date_usage_type": {
                                        "type": "string"
                                    },
                                    "end_date_usage_type": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Termtemplatedate object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermTemplateDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Termtemplatedates"
                ],
                "summary": "Cancel Termtemplatedate item",
                "description": "Cancel Termtemplatedate items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Termtemplatedate record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/termtemplatedates/search": {
            "get": {
                "tags": [
                    "Termtemplatedates"
                ],
                "summary": "Search all termtemplatedates",
                "description": "Search termtemplatedates",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "242"
                        }
                    },
                    {
                        "name": "term_template_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "132"
                        }
                    },
                    {
                        "name": "activity_type_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1000"
                        }
                    },
                    {
                        "name": "start_date_label",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-06-04"
                        }
                    },
                    {
                        "name": "end_date_label",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-06-04"
                        }
                    },
                    {
                        "name": "start_date_usage_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Internal Only"
                        }
                    },
                    {
                        "name": "end_date_usage_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Internal Only"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2018-06-08 06:03:06"
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Termtemplatedate object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TermTemplateDate"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/testdetails": {
            "get": {
                "tags": [
                    "Testdetails"
                ],
                "summary": "Get all Testdetails",
                "description": "Search Testdetails",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **TestDetail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "46"
                                },
                                "test_set_id": {
                                    "type": "integer",
                                    "example": "38"
                                },
                                "test_type_pid": {
                                    "type": "integer",
                                    "example": "10"
                                },
                                "default_test": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "created_by": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                },
                                "modified_by": {
                                    "type": "string"
                                },
                                "modified_at": {
                                    "type": "string",
                                    "example": "2018-06-08 06:03:06"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TestDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **TestDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -created_at"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, test_type_pid, default_test"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Testdetail detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/testDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Testdetails"
                ],
                "summary": "create Testdetail item",
                "description": "create Testdetail items",
                "requestBody": {
                    "description": "create Testdetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": "46"
                                    },
                                    "test_set_id": {
                                        "type": "integer",
                                        "example": "38"
                                    },
                                    "test_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "default_test": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Testdetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/testDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/testdetails/{id}": {
            "get": {
                "tags": [
                    "Testdetails"
                ],
                "summary": "Get specical Testdetail record",
                "description": "Get specical Testdetail record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Testdetail record (id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TestDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, test_type_pid, default_test"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Testdetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/testDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Testdetails"
                ],
                "summary": "Update Testdetail item",
                "description": "Update Testdetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Testdetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "update Testdetail detail item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "test_set_id",
                                    "test_type_pid"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": "46"
                                    },
                                    "test_set_id": {
                                        "type": "integer",
                                        "example": "38"
                                    },
                                    "test_type_pid": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "default_test": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string",
                                        "example": "2018-06-08 06:03:06"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Testdetail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/testDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Testdetails"
                ],
                "summary": "Cancel Testdetail item",
                "description": "Cancel Testdetail items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Testdetail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NULL"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/testdetails/search": {
            "get": {
                "tags": [
                    "Testdetails"
                ],
                "summary": "Search all Testdetails",
                "description": "Search Testdetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "46"
                        }
                    },
                    {
                        "name": "test_set_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "38"
                        }
                    },
                    {
                        "name": "test_type_pid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "default_test",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Testdetail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/testDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/testsets": {
            "get": {
                "tags": [
                    "TestSets V1"
                ],
                "summary": "Test set Index API (kss_test_set)",
                "description": "Get List of test set Records",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **testSet** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **testSet** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -description"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **testSet** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **testSet**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,description"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of testSet records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/testSet"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TestSets V1"
                ],
                "summary": "test set Create API (kss_entry_additional_requirement)",
                "description": "Create a specific Test Set",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "test set object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/testsets/{id}": {
            "get": {
                "tags": [
                    "TestSets V1"
                ],
                "summary": "Test set View API (kss_test_set)",
                "description": "Get A Specific Test set Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Test set record (kss_test_set.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **testSet** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **testSet**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, description"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test set object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/testSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TestSets V1"
                ],
                "summary": "Test Set Update API (kss_test_set)",
                "description": "Update a specific Test Set and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Test Set record (kss_test_set.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Additional Requirement object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TestSets V1"
                ],
                "summary": "Test Set  Delete API (kss_entry_additional_requirement)",
                "description": "Delete a specific Test set",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Test Set record (kss_test_set.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/testsets/search": {
            "get": {
                "tags": [
                    "TestSets V1"
                ],
                "summary": "test set search API (kss_test_set)",
                "description": "search test set",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "38"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "IELTS 5.5 (at least 4.5 in all skills)"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of test set object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/testSet"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/additionals": {
            "get": {
                "tags": [
                    "Additionals"
                ],
                "summary": "Get all additionals",
                "description": "Search Additionals records and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options for filtering the results. Below is a list of supported filters with example. Make it empty to retrieve all records.",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "entry_requirement_id": {
                                    "type": "integer"
                                },
                                "additional_requirement_type_pid": {
                                    "type": "integer"
                                },
                                "condition_text": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object\n * pickListItem: Pick list item setting",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Additional object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EntryAdditionalRequirement"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/institutions": {
            "get": {
                "tags": [
                    "Institution"
                ],
                "summary": "Get all Institution",
                "description": "Search Institution records and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options for filtering the results. Below is a list of supported filters with example. Make it empty to retrieve all records.",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "institution_code": {
                                    "type": "string"
                                },
                                "institution_name": {
                                    "type": "string"
                                },
                                "progressionRoutes.progression_route_status_pid": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit number of result list",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object\n * entryRequirements: Related Entry Requirements  (linked by study_contact_detail_id)",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "*"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Column name to sort",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minimum": 1
                        },
                        "example": "institution_name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/modules": {
            "get": {
                "tags": [
                    "Module V2"
                ],
                "summary": "Module Index API (kss_module)",
                "description": "Get List of Module Records",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Module** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Module** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -module_code"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Module** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Module**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,module_code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Module records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Term"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Module V2"
                ],
                "summary": "Module Create API (kss_module)",
                "description": "Create a specific Module and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_code": {
                                        "type": "string"
                                    },
                                    "module_name": {
                                        "type": "string"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "module_price": {
                                        "type": "number"
                                    },
                                    "currency_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/modules/{id}": {
            "get": {
                "tags": [
                    "Module V2"
                ],
                "summary": "Module View API (kss_module)",
                "description": "Get A Specific Module Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Module** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Module**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, module_code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Module V2"
                ],
                "summary": "Module Update API (kss_module)",
                "description": "Update a specific Module and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module_code": {
                                        "type": "string"
                                    },
                                    "module_name": {
                                        "type": "string"
                                    },
                                    "credits": {
                                        "type": "integer"
                                    },
                                    "module_price": {
                                        "type": "number"
                                    },
                                    "currency_code": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Module V2"
                ],
                "summary": "Module Delete API (kss_module)",
                "description": "Delete a specific Module",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Module record (kss_module.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/modules/search": {
            "get": {
                "tags": [
                    "Module V2"
                ],
                "summary": "Module search API (kss_module)",
                "description": "Search Module",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "module_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "FC002"
                        }
                    },
                    {
                        "name": "module_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Art and Design Structured Project - 1"
                        }
                    },
                    {
                        "name": "credits",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "12"
                        }
                    },
                    {
                        "name": "module_price",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "currency_code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "modified_at",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-08-09 15:56:21"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Institution object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/programs": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get all Program",
                "description": "Search Program records and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Options for filtering the results. Below is a list of supported filters with example. Make it empty to retrieve all records.",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "institution_id": {
                                    "type": "integer"
                                },
                                "progressionRoutes.progression_route_status_pid": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit number of result list",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object\n * institution: Related Institution information  (linked by institution_id),\n * institutionUnit: Related Institution Unit information  (linked by institution_unit_id)",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Program"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/program-intakes": {
            "get": {
                "tags": [
                    "ProgramIntake"
                ],
                "summary": "View List of Program Intakes Information",
                "description": "View List of Program Intakes and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields in Program Intakes and related table",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,program_id,intake_month_year"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related tables",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "List of conditions",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "properties": {
                                "id": {
                                    "description": "Class ProgramIntakeController",
                                    "type": "string",
                                    "example": "29201,29200,29199"
                                },
                                "program.program_name": {
                                    "description": "Class ProgramIntakeController",
                                    "type": "string",
                                    "example": "business"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Column name to sort",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minimum": 1
                        },
                        "example": "intake_month_year"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "description": "Class ProgramIntakeController",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgramIntake"
                                            }
                                        },
                                        "_links": {
                                            "description": "Class ProgramIntakeController",
                                            "properties": {
                                                "self": {
                                                    "description": "Class ProgramIntakeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class ProgramIntakeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "description": "Class ProgramIntakeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class ProgramIntakeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "description": "Class ProgramIntakeController",
                                                    "properties": {
                                                        "href": {
                                                            "description": "Class ProgramIntakeController",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "description": "Class ProgramIntakeController",
                                            "properties": {
                                                "totalCount": {
                                                    "description": "Class ProgramIntakeController",
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "description": "Class ProgramIntakeController",
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "description": "Class ProgramIntakeController",
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "description": "Class ProgramIntakeController",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/program-intakes/{id}": {
            "get": {
                "tags": [
                    "ProgramIntake"
                ],
                "summary": "View Specific Program Intake Information",
                "description": "View Specific Program Intake and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "program_intake_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 29201
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields in Progression Routes and related table",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,intake_month_year,program.program_name"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related tables",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProgramIntake object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramIntake"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v2/progression-routes": {
            "get": {
                "tags": [
                    "ProgressionRoute"
                ],
                "summary": "Progression Route Index API (kss_progression_route)",
                "description": "Get List of Progression Route Records",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields in Progression Routes and related table",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,institution_id,program.program_name"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related tables",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "List of conditions",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "182921,184328,184430"
                                },
                                "program.program_name": {
                                    "type": "string",
                                    "example": "business"
                                },
                                "award_id": {
                                    "type": "integer",
                                    "example": 1005
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProgressionRoute"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/progression-routes/{id}": {
            "get": {
                "tags": [
                    "ProgressionRoute"
                ],
                "summary": "Progression Route View API (kss_progression_route)",
                "description": "Get A Specific Progression Route Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "progression_route_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 182921
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of fields in Progression Routes and related table",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,institution_id,program.program_name"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related tables",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "List of conditions",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "182921,184328,184430"
                                },
                                "program.program_name": {
                                    "type": "string",
                                    "example": "business"
                                },
                                "award_id": {
                                    "type": "integer",
                                    "example": 1005
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Progression Route object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressionRoute"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/progression-routes/search": {
            "get": {
                "tags": [
                    "ProgressionRoute"
                ],
                "summary": "Progression Route Search API (kss_progression_route)",
                "description": "Search A Specific Progression Route Record By Condition",
                "parameters": [
                    {
                        "name": "getProgressionRoutes",
                        "in": "query",
                        "description": "Progression information condition to search for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "is_IYO",
                        "in": "query",
                        "description": "progression route in IYO",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Program object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "progression_route_id": {
                                                        "type": "integer"
                                                    },
                                                    "pathway_pid": {
                                                        "type": "integer"
                                                    },
                                                    "progression_institution_name": {
                                                        "type": "string"
                                                    },
                                                    "progression_institution_code": {
                                                        "type": "string"
                                                    },
                                                    "progression_intake_month_year": {
                                                        "type": "string"
                                                    },
                                                    "progression_program_name": {
                                                        "type": "string"
                                                    },
                                                    "institution_name": {
                                                        "type": "string"
                                                    },
                                                    "institution_code": {
                                                        "type": "string"
                                                    },
                                                    "program_name": {
                                                        "type": "string"
                                                    },
                                                    "progression_program_title_pid": {
                                                        "type": "integer"
                                                    },
                                                    "progression_program_id": {
                                                        "type": "integer"
                                                    },
                                                    "progression_program_name_first": {
                                                        "type": "integer"
                                                    },
                                                    "program_pathway": {
                                                        "type": "integer"
                                                    },
                                                    "intake_month_year": {
                                                        "type": "string"
                                                    },
                                                    "start_date": {
                                                        "type": "string"
                                                    },
                                                    "end_date": {
                                                        "type": "string"
                                                    },
                                                    "progression_route_status_pid": {
                                                        "type": "integer"
                                                    },
                                                    "progression_program_intake_id": {
                                                        "type": "integer"
                                                    },
                                                    "progression_institution_unit_id": {
                                                        "type": "integer"
                                                    },
                                                    "award_code": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/qualifications": {
            "get": {
                "tags": [
                    "Qualification"
                ],
                "summary": "Get all qualifications",
                "description": "Search Qualification records and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options for filtering the results. Below is a list of supported filters with example. Make it empty to retrieve all records.",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "qualification_id": {
                                    "type": "integer"
                                },
                                "country_code": {
                                    "type": "string"
                                },
                                "qualification_name": {
                                    "type": "string"
                                },
                                "grade_score": {
                                    "type": "string"
                                },
                                "condition_text": {
                                    "type": "string"
                                },
                                "default_qualification_for_country": {
                                    "type": "integer"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object\n * pickListItem: Pick list item setting",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Qualification object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Qualification"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/qualifications/{id}": {
            "get": {
                "tags": [
                    "Qualification"
                ],
                "summary": "Get specical qualification",
                "description": "Search Qualification records and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification record (qualification.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object\n * qualificationDetails: Qualification Detail list item setting",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Study Plan Version object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/testDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/test-sets": {
            "get": {
                "tags": [
                    "TestSets V2"
                ],
                "summary": "Get all test sets",
                "description": "Search tet set records and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options for filtering the results. Below is a list of supported filters with example. Make it empty to retrieve all records.",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "created_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                },
                                "modified_by": {
                                    "type": "string",
                                    "example": "kss.admin@yopmail.com"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object\n * testDetails: Pick list item setting",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Qualification object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/testSet"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/test-sets/{id}": {
            "get": {
                "tags": [
                    "TestSets V2"
                ],
                "summary": "Get specical test set",
                "description": "Get test set record and related information based on conditions, fields",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of StudyPlanVersion record (testset.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List extra Fields - related models will be returned together with main object\n * testDetails: Test set detail list item setting",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Study Plan Version object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/testSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Activitytype": {
                "required": [
                    "id",
                    "description",
                    "level"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "order_number": {
                        "type": "integer"
                    },
                    "start_date_required": {
                        "type": "integer"
                    },
                    "end_date_required": {
                        "type": "integer"
                    },
                    "multiple_records_supported": {
                        "type": "integer"
                    },
                    "level": {
                        "type": "string"
                    },
                    "is_mandatory": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Award": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "award_code": {
                        "type": "string"
                    },
                    "award_name": {
                        "type": "string"
                    },
                    "credits": {
                        "type": "integer"
                    },
                    "award_type_pid": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BankAccountDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "account_name": {
                        "type": "string"
                    },
                    "account_number": {
                        "type": "string"
                    },
                    "bank_name": {
                        "type": "string"
                    },
                    "bank_sort_code": {
                        "type": "string"
                    },
                    "account_swift_code": {
                        "type": "string"
                    },
                    "account_iban_number": {
                        "type": "string"
                    },
                    "aba_code": {
                        "type": "string"
                    },
                    "bank_address_id": {
                        "type": "integer"
                    },
                    "beneficiary_address_id": {
                        "type": "integer"
                    },
                    "payment_nationality_code": {
                        "type": "string"
                    },
                    "payment_country_code": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "bankAddress": {
                        "$ref": "#/components/schemas/ContactDetail"
                    },
                    "beneficiaryAddress": {
                        "$ref": "#/components/schemas/ContactDetail"
                    },
                    "institution": {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "institution_type": {
                                "type": "string"
                            },
                            "institution_code": {
                                "type": "string"
                            },
                            "institution_name": {
                                "type": "string"
                            },
                            "institution_short_name": {
                                "type": "string"
                            },
                            "country_code": {
                                "type": "string"
                            },
                            "study_contact_detail_id": {
                                "type": "integer"
                            },
                            "registered_contact_detail_id": {
                                "type": "integer"
                            },
                            "registered_company_name": {
                                "type": "string"
                            },
                            "registered_company_number": {
                                "type": "string"
                            },
                            "licence_key": {
                                "type": "string"
                            },
                            "acl_code": {
                                "type": "string"
                            },
                            "accommodation_options": {
                                "type": "string"
                            },
                            "program_name_first": {
                                "type": "integer"
                            },
                            "brp_collection_address_id": {
                                "type": "integer"
                            },
                            "expected_living_cost": {
                                "type": "string"
                            },
                            "currency_code": {
                                "type": "string"
                            },
                            "signatory_title": {
                                "type": "string"
                            },
                            "signatory_salutation": {
                                "type": "string"
                            },
                            "signatory_forename": {
                                "type": "string"
                            },
                            "signatory_surname": {
                                "type": "string"
                            },
                            "signatory_logo_image": {
                                "type": "string"
                            },
                            "privacy_statement_url": {
                                "type": "string"
                            },
                            "terms_conditions_url": {
                                "type": "string"
                            },
                            "accommodation_url": {
                                "type": "string"
                            },
                            "student_life_url": {
                                "type": "string"
                            },
                            "payment_url": {
                                "type": "string"
                            },
                            "pre_arrival_url": {
                                "type": "string"
                            },
                            "offer_letter_banner_image": {
                                "type": "string"
                            },
                            "program_delivery_pid": {
                                "type": "integer"
                            },
                            "promotion_text": {
                                "type": "string"
                            },
                            "branding_image": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "created_by": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "modified_by": {
                                "type": "string"
                            },
                            "modified_at": {
                                "type": "string"
                            },
                            "institution_url": {
                                "type": "string"
                            },
                            "fees_url": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BespokeTermMetadata": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "term_id": {
                        "type": "integer"
                    },
                    "term_type_pid": {
                        "type": "integer"
                    },
                    "term_authorised_document": {
                        "type": "string"
                    },
                    "termType": {
                        "$ref": "#/components/schemas/PickListItem"
                    }
                },
                "type": "object"
            },
            "CareerOption": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "subject_area_id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChangeManagementDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "change_management_header_id": {
                        "type": "integer"
                    },
                    "table_name": {
                        "type": "string"
                    },
                    "table_id": {
                        "type": "integer"
                    },
                    "table_label_name": {
                        "type": "string"
                    },
                    "field_name": {
                        "type": "string"
                    },
                    "field_label_name": {
                        "type": "string"
                    },
                    "old_value": {
                        "type": "string"
                    },
                    "new_value": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChangeManagementHeader": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "entity_name": {
                        "type": "string"
                    },
                    "entity_id": {
                        "type": "integer"
                    },
                    "change_management_status_pid": {
                        "type": "integer"
                    },
                    "rejection_reason": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "screen_header": {
                        "type": "boolean"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "change_management_details": {
                        "$ref": "#/components/schemas/ChangeManagementDetail"
                    }
                },
                "type": "object"
            },
            "ContactDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "address_line1": {
                        "type": "string"
                    },
                    "address_line2": {
                        "type": "string"
                    },
                    "address_line3": {
                        "type": "string"
                    },
                    "town_city": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "region_pid": {
                        "type": "integer"
                    },
                    "admissions_phone": {
                        "type": "string"
                    },
                    "admissions_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CourseDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "jsondetails": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "aduit": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "JsonDataCourseDetail": {
                "properties": {
                    "institution_id": {
                        "type": "integer"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "key_facts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeyFacts"
                        }
                    },
                    "award_name": {
                        "type": "string"
                    },
                    "study_route": {
                        "$ref": "#/components/schemas/StudyRoute"
                    },
                    "key_facts_template": {
                        "type": "string"
                    },
                    "program_type_id": {
                        "type": "string"
                    },
                    "academic_entry_requirements": {
                        "$ref": "#/components/schemas/AcademicEntryRequirements"
                    }
                },
                "type": "object"
            },
            "EnglishEntryLevelFacts": {
                "properties": {
                    "course_length": {
                        "type": "string"
                    },
                    "additional_term_detail": {
                        "type": "string"
                    },
                    "tuition_fee": {
                        "type": "string"
                    },
                    "tuition_fee_currency": {
                        "type": "string"
                    },
                    "start_and_end_month": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "degree_entry": {
                        "type": "string"
                    },
                    "application_deadline": {
                        "type": "string"
                    },
                    "GPA_entry": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EnglishEntryRequirements": {
                "properties": {
                    "english_entry_level": {
                        "type": "string"
                    },
                    "english_entry_level_facts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnglishEntryLevelFacts"
                        }
                    }
                },
                "type": "object"
            },
            "KeyFacts": {
                "properties": {
                    "academic_year": {
                        "type": "string"
                    },
                    "english_entry_requirements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnglishEntryRequirements"
                        }
                    }
                },
                "type": "object"
            },
            "StudyRoute": {
                "properties": {
                    "institution_id": {
                        "type": "string"
                    },
                    "award_id": {
                        "type": "string"
                    },
                    "degree_access": {
                        "type": "string"
                    },
                    "progression_to_year": {
                        "type": "string"
                    },
                    "progression_to_semester": {
                        "type": "string"
                    },
                    "Degree_Duration": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CountrySpecific": {
                "properties": {
                    "country_name": {
                        "type": "string"
                    },
                    "country_flag": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "country_specific_requirement": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AcademicEntryRequirements": {
                "properties": {
                    "entry_description": {
                        "type": "string"
                    },
                    "country_specific": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountrySpecific"
                        }
                    }
                },
                "type": "object"
            },
            "DegreeAccess": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "degree_id": {
                        "type": "integer"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "jsondetails": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DegreeAccessItem": {
                "properties": {
                    "degree_id": {
                        "type": "integer"
                    },
                    "degree_access": {
                        "type": "string"
                    },
                    "progression_to_year": {
                        "type": "integer"
                    },
                    "progression_to_semester": {
                        "type": "string"
                    },
                    "degree_duration": {
                        "type": "string"
                    },
                    "duration_num": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DegreeAccessResponse": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DegreeAccessItem"
                        }
                    },
                    "message": {
                        "type": "string",
                        "example": ""
                    },
                    "code": {
                        "type": "integer",
                        "example": "200"
                    },
                    "status": {
                        "type": "integer",
                        "example": "200"
                    },
                    "type": {
                        "type": "string",
                        "example": "success"
                    }
                },
                "type": "object"
            },
            "JsonDataDegreeDetail": {
                "properties": {
                    "degree_id": {
                        "type": "integer"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "key_facts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeyFacts"
                        }
                    },
                    "award_name": {
                        "type": "string"
                    },
                    "progression_intake_id": {
                        "type": "string"
                    },
                    "key_facts_template": {
                        "type": "string"
                    },
                    "awardInstitutionID": {
                        "type": "string"
                    },
                    "academic_entry_requirements": {
                        "$ref": "#/components/schemas/AcademicEntryRequirements"
                    }
                },
                "type": "object"
            },
            "DepositDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "deposit_set_id": {
                        "type": "integer"
                    },
                    "deposit_amount": {
                        "type": "number"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DepositSet": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "depositDetails": {
                        "$ref": "#/components/schemas/DepositDetail"
                    }
                },
                "type": "object"
            },
            "DocumentDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "document_set_id": {
                        "type": "integer"
                    },
                    "document_pid": {
                        "type": "integer"
                    },
                    "document_status_pid": {
                        "type": "integer"
                    },
                    "is_required": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DocumentSet": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "document_detail": {
                        "$ref": "#/components/schemas/DocumentDetail"
                    }
                },
                "type": "object"
            },
            "EntryType": {
                "properties": {
                    "entry_type_code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExemptionCriteria": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FieldNameMapping": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "field_name": {
                        "type": "string"
                    },
                    "table_name": {
                        "type": "string"
                    },
                    "field_label_name": {
                        "type": "string"
                    },
                    "table_label_name": {
                        "type": "string"
                    },
                    "section_label_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GradeScale": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "grade_scale_type": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "grade_scale_detail": {
                        "$ref": "#/components/schemas/DocumentDetail"
                    }
                },
                "type": "object"
            },
            "GradeScaleDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lower_limit": {
                        "type": "string"
                    },
                    "upper_limit": {
                        "type": "string"
                    },
                    "credits_earned": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ImmigrationDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "number_cas_required": {
                        "type": "integer"
                    },
                    "immigration_notes": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstitutionUnit": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "institution_unit_name": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "institutionUnitDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstitutionUnitDetails"
                        }
                    },
                    "programs": {
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstitutionUnitDetails": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_unit_id": {
                        "type": "integer"
                    },
                    "institution_unit_type_pid": {
                        "type": "integer"
                    },
                    "unit_name": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Licence": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "licence_key": {
                        "type": "string"
                    },
                    "licence_name": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "licence_contact_detail_id": {
                        "type": "integer"
                    },
                    "licenceContactDetail": {
                        "$ref": "#/components/schemas/ContactDetail"
                    }
                },
                "type": "object"
            },
            "Module": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "module_code": {
                        "type": "string"
                    },
                    "module_name": {
                        "type": "string"
                    },
                    "credits": {
                        "type": "integer"
                    },
                    "module_price": {
                        "type": "number"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramIntakes": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "intake_month_year": {
                        "type": "string"
                    },
                    "program_status_pid": {
                        "type": "integer"
                    },
                    "program_fee": {
                        "type": "string"
                    },
                    "programDates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramDate"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramSubjectAreas": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "subject_area_id": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ImmigrationDetails": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "number_cas_required": {
                        "type": "integer"
                    },
                    "immigration_notes": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramAudit": {
                "properties": {
                    "program_audit_id": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "institution_unit_id": {
                        "type": "integer"
                    },
                    "program_code": {
                        "type": "string"
                    },
                    "program_title_pid": {
                        "type": "integer"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "entry_type_code": {
                        "type": "string"
                    },
                    "entry_level_pid": {
                        "type": "integer"
                    },
                    "program_level_pid": {
                        "type": "integer"
                    },
                    "program_type_pid": {
                        "type": "integer"
                    },
                    "duration_pid": {
                        "type": "integer"
                    },
                    "mpp_option_available": {
                        "type": "integer"
                    },
                    "study_contact_detail_id": {
                        "type": "integer"
                    },
                    "program_url": {
                        "type": "string"
                    },
                    "ucas_code": {
                        "type": "string"
                    },
                    "jacs_code": {
                        "type": "string"
                    },
                    "atas_certificate_required": {
                        "type": "integer"
                    },
                    "security_clearance_required": {
                        "type": "integer"
                    },
                    "minimum_age_limit": {
                        "type": "number"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "is_full_time": {
                        "type": "integer"
                    },
                    "hours_per_week": {
                        "type": "integer"
                    },
                    "document_set_id": {
                        "type": "integer"
                    },
                    "program_status_pid": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "panel_pid": {
                        "type": "integer"
                    },
                    "subject_code": {
                        "type": "string"
                    },
                    "conditional_admittance_pid": {
                        "type": "integer"
                    },
                    "direct_entry_point": {
                        "type": "integer"
                    },
                    "promotion_text": {
                        "type": "string"
                    },
                    "internal_use_only": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramDate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_intake_id": {
                        "type": "integer"
                    },
                    "activity_type_id": {
                        "type": "integer"
                    },
                    "start_date_label": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "end_date_label": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string"
                    },
                    "start_date_usage_type": {
                        "type": "string"
                    },
                    "end_date_usage_type": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramIntakeAudit": {
                "properties": {
                    "program_intake_audit_id": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "intake_month_year": {
                        "type": "string"
                    },
                    "season_pid": {
                        "type": "integer"
                    },
                    "application_deadline_date": {
                        "type": "string"
                    },
                    "program_fee": {
                        "type": "number"
                    },
                    "deposit_as_program_fee": {
                        "type": "integer"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "fees_confirmed": {
                        "type": "integer"
                    },
                    "program_dates_confirmed": {
                        "type": "integer"
                    },
                    "fees_collected_by_pid": {
                        "type": "integer"
                    },
                    "program_status_pid": {
                        "type": "integer"
                    },
                    "licence_key": {
                        "type": "string"
                    },
                    "acl_code": {
                        "type": "string"
                    },
                    "brp_collection_address_id": {
                        "type": "integer"
                    },
                    "deposit_set_id": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramIntakeTerm": {
                "properties": {
                    "program_intake_id": {
                        "type": "integer"
                    },
                    "term_id": {
                        "type": "integer"
                    },
                    "term_amount": {
                        "type": "number"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "term_type_pid": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramModule": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "module_id": {
                        "type": "integer"
                    },
                    "pathway_pid": {
                        "type": "integer"
                    },
                    "module_type_pid": {
                        "type": "integer"
                    },
                    "credits": {
                        "type": "integer"
                    },
                    "term_order": {
                        "type": "string"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "module_calculation_type_pid": {
                        "type": "integer"
                    },
                    "module_calculation_stage": {
                        "type": "integer"
                    },
                    "module_weighting": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "program": {
                        "$ref": "#/components/schemas/Program"
                    },
                    "gradeScale": {
                        "$ref": "#/components/schemas/GradeScale"
                    },
                    "programModuleAssessments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramModuleAssessment"
                        }
                    },
                    "module": {
                        "$ref": "#/components/schemas/Module"
                    },
                    "moduleType": {
                        "$ref": "#/components/schemas/PickListItem"
                    },
                    "moduleCalculationType": {
                        "$ref": "#/components/schemas/PickListItem"
                    },
                    "pathway": {
                        "$ref": "#/components/schemas/PickListItem"
                    }
                },
                "type": "object"
            },
            "ProgramModuleAssessment": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_module_id": {
                        "type": "integer"
                    },
                    "assessment_pid": {
                        "type": "integer"
                    },
                    "weighting": {
                        "type": "number"
                    },
                    "grade_scale_id": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramSubjectArea": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "subject_area_id": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgressionRouteModule": {
                "properties": {
                    "progression_route_id": {
                        "type": "integer"
                    },
                    "module_id": {
                        "type": "integer"
                    },
                    "module_score": {
                        "type": "integer"
                    },
                    "order_number": {
                        "type": "integer"
                    },
                    "module_type_pid": {
                        "type": "integer"
                    },
                    "core_choice": {
                        "type": "integer"
                    },
                    "include_on_offer_letter": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Publicholiday": {
                "required": [
                    "country_code",
                    "date"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "region_pid": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string"
                    },
                    "is_confirmed": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Subject": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubjectArea": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TermDate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "term_id": {
                        "type": "integer"
                    },
                    "activity_type_id": {
                        "type": "integer"
                    },
                    "start_date_label": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "end_date_label": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string"
                    },
                    "start_date_usage_type": {
                        "type": "string"
                    },
                    "end_date_usage_type": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "activityType": {
                        "$ref": "#/components/schemas/Activitytype"
                    }
                },
                "type": "object"
            },
            "Termtemplate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "term_name": {
                        "type": "string"
                    },
                    "academic_year_pid": {
                        "type": "integer"
                    },
                    "term_group_pid": {
                        "type": "integer"
                    },
                    "term_season_pid": {
                        "type": "integer"
                    },
                    "is_half_term": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "terms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Term"
                        }
                    },
                    "termTemplateDates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TermTemplateDates"
                        }
                    }
                },
                "type": "object"
            },
            "TermTemplateDates": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "term_template_id": {
                        "type": "integer"
                    },
                    "activity_type_id": {
                        "type": "integer"
                    },
                    "start_date_label": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "end_date_label": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string"
                    },
                    "start_date_usage_type": {
                        "type": "string"
                    },
                    "end_date_usage_type": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TermTemplateDate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "term_template_id": {
                        "type": "integer"
                    },
                    "activity_type_id": {
                        "type": "integer"
                    },
                    "start_date_label": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "end_date_label": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string"
                    },
                    "start_date_usage_type": {
                        "type": "string"
                    },
                    "end_date_usage_type": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EntryAdditionalRequirement": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "entry_requirement_id": {
                        "type": "integer"
                    },
                    "additional_requirement_type_pid": {
                        "type": "integer"
                    },
                    "condition_text": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "pickListItem": {
                        "$ref": "#/components/schemas/PickListItem"
                    }
                },
                "type": "object"
            },
            "entryRequirement": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "qualification_id": {
                        "type": "integer"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "qualification_name": {
                        "type": "string"
                    },
                    "grade_score": {
                        "type": "string"
                    },
                    "condition_text": {
                        "type": "string"
                    },
                    "default_qualification_for_country": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "entryAdditionalRequirements": {
                        "$ref": "#/components/schemas/EntryAdditionalRequirement"
                    }
                },
                "type": "object"
            },
            "Institution": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_type": {
                        "type": "string"
                    },
                    "institution_code": {
                        "type": "string"
                    },
                    "institution_name": {
                        "type": "string"
                    },
                    "institution_short_name": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "study_contact_detail_id": {
                        "type": "integer"
                    },
                    "registered_contact_detail_id": {
                        "type": "integer"
                    },
                    "registered_company_name": {
                        "type": "string"
                    },
                    "registered_company_number": {
                        "type": "string"
                    },
                    "licence_key": {
                        "type": "string"
                    },
                    "acl_code": {
                        "type": "string"
                    },
                    "accommodation_options": {
                        "type": "string"
                    },
                    "program_name_first": {
                        "type": "integer"
                    },
                    "brp_collection_address_id": {
                        "type": "integer"
                    },
                    "expected_living_cost": {
                        "type": "string"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "signatory_title": {
                        "type": "string"
                    },
                    "signatory_salutation": {
                        "type": "string"
                    },
                    "signatory_forename": {
                        "type": "string"
                    },
                    "signatory_surname": {
                        "type": "string"
                    },
                    "signatory_logo_image": {
                        "$ref": "#/components/schemas/SignatoryLogoImage"
                    },
                    "privacy_statement_url": {
                        "type": "string"
                    },
                    "terms_conditions_url": {
                        "type": "string"
                    },
                    "accommodation_url": {
                        "type": "string"
                    },
                    "student_life_url": {
                        "type": "string"
                    },
                    "payment_url": {
                        "type": "string"
                    },
                    "pre_arrival_url": {
                        "type": "string"
                    },
                    "offer_letter_banner_image": {
                        "$ref": "#/components/schemas/OfferLetterBannerImage"
                    },
                    "program_delivery_pid": {
                        "type": "integer"
                    },
                    "promotion_text": {
                        "type": "string"
                    },
                    "branding_image": {
                        "$ref": "#/components/schemas/BrandingImage"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "institution_url": {
                        "type": "string"
                    },
                    "fees_url": {
                        "type": "string"
                    },
                    "bankAccountDetail": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccountDetail"
                        }
                    },
                    "licence": {
                        "$ref": "#/components/schemas/Licence"
                    },
                    "sponsor_address": {
                        "$ref": "#/components/schemas/SponsorAddress"
                    },
                    "studyContactDetail": {
                        "$ref": "#/components/schemas/StudyContactDetail"
                    },
                    "registeredContactDetail": {
                        "$ref": "#/components/schemas/RegisteredContactDetail"
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Program"
                        }
                    }
                },
                "type": "object"
            },
            "SignatoryLogoImage": {
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "nameandtag": {
                        "type": "string"
                    },
                    "upload_by": {
                        "type": "string"
                    },
                    "upload_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OfferLetterBannerImage": {
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "nameandtag": {
                        "type": "string"
                    },
                    "upload_by": {
                        "type": "string"
                    },
                    "upload_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BrandingImage": {
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "nameandtag": {
                        "type": "string"
                    },
                    "upload_by": {
                        "type": "string"
                    },
                    "upload_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SponsorAddress": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "address_line1": {
                        "type": "string"
                    },
                    "address_line2": {
                        "type": "string"
                    },
                    "address_line3": {
                        "type": "string"
                    },
                    "town_city": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "region_pid": {
                        "type": "integer"
                    },
                    "admissions_phone": {
                        "type": "string"
                    },
                    "admissions_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StudyContactDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "address_line1": {
                        "type": "string"
                    },
                    "address_line2": {
                        "type": "string"
                    },
                    "address_line3": {
                        "type": "string"
                    },
                    "town_city": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "region_pid": {
                        "type": "integer"
                    },
                    "admissions_phone": {
                        "type": "string"
                    },
                    "admissions_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegisteredContactDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "address_line1": {
                        "type": "string"
                    },
                    "address_line2": {
                        "type": "string"
                    },
                    "address_line3": {
                        "type": "string"
                    },
                    "town_city": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "region_pid": {
                        "type": "integer"
                    },
                    "admissions_phone": {
                        "type": "string"
                    },
                    "admissions_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PickListItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "pick_list_type": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Program": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "institution_unit_id": {
                        "type": "integer"
                    },
                    "program_code": {
                        "type": "string"
                    },
                    "program_title_pid": {
                        "type": "integer"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "entry_type_code": {
                        "type": "string"
                    },
                    "entry_level_pid": {
                        "type": "integer"
                    },
                    "program_level_pid": {
                        "type": "integer"
                    },
                    "program_type_pid": {
                        "type": "integer"
                    },
                    "duration_pid": {
                        "type": "integer"
                    },
                    "duration_length": {
                        "type": "string"
                    },
                    "duration_unit_pid": {
                        "type": "integer"
                    },
                    "mpp_option_available": {
                        "type": "integer"
                    },
                    "study_contact_detail_id": {
                        "type": "integer"
                    },
                    "program_url": {
                        "type": "string"
                    },
                    "ucas_code": {
                        "type": "string"
                    },
                    "jacs_code": {
                        "type": "string"
                    },
                    "atas_certificate_required": {
                        "type": "integer"
                    },
                    "security_clearance_required": {
                        "type": "integer"
                    },
                    "minimum_age_limit": {
                        "type": "integer"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "is_full_time": {
                        "type": "integer"
                    },
                    "hours_per_week": {
                        "type": "integer"
                    },
                    "document_set_id": {
                        "type": "integer"
                    },
                    "program_status_pid": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "panel_pid": {
                        "type": "integer"
                    },
                    "subject_code": {
                        "type": "string"
                    },
                    "conditional_admittance_pid": {
                        "type": "integer"
                    },
                    "direct_entry_point": {
                        "type": "integer"
                    },
                    "promotion_text": {
                        "type": "string"
                    },
                    "internal_use_only": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "additional_info_external": {
                        "type": "string"
                    },
                    "additional_info_internal": {
                        "type": "string"
                    },
                    "program_intakes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramIntakes"
                        }
                    },
                    "programSubjectAreas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramSubjectAreas"
                        }
                    },
                    "immigrationDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImmigrationDetails"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramIntake": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "intake_month_year": {
                        "type": "string"
                    },
                    "application_deadline_date": {
                        "type": "string"
                    },
                    "program_fee": {
                        "type": "string"
                    },
                    "deposit_as_program_fee": {
                        "type": "integer"
                    },
                    "currency_code": {
                        "type": "string"
                    },
                    "fees_confirmed": {
                        "type": "integer"
                    },
                    "program_dates_confirmed": {
                        "type": "integer"
                    },
                    "fees_collected_by_pid": {
                        "type": "integer"
                    },
                    "program_status_pid": {
                        "type": "integer"
                    },
                    "licence_key": {
                        "type": "string"
                    },
                    "acl_code": {
                        "type": "string"
                    },
                    "brp_collection_address_id": {
                        "type": "integer"
                    },
                    "deposit_set_id": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "quota_exists": {
                        "type": "integer"
                    },
                    "programIntakeTerms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramIntakeTerm"
                        }
                    },
                    "programDates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramDate"
                        }
                    },
                    "entryRequirements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/entryRequirement"
                        }
                    },
                    "terms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Term"
                        }
                    }
                },
                "type": "object"
            },
            "ProgressionAdditionalRequirement": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "progression_route_id": {
                        "type": "integer"
                    },
                    "additional_requirement_type_pid": {
                        "type": "integer"
                    },
                    "condition_text": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "additional_requirement_level_pid": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ProgressionRoute": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "program_intake_id": {
                        "type": "integer"
                    },
                    "pathway_pid": {
                        "type": "integer"
                    },
                    "academic_score": {
                        "type": "number"
                    },
                    "english_exit_score": {
                        "type": "number"
                    },
                    "english_reading_score": {
                        "type": "number"
                    },
                    "english_writing_score": {
                        "type": "number"
                    },
                    "english_listening_score": {
                        "type": "number"
                    },
                    "english_speaking_score": {
                        "type": "number"
                    },
                    "progression_to_year": {
                        "type": "integer"
                    },
                    "progression_to_semester": {
                        "type": "integer"
                    },
                    "progression_institution_id": {
                        "type": "integer"
                    },
                    "progression_institution_unit_id": {
                        "type": "integer"
                    },
                    "progression_program_id": {
                        "type": "integer"
                    },
                    "progression_program_intake_id": {
                        "type": "integer"
                    },
                    "module_operator_logic": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "progression_route_status_pid": {
                        "type": "integer"
                    },
                    "progressionInstitutionUnit": {
                        "$ref": "#/components/schemas/InstitutionUnit"
                    },
                    "progressionRouteModules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressionRouteModule"
                        }
                    },
                    "progressionProgram": {
                        "$ref": "#/components/schemas/Program"
                    },
                    "progressionProgramIntake": {
                        "$ref": "#/components/schemas/ProgramIntake"
                    }
                },
                "type": "object"
            },
            "Qualification": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "default_qualification_for_country": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "entryRequirement": {
                        "$ref": "#/components/schemas/entryRequirement"
                    },
                    "qualificationDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/qualificationDetail"
                        }
                    }
                },
                "type": "object"
            },
            "qualificationDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "qualification_id": {
                        "type": "integer"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "qualification_name": {
                        "type": "string"
                    },
                    "grade_score": {
                        "type": "string"
                    },
                    "condition_text": {
                        "type": "string"
                    },
                    "default_qualification_for_country": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    }
                },
                "type": "object"
            },
            "Term": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "term_name": {
                        "type": "string"
                    },
                    "academic_year_pid": {
                        "type": "integer"
                    },
                    "term_template_id": {
                        "type": "integer"
                    },
                    "term_group_pid": {
                        "type": "integer"
                    },
                    "term_season_pid": {
                        "type": "integer"
                    },
                    "is_half_term": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "approval_required": {
                        "type": "integer"
                    },
                    "approved_by": {
                        "type": "string"
                    },
                    "approved_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "is_bespoke": {
                        "type": "integer"
                    },
                    "institution": {
                        "nullable": true
                    },
                    "termDate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TermDate"
                        }
                    },
                    "termTemplate": {
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "testDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "test_set_id": {
                        "type": "integer"
                    },
                    "test_type_pid": {
                        "type": "integer"
                    },
                    "default_test": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "testScores": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/testScore"
                        }
                    },
                    "pickListItem": {
                        "$ref": "#/components/schemas/PickListItem"
                    }
                },
                "type": "object"
            },
            "testScore": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "test_detail_id": {
                        "type": "integer"
                    },
                    "test_category_pid": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    }
                },
                "type": "object"
            },
            "testSet": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "entryRequirement": {
                        "$ref": "#/components/schemas/entryRequirement"
                    },
                    "testDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/testScore"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "description": "logged user token, You can got that one from KSS3 application",
                "name": "iPlanetDirectoryPro",
                "in": "header"
            }
        }
    },
    "externalDocs": {
        "description": "Yii2 Rest document for more information about 'fields, _withs' parameter below",
        "url": "https://www.yiiframework.com/doc/guide/2.0/en/rest-resources"
    }
}