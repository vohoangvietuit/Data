{
    "openapi": "3.0.0",
    "info": {
        "title": "Admission Microservice",
        "description": "Admission Microservice APIs",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "dev server"
        },
        {
            "url": "https://admission-apple-pub.kss-dev.kapintdc.com",
            "description": "Apple"
        },
        {
            "url": "https://admission-banana-pub.kss-dev.kapintdc.com",
            "description": "Banana server"
        },
        {
            "url": "https://admission-carrot-pub.kss-dev.kapintdc.com",
            "description": "Carrot server"
        },
        {
            "url": "https://admission.kss-uat.kapintdc.com",
            "description": "UAT"
        },
        {
            "url": "https://admission-banana-pub.kss-dev.kapintdc.com",
            "description": "Banana server (base)"
        },
        {
            "url": "https://admission.kss-uat.kapintdc.com",
            "description": "UAT server (base)"
        }
    ],
    "paths": {
        "/api/v1/applications/check-delete/{applicationId}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Check if application can be deleted",
                "description": "Custom search action to check if an application can be deleted. It will check existing related records e.g Application Partners",
                "operationId": "api\\modules\\v1\\actions\\application\\CheckDeleteAction::run",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/api/v1/applications": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Create Application",
                "description": "Create an application",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/api/v1/applications/{applicationId}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get Application",
                "description": "Retrieve an application using id",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Update Application",
                "description": "Update an application base on id",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Application object"
                    }
                }
            }
        },
        "/api/v1/documents/download": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Download S3 Document by link or name",
                "description": "Download S3 Document",
                "parameters": [
                    {
                        "name": "link",
                        "in": "query",
                        "description": "link of Document",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "bookinginsurance/117887/M8EKc7Kj-1koIzIjcQyZ0cJfY.jpg"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of Document",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "test.jpg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A document file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/presigned-url?link={link}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get pre-signed url from S3",
                "parameters": [
                    {
                        "name": "link",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/download-document?link={link}&name={name}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Download S3 Document by link or name",
                "description": "Download S3 Document",
                "parameters": [
                    {
                        "name": "link",
                        "in": "query",
                        "description": "link of Document",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of Document",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A document file"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/upload-document": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Upload Document to s3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "referenceId": {
                                        "type": "integer"
                                    },
                                    "referenceType": {
                                        "type": "string",
                                        "example": "Name"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "example": "Name"
                                    },
                                    "payload": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "filename"
                                        },
                                        "filename": {
                                            "type": "string",
                                            "example": "fileUrl"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/zip?document[link][]={link}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "description": "Download zip of Document by link or name",
                "parameters": [
                    {
                        "name": "link",
                        "in": "path",
                        "description": "link",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found offer"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/photo/upload-avatar": {
            "post": {
                "tags": [
                    "Photo"
                ],
                "summary": "Upload Avatar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "referenceId": {
                                        "type": "string",
                                        "example": "b2c692f5-75ed-4cf5-8e8e-a55e76c46814"
                                    },
                                    "referenceType": {
                                        "type": "string",
                                        "example": "StudentAvatar"
                                    },
                                    "payload": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "medium": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "origin": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "small": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/activity-details": {
            "get": {
                "tags": [
                    "ActivityDetail"
                ],
                "summary": "Activity Detail Index API (kss_activity_detail)",
                "description": "Get List of Activity Detail Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Activity Detail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Activity Detail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Activity Detail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Activity Detail**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Activity Detail records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ActivityDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ActivityDetail"
                ],
                "summary": "Activity Detail Create API (kss_activity_detail)",
                "description": "Create a specific Activity Detail and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "activity_type_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activity Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "activity_type_id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/activity-details/{id}": {
            "get": {
                "tags": [
                    "ActivityDetail"
                ],
                "summary": "Activity Detail View API (kss_activity_detail)",
                "description": "Get A Specific Activity Detail Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Activity Detail record (kss_activity_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ActivityDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ActivityDetail**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ActivityDetail"
                ],
                "summary": "Activity Detail Update API (kss_activity_detail)",
                "description": "Update a specific Activity Detail and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Activity Detail record (kss_activity_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "activity_type_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activity Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "activity_type_id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ActivityDetail"
                ],
                "summary": "Activity Detail Delete API (kss_activity_detail)",
                "description": "Delete a specific Activity Detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_activity_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/activity-types": {
            "get": {
                "tags": [
                    "ActivityType"
                ],
                "summary": "Activity Type Index API (kss_activity_type)",
                "description": "Get List of Activity Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ActivityType** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *ActivityType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ActivityType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ActivityType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Activity Type records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ActivityType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ActivityType"
                ],
                "summary": "Activity Type Create API (kss_activity_type)",
                "description": "Create a specific Activity Type and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "fields_configuration": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activity Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "fields_configuration": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/activity-types/{id}": {
            "get": {
                "tags": [
                    "ActivityType"
                ],
                "summary": "Activity Type View API (kss_activity_type)",
                "description": "Get A Specific Activity Type Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Activity Type record (kss_activity_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ActivityType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ActivityType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ActivityType"
                ],
                "summary": "Activity Type Update API (kss_activity_type)",
                "description": "Update a specific Activity Type and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Activity Type record (kss_activity_type.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "fields_configuration": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activity Type object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "fields_configuration": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ActivityType"
                ],
                "summary": "Activity Type Delete API (kss_activity_type)",
                "description": "Delete a specific Activity Type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_activity_type.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/applications/program-change/{id}": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Program Change API (kss_application)",
                "description": "Program change Application and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application record (kss_application.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_intake_id": {
                                        "type": "integer"
                                    },
                                    "program_id": {
                                        "type": "integer"
                                    },
                                    "program_name": {
                                        "type": "string"
                                    },
                                    "country_code": {
                                        "type": "string"
                                    },
                                    "institution_code": {
                                        "type": "string"
                                    },
                                    "tuition_line_item": {
                                        "type": "string"
                                    },
                                    "study_plan_object": {
                                        "type": "object"
                                    },
                                    "app_partners": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/applications/sync-enrolment-status-with-student-ledger/{id}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Sync Enrolment Status with Student Ledger API (kss_application)",
                "description": "Sync to enrolment status with student ledger",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enrollment_status": {
                                        "type": "string"
                                    },
                                    "app_partners": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lineItemIDs": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Failed from student ledger for unknown reason"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/applications/rank/{id}": {
            "patch": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Update With Ranking API (kss_application)",
                "description": "Update application with ranking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application record (kss_application.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "ranks": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "rank": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "sales_manager_id": {
                                            "type": "string"
                                        },
                                        "cas_team_owner_id": {
                                            "type": "string"
                                        },
                                        "application_owner_id": {
                                            "type": "string"
                                        },
                                        "payment_status": {
                                            "type": "integer"
                                        },
                                        "immigration_status": {
                                            "type": "integer"
                                        },
                                        "application_status": {
                                            "type": "integer"
                                        },
                                        "status_reason": {
                                            "type": "integer"
                                        },
                                        "immigration_category": {
                                            "type": "integer"
                                        },
                                        "have_second_agent": {
                                            "type": "integer"
                                        },
                                        "accept_offer_document": {
                                            "type": "string"
                                        },
                                        "is_issued_offer_letter": {
                                            "type": "integer"
                                        },
                                        "offer_letter_link": {
                                            "type": "string"
                                        },
                                        "is_issued_acceptance_form": {
                                            "type": "integer"
                                        },
                                        "meal_plan_preference": {
                                            "type": "string"
                                        },
                                        "same_gender_accommodation": {
                                            "type": "string"
                                        },
                                        "confirmed_not_required": {
                                            "type": "integer"
                                        },
                                        "accommodation_validity": {
                                            "type": "integer"
                                        },
                                        "temporary_college_name": {
                                            "type": "string"
                                        },
                                        "temporary_start_date": {
                                            "type": "string"
                                        },
                                        "university_id": {
                                            "type": "string"
                                        },
                                        "second_university_id": {
                                            "type": "string"
                                        },
                                        "university_name": {
                                            "type": "string"
                                        },
                                        "university_offer_letter_document": {
                                            "type": "string"
                                        },
                                        "financial_guarantee_document": {
                                            "type": "string"
                                        },
                                        "art_and_design_assessment": {
                                            "type": "string"
                                        },
                                        "art_and_design_advice": {
                                            "type": "string"
                                        },
                                        "university_email": {
                                            "type": "string"
                                        },
                                        "previously_applied_for_direct_entry": {
                                            "type": "string"
                                        },
                                        "direct_entry_liklihood": {
                                            "type": "string"
                                        },
                                        "tfa_assessment": {
                                            "type": "string"
                                        },
                                        "tfa_risk": {
                                            "type": "string"
                                        },
                                        "tfa_advice": {
                                            "type": "string"
                                        },
                                        "cas_request_form_document": {
                                            "type": "string"
                                        },
                                        "is_cas_request_form_letter": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "is_issued_non_cas_letter": {
                                            "type": "integer"
                                        },
                                        "is_issued_stsv_letter": {
                                            "type": "integer"
                                        },
                                        "intent_to_enrol": {
                                            "type": "integer"
                                        },
                                        "post_i20_owner_id": {
                                            "type": "string"
                                        },
                                        "disability_assessment": {
                                            "type": "string"
                                        },
                                        "disability_risk_group": {
                                            "type": "string"
                                        },
                                        "disability_advice": {
                                            "type": "string"
                                        },
                                        "sent_to_enrolment": {
                                            "type": "integer"
                                        },
                                        "is_manually_changed_status": {
                                            "type": "integer"
                                        },
                                        "is_need_visa": {
                                            "type": "integer"
                                        },
                                        "previous_uk_student": {
                                            "type": "integer"
                                        },
                                        "previous_course_level": {
                                            "type": "string"
                                        },
                                        "current_course_comparison": {
                                            "type": "string"
                                        },
                                        "same_or_lower_justification": {
                                            "type": "string"
                                        },
                                        "fee_status": {
                                            "type": "integer"
                                        },
                                        "is_application_complete": {
                                            "type": "integer"
                                        },
                                        "payment_upload_document": {
                                            "type": "string"
                                        },
                                        "payment_proof_date": {
                                            "type": "string"
                                        },
                                        "degree_title": {
                                            "type": "string"
                                        },
                                        "degree_faculty": {
                                            "type": "integer"
                                        },
                                        "degree_fee": {
                                            "type": "number"
                                        },
                                        "degree_overall_selt_requirement": {
                                            "type": "string"
                                        },
                                        "degree_reading_requirement": {
                                            "type": "string"
                                        },
                                        "degree_listening_requirement": {
                                            "type": "string"
                                        },
                                        "degree_writing_requirement": {
                                            "type": "string"
                                        },
                                        "degree_speaking_requirement": {
                                            "type": "string"
                                        },
                                        "accommodation_required": {
                                            "type": "integer"
                                        },
                                        "returning_student": {
                                            "type": "integer"
                                        },
                                        "SF_OppID": {
                                            "type": "integer"
                                        },
                                        "partner_application_id": {
                                            "type": "string"
                                        },
                                        "deferral_status": {
                                            "type": "integer"
                                        },
                                        "english_intended_method": {
                                            "type": "integer"
                                        },
                                        "longer_course": {
                                            "type": "integer"
                                        },
                                        "is_issued_ee_request_form": {
                                            "type": "integer"
                                        },
                                        "is_issued_ee_letter": {
                                            "type": "integer"
                                        },
                                        "learning_mode": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/applications/check-delete/{id}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Check Delete API (kss_application)",
                "description": "Check delete application",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application record (kss_application.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-document-checklists": {
            "get": {
                "tags": [
                    "ApplicationDocumentChecklist"
                ],
                "summary": "Application Document Checklist Index API (kss_application_document_checklist)",
                "description": "Get List of Application Document Checklist Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ApplicationDocumentChecklist** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *ApplicationDocumentChecklist** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationDocumentChecklist** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationDocumentChecklist**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application Document Checklist records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationDocumentChecklist"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ApplicationDocumentChecklist"
                ],
                "summary": "Application Document Checklist Create API (kss_application_document_checklist)",
                "description": "Create a specific Application Document Checklist and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "status_title": {
                                        "type": "string"
                                    },
                                    "documents": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "application_status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Document Checklist object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "status_title": {
                                            "type": "string"
                                        },
                                        "documents": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "application_status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-document-checklists/{id}": {
            "get": {
                "tags": [
                    "ApplicationDocumentChecklist"
                ],
                "summary": "Application Document Checklist View API (kss_application_document_checklist)",
                "description": "Get A Specific Application Document Checklist Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Document Checklist record (kss_application_document_checklist.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationDocumentChecklist** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationDocumentChecklist**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Document Checklist object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationDocumentChecklist"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ApplicationDocumentChecklist"
                ],
                "summary": "Application Document Checklist Update API (kss_application_document_checklist)",
                "description": "Update a specific Application Document Checklist and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Document Checklist record (kss_application_document_checklist.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "status_title": {
                                        "type": "string"
                                    },
                                    "documents": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "application_status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Document Checklist object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "status_title": {
                                            "type": "string"
                                        },
                                        "documents": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "application_status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ApplicationDocumentChecklist"
                ],
                "summary": "Application Document Checklist Delete API (kss_application_document_checklist)",
                "description": "Delete a specific Application Document Checklist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_application_document_checklist.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-files": {
            "get": {
                "tags": [
                    "ApplicationFile"
                ],
                "summary": "Application File Index API (kss_application_file)",
                "description": "Get List of Application File Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ApplicationFile** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *ApplicationFile** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationFile** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationFile**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application File records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationFile"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ApplicationFile"
                ],
                "summary": "Application File Create API (kss_application_file)",
                "description": "Create a specific Application File and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "reference_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "link": {
                                        "type": "string"
                                    },
                                    "source": {
                                        "type": "string"
                                    },
                                    "active": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application File object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "reference_id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "link": {
                                            "type": "string"
                                        },
                                        "source": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-files/{id}": {
            "get": {
                "tags": [
                    "ApplicationFile"
                ],
                "summary": "Application File View API (kss_application_file)",
                "description": "Get A Specific Application File Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application File record (kss_application_file.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationFile** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationFile**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application File object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationFile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ApplicationFile"
                ],
                "summary": "Application File Update API (kss_application_file)",
                "description": "Update a specific Application File and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application File record (kss_application_file.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "reference_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "link": {
                                        "type": "string"
                                    },
                                    "source": {
                                        "type": "string"
                                    },
                                    "active": {
                                        "type": "integer"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application File object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "reference_id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "link": {
                                            "type": "string"
                                        },
                                        "source": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ApplicationFile"
                ],
                "summary": "Application File Delete API (kss_application_file",
                "description": "Delete a specific Application File",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_application_file.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-partners": {
            "get": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner Index API (kss_application_partner)",
                "description": "Get List of Application Partner Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ApplicationPartner** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *ApplicationPartner** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationPartner** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationPartner**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application Partner records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationPartner"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner Create API (kss_application_partner)",
                "description": "Create a specific Application Partner and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "counsellor_id": {
                                        "type": "integer"
                                    },
                                    "liaison_id": {
                                        "type": "integer"
                                    },
                                    "is_main_agent": {
                                        "type": "integer"
                                    },
                                    "partner_type": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "integer"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Partner object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "business_id": {
                                            "type": "integer"
                                        },
                                        "counsellor_id": {
                                            "type": "integer"
                                        },
                                        "liaison_id": {
                                            "type": "integer"
                                        },
                                        "is_main_agent": {
                                            "type": "integer"
                                        },
                                        "partner_type": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-partners/{id}": {
            "get": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner View API (kss_application_partner)",
                "description": "Get A Specific Application Partner Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Partner record (kss_application_partner.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationPartner** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationPartner**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Partner object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationPartner"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner Update API (kss_application_partner)",
                "description": "Update a specific Application Partner and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Partner record (kss_application_partner.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "counsellor_id": {
                                        "type": "integer"
                                    },
                                    "liaison_id": {
                                        "type": "integer"
                                    },
                                    "is_main_agent": {
                                        "type": "integer"
                                    },
                                    "partner_type": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "integer"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Partner object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "business_id": {
                                            "type": "integer"
                                        },
                                        "counsellor_id": {
                                            "type": "integer"
                                        },
                                        "liaison_id": {
                                            "type": "integer"
                                        },
                                        "is_main_agent": {
                                            "type": "integer"
                                        },
                                        "partner_type": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner Delete API (kss_application_partner)",
                "description": "Delete a specific Application Partner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_application_partner.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-status-logs": {
            "get": {
                "tags": [
                    "ApplicationStatusLog"
                ],
                "summary": "Application Status Log Index API (kss_application_status_log)",
                "description": "Get List of Application Status Log Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ApplicationStatusLog** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *ApplicationStatusLog** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationStatusLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationStatusLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application Status Log records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationStatusLog"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-status-logs/{id}": {
            "get": {
                "tags": [
                    "ApplicationStatusLog"
                ],
                "summary": "Application Status Log View API (kss_application_status_log)",
                "description": "Get A Specific Application Status Log Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Status Log record (kss_application_status_log.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationStatusLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationStatusLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Status Log object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationStatusLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-visas": {
            "get": {
                "tags": [
                    "ApplicationVisa"
                ],
                "summary": "Application Visa Index API (kss_application_visa)",
                "description": "Get List of Application Visa Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ApplicationVisa** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit number of result list",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationVisa** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationVisa**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application Visa object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationVisa"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ApplicationVisa"
                ],
                "summary": "Application Visas Create API (kss_application_visa)",
                "description": "Create a specific Application Visa and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "visa_type": {
                                        "type": "integer"
                                    },
                                    "visa_number": {
                                        "type": "string"
                                    },
                                    "visa_start_date": {
                                        "type": "string"
                                    },
                                    "visa_end_date": {
                                        "type": "string"
                                    },
                                    "study_plan_id": {
                                        "type": "int"
                                    },
                                    "visa_document": {
                                        "type": "object"
                                    },
                                    "created_stage": {
                                        "type": "string"
                                    },
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "course_start_date": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Visa object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "visa_type": {
                                            "type": "integer"
                                        },
                                        "visa_number": {
                                            "type": "string"
                                        },
                                        "visa_start_date": {
                                            "type": "string"
                                        },
                                        "visa_end_date": {
                                            "type": "string"
                                        },
                                        "study_plan_id": {
                                            "type": "int"
                                        },
                                        "visa_document": {
                                            "type": "object"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "string"
                                        },
                                        "created_stage": {
                                            "type": "string"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "course_start_date": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-visas/{id}": {
            "get": {
                "tags": [
                    "ApplicationVisa"
                ],
                "summary": "Application Visa View API (kss_application_visa)",
                "description": "Get A Specific Application Visa Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the application visa record (applicationVisa.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationVisa** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationVisa**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Visa object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationVisa"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not Found"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ApplicationVisa"
                ],
                "summary": "Application Visa Update API (kss_application_visa)",
                "description": "Update a specific Application Visa and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Visa record (kss_application_visa.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "visa_type": {
                                        "type": "integer"
                                    },
                                    "visa_number": {
                                        "type": "string"
                                    },
                                    "visa_start_date": {
                                        "type": "string"
                                    },
                                    "visa_end_date": {
                                        "type": "string"
                                    },
                                    "study_plan_id": {
                                        "type": "int"
                                    },
                                    "visa_document": {
                                        "type": "object"
                                    },
                                    "created_stage": {
                                        "type": "string"
                                    },
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "course_start_date": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Visa object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "visa_type": {
                                            "type": "integer"
                                        },
                                        "visa_number": {
                                            "type": "string"
                                        },
                                        "visa_start_date": {
                                            "type": "string"
                                        },
                                        "visa_end_date": {
                                            "type": "string"
                                        },
                                        "study_plan_id": {
                                            "type": "int"
                                        },
                                        "visa_document": {
                                            "type": "object"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "string"
                                        },
                                        "created_stage": {
                                            "type": "string"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "course_start_date": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-visa-logs": {
            "get": {
                "tags": [
                    "ApplicationVisaLog"
                ],
                "summary": "Application Visa Log Index API (kss_application_visa_log)",
                "description": "Get List of Application Visa Log Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ApplicationVisaLog** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *ApplicationVisaLog** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationVisaLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationVisaLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application Visa Log records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationVisaLog"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-visa-logs/{id}": {
            "get": {
                "tags": [
                    "ApplicationVisaLog"
                ],
                "summary": "Application Visa Log View API (kss_application_visa_log)",
                "description": "Get A Specific Application Visa Log Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Visa Log record (kss_application_visa_log.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationVisaLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationVisaLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Visa Log object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationVisaLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/art-and-design-workflow/{id}": {
            "get": {
                "tags": [
                    "ArtAndDesignWorkflow"
                ],
                "summary": "Art And Design Workflow View API (kss_application_workflow)",
                "description": "Get A Specific Art And Design Workflow Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the art and design workflow record (kss_application_workflow.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationWorkflow** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationWorkflow**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Workflow object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationWorkflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/art-and-design-workflow/invoke": {
            "post": {
                "tags": [
                    "ArtAndDesignWorkflow"
                ],
                "summary": "Art And Design Workflow Invoke API (kss_application_workflow)",
                "description": "Invoke Art And Design Workflow",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Workflow object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "executionArn": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/art-and-design-workflow/describe-workflow/{id}": {
            "get": {
                "tags": [
                    "ArtAndDesignWorkflow"
                ],
                "summary": "Art And Design Workflow Describe Worflow API (kss_application_workflow)",
                "description": "Describe Worflow Art And Design Workflow Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the art and design workflow record (kss_application_workflow.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationWorkflow** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationWorkflow**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Worflow object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "states": {
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "executionArn": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/art-and-design-workflow/check-workflow": {
            "post": {
                "tags": [
                    "ArtAndDesignWorkflow"
                ],
                "summary": "Art And Design Workflow Check Workflow API (kss_application_workflow)",
                "description": "Check Workflow Art And Design Workflow",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Partner object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "executionArn": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/auth-policy": {
            "get": {
                "tags": [
                    "AuthPolicy"
                ],
                "summary": "Auth policy Index API",
                "description": "Get List of Auth Policy Records",
                "parameters": [
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *AuthPolicy** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AuthPolicy**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Auth Policy records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "advices": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "items": {}
                                            }
                                        },
                                        "ttl": {
                                            "type": "string"
                                        },
                                        "resource": {
                                            "type": "string"
                                        },
                                        "actions": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "items": {}
                                            }
                                        },
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "items": {}
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-activity-details": {
            "get": {
                "tags": [
                    "CasActivityDetail"
                ],
                "summary": "Cas Activity Detail Index API (kss_cas_activity_detail)",
                "description": "Get List of Cas Activity Detail Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CasActivityDetail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *CasActivityDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasActivityDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasActivityDetail**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cas Activity Detail records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CasActivityDetail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CasActivityDetail"
                ],
                "summary": "Cas Activity Detail Create API (kss_cas_activity_detail)",
                "description": "Create a specific Cas Activity Detail and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cas_id": {
                                        "type": "string"
                                    },
                                    "user_recorded": {
                                        "type": "string"
                                    },
                                    "recorded_date": {
                                        "type": "string"
                                    },
                                    "activity_type_id": {
                                        "type": "integer"
                                    },
                                    "activity_detail_id": {
                                        "type": "integer"
                                    },
                                    "change_withdrawn_date": {
                                        "type": "string"
                                    },
                                    "new_enrolment_date": {
                                        "type": "string"
                                    },
                                    "previous_notification_date": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Activity Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "cas_id": {
                                            "type": "string"
                                        },
                                        "user_recorded": {
                                            "type": "string"
                                        },
                                        "recorded_date": {
                                            "type": "string"
                                        },
                                        "activity_type_id": {
                                            "type": "integer"
                                        },
                                        "activity_detail_id": {
                                            "type": "integer"
                                        },
                                        "change_withdrawn_date": {
                                            "type": "string"
                                        },
                                        "new_enrolment_date": {
                                            "type": "string"
                                        },
                                        "previous_notification_date": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-activity-details/{id}": {
            "get": {
                "tags": [
                    "CasActivityDetail"
                ],
                "summary": "Cas Activity Detail View API (kss_cas_activity_detail)",
                "description": "Get A Specific Cas Activity Detail Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Activity Detail record (kss_cas_activity_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasActivityDetail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasActivityDetail**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Partner object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasActivityDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CasActivityDetail"
                ],
                "summary": "Cas Activity Detail Update API (kss_cas_activity_detail)",
                "description": "Update a specific Cas Activity Detail and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Activity Detail record (kss_cas_activity_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cas_id": {
                                        "type": "string"
                                    },
                                    "user_recorded": {
                                        "type": "string"
                                    },
                                    "recorded_date": {
                                        "type": "string"
                                    },
                                    "activity_type_id": {
                                        "type": "integer"
                                    },
                                    "activity_detail_id": {
                                        "type": "integer"
                                    },
                                    "change_withdrawn_date": {
                                        "type": "string"
                                    },
                                    "new_enrolment_date": {
                                        "type": "string"
                                    },
                                    "previous_notification_date": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Activity Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "cas_id": {
                                            "type": "string"
                                        },
                                        "user_recorded": {
                                            "type": "string"
                                        },
                                        "recorded_date": {
                                            "type": "string"
                                        },
                                        "activity_type_id": {
                                            "type": "integer"
                                        },
                                        "activity_detail_id": {
                                            "type": "integer"
                                        },
                                        "change_withdrawn_date": {
                                            "type": "string"
                                        },
                                        "new_enrolment_date": {
                                            "type": "string"
                                        },
                                        "previous_notification_date": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CasActivityDetail"
                ],
                "summary": "Cas Activity Detail Delete API (kss_cas_activity_detail)",
                "description": "Delete a specific Cas Activity Detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_cas_activity_detail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-batches/import-xml": {
            "post": {
                "tags": [
                    "CasBatch"
                ],
                "summary": "Cas Batch Import XML API (kss_cas_batch)",
                "description": "Import XML Cas Batch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "payload": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Batch object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "importSuccess": {
                                            "type": "boolean"
                                        },
                                        "link": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-brps": {
            "get": {
                "tags": [
                    "CasBrp"
                ],
                "summary": "Cas Brp Index API (kss_cas_brp)",
                "description": "Get List of Cas Brp Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CasBrp** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *CasBatchDetail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasBrp** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasBrp**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cas Brp records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CasBrp"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CasBrp"
                ],
                "summary": "Cas Brp Create API (kss_cas_brp)",
                "description": "Create a specific Cas Brp and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cas_id": {
                                        "type": "integer"
                                    },
                                    "brp_number": {
                                        "type": "string"
                                    },
                                    "brp_valid_from": {
                                        "type": "string"
                                    },
                                    "brp_valid_to": {
                                        "type": "string"
                                    },
                                    "brp_type": {
                                        "type": "integer"
                                    },
                                    "brp_status": {
                                        "type": "integer"
                                    },
                                    "brp_location": {
                                        "type": "integer"
                                    },
                                    "brp_initialized": {
                                        "type": "integer"
                                    },
                                    "reported_online": {
                                        "type": "string"
                                    },
                                    "sent_for_correction": {
                                        "type": "string"
                                    },
                                    "appointment_booked": {
                                        "type": "string"
                                    },
                                    "appointment_attended": {
                                        "type": "string"
                                    },
                                    "brp_rc_form_posted": {
                                        "type": "string"
                                    },
                                    "replacement_received": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "permission_to_work": {
                                        "type": "integer"
                                    },
                                    "permission_note": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Brp object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "cas_id": {
                                            "type": "integer"
                                        },
                                        "brp_number": {
                                            "type": "string"
                                        },
                                        "brp_valid_from": {
                                            "type": "string"
                                        },
                                        "brp_valid_to": {
                                            "type": "string"
                                        },
                                        "brp_type": {
                                            "type": "integer"
                                        },
                                        "brp_status": {
                                            "type": "integer"
                                        },
                                        "brp_location": {
                                            "type": "integer"
                                        },
                                        "brp_initialized": {
                                            "type": "integer"
                                        },
                                        "reported_online": {
                                            "type": "string"
                                        },
                                        "sent_for_correction": {
                                            "type": "string"
                                        },
                                        "appointment_booked": {
                                            "type": "string"
                                        },
                                        "appointment_attended": {
                                            "type": "string"
                                        },
                                        "brp_rc_form_posted": {
                                            "type": "string"
                                        },
                                        "replacement_received": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "permission_to_work": {
                                            "type": "integer"
                                        },
                                        "permission_note": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-brps/{id}": {
            "get": {
                "tags": [
                    "CasBrp"
                ],
                "summary": "Cas Brp View API (kss_cas_brp)",
                "description": "Get A Specific Cas Brp Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Brp record (kss_cas_brp.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasBrp** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasBrp**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cas Brp object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasBrp"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CasBrp"
                ],
                "summary": "Cas Brp Update API (kss_cas_brp)",
                "description": "Update a specific Cas Brp and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Brp record (kss_cas_brp.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cas_id": {
                                        "type": "integer"
                                    },
                                    "brp_number": {
                                        "type": "string"
                                    },
                                    "brp_valid_from": {
                                        "type": "string"
                                    },
                                    "brp_valid_to": {
                                        "type": "string"
                                    },
                                    "brp_type": {
                                        "type": "integer"
                                    },
                                    "brp_status": {
                                        "type": "integer"
                                    },
                                    "brp_location": {
                                        "type": "integer"
                                    },
                                    "brp_initialized": {
                                        "type": "integer"
                                    },
                                    "reported_online": {
                                        "type": "string"
                                    },
                                    "sent_for_correction": {
                                        "type": "string"
                                    },
                                    "appointment_booked": {
                                        "type": "string"
                                    },
                                    "appointment_attended": {
                                        "type": "string"
                                    },
                                    "brp_rc_form_posted": {
                                        "type": "string"
                                    },
                                    "replacement_received": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "permission_to_work": {
                                        "type": "integer"
                                    },
                                    "permission_note": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Brp object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "cas_id": {
                                            "type": "integer"
                                        },
                                        "brp_number": {
                                            "type": "string"
                                        },
                                        "brp_valid_from": {
                                            "type": "string"
                                        },
                                        "brp_valid_to": {
                                            "type": "string"
                                        },
                                        "brp_type": {
                                            "type": "integer"
                                        },
                                        "brp_status": {
                                            "type": "integer"
                                        },
                                        "brp_location": {
                                            "type": "integer"
                                        },
                                        "brp_initialized": {
                                            "type": "integer"
                                        },
                                        "reported_online": {
                                            "type": "string"
                                        },
                                        "sent_for_correction": {
                                            "type": "string"
                                        },
                                        "appointment_booked": {
                                            "type": "string"
                                        },
                                        "appointment_attended": {
                                            "type": "string"
                                        },
                                        "brp_rc_form_posted": {
                                            "type": "string"
                                        },
                                        "replacement_received": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "permission_to_work": {
                                            "type": "integer"
                                        },
                                        "permission_note": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CasBrp"
                ],
                "summary": "Cas Brp Delete API (kss_cas_brp)",
                "description": "Delete a specific Cas Brp",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_cas_brp.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-ec": {
            "get": {
                "tags": [
                    "CasEc"
                ],
                "summary": "Cas Ec Index API (kss_cas_ec)",
                "description": "Get List of Cas Ec Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CasEc** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *CasEc** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasEc** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasEc**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cas Ec records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CasEc"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CasEc"
                ],
                "summary": "Cas Ec Create API (kss_cas_ec)",
                "description": "Create a specific Cas Ec and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cas_id": {
                                        "type": "integer"
                                    },
                                    "ec_number": {
                                        "type": "integer"
                                    },
                                    "ec_start_date": {
                                        "type": "integer"
                                    },
                                    "ec_end_date": {
                                        "type": "integer"
                                    },
                                    "ec_document": {
                                        "type": "integer"
                                    },
                                    "visa_type": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Ec object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "cas_id": {
                                            "type": "integer"
                                        },
                                        "ec_number": {
                                            "type": "integer"
                                        },
                                        "ec_start_date": {
                                            "type": "integer"
                                        },
                                        "ec_end_date": {
                                            "type": "integer"
                                        },
                                        "ec_document": {
                                            "type": "integer"
                                        },
                                        "visa_type": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-ec/{id}": {
            "get": {
                "tags": [
                    "CasEc"
                ],
                "summary": "Cas Ec View API (kss_cas_ec)",
                "description": "Get A Specific Cas Ec Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Ec record (kss_cas_ec.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasEc** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasEc**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cas Ec object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasEc"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CasEc"
                ],
                "summary": "Cas Ec Update API (kss_cas_ec)",
                "description": "Update a specific Cas Ec and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Ec record (kss_cas_ec.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cas_id": {
                                        "type": "integer"
                                    },
                                    "ec_number": {
                                        "type": "integer"
                                    },
                                    "ec_start_date": {
                                        "type": "integer"
                                    },
                                    "ec_end_date": {
                                        "type": "integer"
                                    },
                                    "ec_document": {
                                        "type": "integer"
                                    },
                                    "visa_type": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Ec object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "cas_id": {
                                            "type": "integer"
                                        },
                                        "ec_number": {
                                            "type": "integer"
                                        },
                                        "ec_start_date": {
                                            "type": "integer"
                                        },
                                        "ec_end_date": {
                                            "type": "integer"
                                        },
                                        "ec_document": {
                                            "type": "integer"
                                        },
                                        "visa_type": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CasEc"
                ],
                "summary": "Cas Ec Delete API (kss_cas_ec)",
                "description": "Delete a specific Cas Ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_cas_ec.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-logs": {
            "get": {
                "tags": [
                    "CasLog"
                ],
                "summary": "Cas Log Index API (kss_cas_log)",
                "description": "Get List of Cas Log Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CasLog** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *CasLog** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cas Log records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CasLog"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-logs/{id}": {
            "get": {
                "tags": [
                    "CasLog"
                ],
                "summary": "Cas Log View API (kss_cas_log)",
                "description": "Get A Specific Cas Log Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Log record (kss_cas_log.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cas Log object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-status-logs": {
            "get": {
                "tags": [
                    "CasStatusLog"
                ],
                "summary": "Cas Status Log Index API (kss_cas_status)",
                "description": "Get List of Cas Status Log Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CasStatusLog** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *CasStatusLog** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasStatusLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasStatusLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cas Status Log records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CasStatusLog"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-status-logs/{id}": {
            "get": {
                "tags": [
                    "CasStatusLog"
                ],
                "summary": "Cas Status Log View API (kss_cas_status_log)",
                "description": "Get A Specific Cas Status Log Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Status Log record (kss_cas_status_log.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasStatusLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasStatusLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cas Status Log object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasStatusLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-visa": {
            "get": {
                "tags": [
                    "CasVisa"
                ],
                "summary": "Cas Visa Index API (kss_cas_visa)",
                "description": "Get List of Cas Visa Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CasVisa** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *CasVisa** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasVisa** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasVisa**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cas Visa records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CasVisa"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CasVisa"
                ],
                "summary": "Cas Visa Create API (kss_cas_visa)",
                "description": "Create a specific Cas Visa and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cas_id": {
                                        "type": "integer"
                                    },
                                    "ec_number": {
                                        "type": "integer"
                                    },
                                    "ec_start_date": {
                                        "type": "integer"
                                    },
                                    "ec_end_date": {
                                        "type": "integer"
                                    },
                                    "ec_document": {
                                        "type": "integer"
                                    },
                                    "visa_type": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Visa object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "cas_id": {
                                            "type": "integer"
                                        },
                                        "ec_number": {
                                            "type": "integer"
                                        },
                                        "ec_start_date": {
                                            "type": "integer"
                                        },
                                        "ec_end_date": {
                                            "type": "integer"
                                        },
                                        "ec_document": {
                                            "type": "integer"
                                        },
                                        "visa_type": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/cas-visa/{id}": {
            "get": {
                "tags": [
                    "CasVisa"
                ],
                "summary": "Cas Visa View API (kss_cas_visa)",
                "description": "Get A Specific Cas Visa Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Visa record (kss_cas_visa.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasVisa** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasVisa**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cas Visa object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasVisa"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CasVisa"
                ],
                "summary": "Cas Visa Update API (kss_cas_visa)",
                "description": "Update a specific Cas Visa and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Visa record (kss_cas_visa.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cas_id": {
                                        "type": "integer"
                                    },
                                    "ec_number": {
                                        "type": "integer"
                                    },
                                    "ec_start_date": {
                                        "type": "integer"
                                    },
                                    "ec_end_date": {
                                        "type": "integer"
                                    },
                                    "ec_document": {
                                        "type": "integer"
                                    },
                                    "visa_type": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "modified_by": {
                                        "type": "string"
                                    },
                                    "modified_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Visa object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "cas_id": {
                                            "type": "integer"
                                        },
                                        "ec_number": {
                                            "type": "integer"
                                        },
                                        "ec_start_date": {
                                            "type": "integer"
                                        },
                                        "ec_end_date": {
                                            "type": "integer"
                                        },
                                        "ec_document": {
                                            "type": "integer"
                                        },
                                        "visa_type": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CasVisa"
                ],
                "summary": "Cas Visa Delete API (kss_cas_visa)",
                "description": "Delete a specific Cas Visa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_cas_visa.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/disability-workflow/{id}": {
            "get": {
                "tags": [
                    "DisabilityWorkflow"
                ],
                "summary": "Disability Workflow View API (kss_application_workflow)",
                "description": "Get A Specific Disability Workflow Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the disability workflow record (kss_application_workflow.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationWorkflow** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationWorkflow**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Workflow object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationWorkflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/disability-workflow/describe-workflow/{id}": {
            "get": {
                "tags": [
                    "DisabilityWorflow"
                ],
                "summary": "Disability Worflow Describe Worflow API (kss_application_workflow)",
                "description": "Describe Workflow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Workflow record (kss_application_workflow.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationWorkflow** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationWorkflow**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Worflow object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "states": {
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "executionArn": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/document-check-items": {
            "get": {
                "tags": [
                    "DocumentCheckItem"
                ],
                "summary": "Document Check Item Index API (kss_document_check_item)",
                "description": "Get List of Document Check Item Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **DocumentCheckItem** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *DocumentCheckItem** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DocumentCheckItem** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **DocumentCheckItem**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Document Check Item records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DocumentCheckItem"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DocumentCheckItem"
                ],
                "summary": "Document Check Item Create API (kss_document_check_item)",
                "description": "Create a specific Document Check Item and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document Check Item object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/document-check-items/{id}": {
            "get": {
                "tags": [
                    "DocumentCheckItem"
                ],
                "summary": "Document Check Item View API (kss_document_check_item)",
                "description": "Get A Specific Document Check Item Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Document Check Item record (kss_document_check_item.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DocumentCheckItem** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **DocumentCheckItem**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document Check Item object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentCheckItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DocumentCheckItem"
                ],
                "summary": "Document Check Item Update API (kss_document_check_item)",
                "description": "Update a specific Document Check Item and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Document Check Item record (kss_document_check_item.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document Check Item object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DocumentCheckItem"
                ],
                "summary": "Document Check Item Delete API (kss_document_check_item)",
                "description": "Delete a specific Document Check Item",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_document_check_item.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/email-sent": {
            "get": {
                "tags": [
                    "Email sent"
                ],
                "summary": "Email sent",
                "description": "Summary Email sent",
                "responses": {
                    "200": {
                        "description": "Email sent summary",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailSent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot summary email"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/email-sent/{id}": {
            "get": {
                "tags": [
                    "Email sent"
                ],
                "summary": "Email sent",
                "description": "Email sent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email sent id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent summary",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailSent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot summary email"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/health-checks": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Check system configuration work as well or not",
                "description": "Checking system config: Database, Caches, KSS3 service endpoints ...",
                "operationId": "api\\modules\\v1\\controllers\\HealthCheckController::actionIndex",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Default the system will send an email to KSS tomtan mailbox to check, This parameter to override that value",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "services",
                        "in": "query",
                        "description": "List service want to check, seperate by comma. Example: ?services=DATABASE,KSS3_ENDPOINTS,GOOGLE_DISTANCE,S3_STORAGE",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/api/v1/statuses": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Index API (kss_status)",
                "description": "Get List of Status Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Status** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Status** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -title"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Status records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Create API (kss_status)",
                "description": "Create a specific Status",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "parent_status_id": {
                                        "type": "integer"
                                    },
                                    "country_code": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    },
                                    "reporting_status_group": {
                                        "type": "string"
                                    },
                                    "reporting_status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "parent_status_id": {
                                            "type": "integer"
                                        },
                                        "country_code": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "reporting_status_group": {
                                            "type": "string"
                                        },
                                        "reporting_status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses/{id}": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status View API (kss_status)",
                "description": "Get A Specific Status Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Update API (kss_status)",
                "description": "Update a specific Status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "parent_status_id": {
                                        "type": "integer"
                                    },
                                    "country_code": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    },
                                    "reporting_status_group": {
                                        "type": "string"
                                    },
                                    "reporting_status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "parent_status_id": {
                                            "type": "integer"
                                        },
                                        "country_code": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "reporting_status_group": {
                                            "type": "string"
                                        },
                                        "reporting_status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Delete API (kss_status)",
                "description": "Delete a specific Status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses/search": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status search API (kss_status)",
                "description": "Search Status",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Status** schema to\nfill in correct type of attribute, leave empty to return empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Status** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -title"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "id, title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Status records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Index API (kss_user)",
                "description": "Get List of User Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **User** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "494"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **User** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -title"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **User** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **User**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of User records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User View API (kss_user)",
                "description": "Get A Specific User Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the User record (kss_User.id)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "0000ef05-af26-4f8e-90ec-d0757059e133"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **User** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **User**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "User Update API (kss_user)",
                "description": "Update a specific User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the User record (kss_user.id)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "0000ef05-af26-4f8e-90ec-d0757059e133"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "type": "string"
                                    },
                                    "student_id": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "mail": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "messagingIDs": {
                                        "type": "string"
                                    },
                                    "previousUkVisas": {
                                        "type": "string"
                                    },
                                    "effectiveAssignments": {
                                        "type": "string"
                                    },
                                    "workExperience": {
                                        "type": "string"
                                    },
                                    "documents": {
                                        "type": "string"
                                    },
                                    "eltQualifications": {
                                        "type": "string"
                                    },
                                    "effectiveRoles": {
                                        "type": "string"
                                    },
                                    "disabilities": {
                                        "type": "string"
                                    },
                                    "qualifications": {
                                        "type": "string"
                                    },
                                    "addresses": {
                                        "type": "string"
                                    },
                                    "preferredContactMethod": {
                                        "type": "string"
                                    },
                                    "studyGaps": {
                                        "type": "string"
                                    },
                                    "contacts": {
                                        "type": "string"
                                    },
                                    "sourceOfStudent": {
                                        "type": "string"
                                    },
                                    "ethnicity": {
                                        "type": "string"
                                    },
                                    "mobileNumber": {
                                        "type": "string"
                                    },
                                    "dateCreated": {
                                        "type": "integer"
                                    },
                                    "postalAddress": {
                                        "type": "string"
                                    },
                                    "sexualOrientation": {
                                        "type": "string"
                                    },
                                    "secondaryMail": {
                                        "type": "string"
                                    },
                                    "nationality": {
                                        "type": "string"
                                    },
                                    "secondPhone": {
                                        "type": "string"
                                    },
                                    "primaryPhoneCode": {
                                        "type": "string"
                                    },
                                    "lastPasswordAttempt": {
                                        "type": "string"
                                    },
                                    "isRefusedVisaUK": {
                                        "type": "string"
                                    },
                                    "secondPhoneCode": {
                                        "type": "string"
                                    },
                                    "isRefusedVisaOther": {
                                        "type": "string"
                                    },
                                    "isNeedVisa": {
                                        "type": "string"
                                    },
                                    "emailOptOut": {
                                        "type": "integer"
                                    },
                                    "isGrantedVisaUK": {
                                        "type": "string"
                                    },
                                    "accountStatus": {
                                        "type": "string"
                                    },
                                    "lastPasswordSet": {
                                        "type": "string"
                                    },
                                    "idmType": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "string"
                                    },
                                    "preferredContactPerson": {
                                        "type": "string"
                                    },
                                    "dateOfBirth": {
                                        "type": "string"
                                    },
                                    "dateOfBirthTx": {
                                        "type": "integer"
                                    },
                                    "phoneOptOut": {
                                        "type": "integer"
                                    },
                                    "telephoneNumber": {
                                        "type": "string"
                                    },
                                    "careLeaver": {
                                        "type": "string"
                                    },
                                    "roles": {
                                        "type": "string"
                                    },
                                    "_rev": {
                                        "type": "string"
                                    },
                                    "genderIdentity": {
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "type": "string"
                                    },
                                    "planFundStudies": {
                                        "type": "string"
                                    },
                                    "stateProvince": {
                                        "type": "string"
                                    },
                                    "criminalRecord": {
                                        "type": "string"
                                    },
                                    "postalCode": {
                                        "type": "string"
                                    },
                                    "localSurname": {
                                        "type": "string"
                                    },
                                    "localForename": {
                                        "type": "string"
                                    },
                                    "vip": {
                                        "type": "string"
                                    },
                                    "vipReason": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "dateUpdated": {
                                        "type": "integer"
                                    },
                                    "religionOrBelief": {
                                        "type": "string"
                                    },
                                    "address2": {
                                        "type": "string"
                                    },
                                    "passwordAttempts": {
                                        "type": "string"
                                    },
                                    "passportNo": {
                                        "type": "string"
                                    },
                                    "passports": {
                                        "type": "string"
                                    },
                                    "avatar": {
                                        "type": "string"
                                    },
                                    "email_signature": {
                                        "type": "string"
                                    },
                                    "primaryPhoneCodeLabel": {
                                        "type": "string"
                                    },
                                    "secondPhoneCodeLabel": {
                                        "type": "string"
                                    },
                                    "criminalDesc": {
                                        "type": "string"
                                    },
                                    "class_student_id": {
                                        "type": "string"
                                    },
                                    "opp_passcode": {
                                        "type": "string"
                                    },
                                    "SF_AccID": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "fullname": {
                                            "type": "string"
                                        },
                                        "student_id": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "mail": {
                                            "type": "string"
                                        },
                                        "gender": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        },
                                        "messagingIDs": {
                                            "type": "string"
                                        },
                                        "previousUkVisas": {
                                            "type": "string"
                                        },
                                        "effectiveAssignments": {
                                            "type": "string"
                                        },
                                        "workExperience": {
                                            "type": "string"
                                        },
                                        "documents": {
                                            "type": "string"
                                        },
                                        "eltQualifications": {
                                            "type": "string"
                                        },
                                        "effectiveRoles": {
                                            "type": "string"
                                        },
                                        "disabilities": {
                                            "type": "string"
                                        },
                                        "qualifications": {
                                            "type": "string"
                                        },
                                        "addresses": {
                                            "type": "string"
                                        },
                                        "preferredContactMethod": {
                                            "type": "string"
                                        },
                                        "studyGaps": {
                                            "type": "string"
                                        },
                                        "contacts": {
                                            "type": "string"
                                        },
                                        "sourceOfStudent": {
                                            "type": "string"
                                        },
                                        "ethnicity": {
                                            "type": "string"
                                        },
                                        "mobileNumber": {
                                            "type": "string"
                                        },
                                        "dateCreated": {
                                            "type": "integer"
                                        },
                                        "postalAddress": {
                                            "type": "string"
                                        },
                                        "sexualOrientation": {
                                            "type": "string"
                                        },
                                        "secondaryMail": {
                                            "type": "string"
                                        },
                                        "nationality": {
                                            "type": "string"
                                        },
                                        "secondPhone": {
                                            "type": "string"
                                        },
                                        "primaryPhoneCode": {
                                            "type": "string"
                                        },
                                        "lastPasswordAttempt": {
                                            "type": "string"
                                        },
                                        "isRefusedVisaUK": {
                                            "type": "string"
                                        },
                                        "secondPhoneCode": {
                                            "type": "string"
                                        },
                                        "isRefusedVisaOther": {
                                            "type": "string"
                                        },
                                        "isNeedVisa": {
                                            "type": "string"
                                        },
                                        "emailOptOut": {
                                            "type": "integer"
                                        },
                                        "isGrantedVisaUK": {
                                            "type": "string"
                                        },
                                        "accountStatus": {
                                            "type": "string"
                                        },
                                        "lastPasswordSet": {
                                            "type": "string"
                                        },
                                        "idmType": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "string"
                                        },
                                        "preferredContactPerson": {
                                            "type": "string"
                                        },
                                        "dateOfBirth": {
                                            "type": "string"
                                        },
                                        "dateOfBirthTx": {
                                            "type": "integer"
                                        },
                                        "phoneOptOut": {
                                            "type": "integer"
                                        },
                                        "telephoneNumber": {
                                            "type": "string"
                                        },
                                        "careLeaver": {
                                            "type": "string"
                                        },
                                        "roles": {
                                            "type": "string"
                                        },
                                        "_rev": {
                                            "type": "string"
                                        },
                                        "genderIdentity": {
                                            "type": "string"
                                        },
                                        "nickname": {
                                            "type": "string"
                                        },
                                        "planFundStudies": {
                                            "type": "string"
                                        },
                                        "stateProvince": {
                                            "type": "string"
                                        },
                                        "criminalRecord": {
                                            "type": "string"
                                        },
                                        "postalCode": {
                                            "type": "string"
                                        },
                                        "localSurname": {
                                            "type": "string"
                                        },
                                        "localForename": {
                                            "type": "string"
                                        },
                                        "vip": {
                                            "type": "string"
                                        },
                                        "vipReason": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "dateUpdated": {
                                            "type": "integer"
                                        },
                                        "religionOrBelief": {
                                            "type": "string"
                                        },
                                        "address2": {
                                            "type": "string"
                                        },
                                        "passwordAttempts": {
                                            "type": "string"
                                        },
                                        "passportNo": {
                                            "type": "string"
                                        },
                                        "passports": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "avatar": {
                                            "type": "string"
                                        },
                                        "email_signature": {
                                            "type": "string"
                                        },
                                        "primaryPhoneCodeLabel": {
                                            "type": "string"
                                        },
                                        "secondPhoneCodeLabel": {
                                            "type": "string"
                                        },
                                        "criminalDesc": {
                                            "type": "string"
                                        },
                                        "class_student_id": {
                                            "type": "string"
                                        },
                                        "opp_passcode": {
                                            "type": "string"
                                        },
                                        "SF_AccID": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "User Delete API (kss_user)",
                "description": "Delete a specific User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the User record (kss_user.id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users/search": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User search API (kss_User)",
                "description": "Search User",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **User** schema to\nfill in correct type of attribute, leave empty to return empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "494"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **User** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -title"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **User** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **User**\nto get right attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "id, title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of User records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Create API (kss_user)",
                "description": "Create a specific User",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "type": "string"
                                    },
                                    "student_id": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "mail": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "messagingIDs": {
                                        "type": "string"
                                    },
                                    "previousUkVisas": {
                                        "type": "string"
                                    },
                                    "effectiveAssignments": {
                                        "type": "string"
                                    },
                                    "workExperience": {
                                        "type": "string"
                                    },
                                    "documents": {
                                        "type": "string"
                                    },
                                    "eltQualifications": {
                                        "type": "string"
                                    },
                                    "effectiveRoles": {
                                        "type": "string"
                                    },
                                    "disabilities": {
                                        "type": "string"
                                    },
                                    "qualifications": {
                                        "type": "string"
                                    },
                                    "addresses": {
                                        "type": "string"
                                    },
                                    "preferredContactMethod": {
                                        "type": "string"
                                    },
                                    "studyGaps": {
                                        "type": "string"
                                    },
                                    "contacts": {
                                        "type": "string"
                                    },
                                    "sourceOfStudent": {
                                        "type": "string"
                                    },
                                    "ethnicity": {
                                        "type": "string"
                                    },
                                    "mobileNumber": {
                                        "type": "string"
                                    },
                                    "dateCreated": {
                                        "type": "integer"
                                    },
                                    "postalAddress": {
                                        "type": "string"
                                    },
                                    "sexualOrientation": {
                                        "type": "string"
                                    },
                                    "secondaryMail": {
                                        "type": "string"
                                    },
                                    "nationality": {
                                        "type": "string"
                                    },
                                    "secondPhone": {
                                        "type": "string"
                                    },
                                    "primaryPhoneCode": {
                                        "type": "string"
                                    },
                                    "lastPasswordAttempt": {
                                        "type": "string"
                                    },
                                    "isRefusedVisaUK": {
                                        "type": "string"
                                    },
                                    "secondPhoneCode": {
                                        "type": "string"
                                    },
                                    "isRefusedVisaOther": {
                                        "type": "string"
                                    },
                                    "isNeedVisa": {
                                        "type": "string"
                                    },
                                    "emailOptOut": {
                                        "type": "integer"
                                    },
                                    "isGrantedVisaUK": {
                                        "type": "string"
                                    },
                                    "accountStatus": {
                                        "type": "string"
                                    },
                                    "lastPasswordSet": {
                                        "type": "string"
                                    },
                                    "idmType": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "string"
                                    },
                                    "preferredContactPerson": {
                                        "type": "string"
                                    },
                                    "dateOfBirth": {
                                        "type": "string"
                                    },
                                    "dateOfBirthTx": {
                                        "type": "integer"
                                    },
                                    "phoneOptOut": {
                                        "type": "integer"
                                    },
                                    "telephoneNumber": {
                                        "type": "string"
                                    },
                                    "careLeaver": {
                                        "type": "string"
                                    },
                                    "roles": {
                                        "type": "string"
                                    },
                                    "_rev": {
                                        "type": "string"
                                    },
                                    "genderIdentity": {
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "type": "string"
                                    },
                                    "planFundStudies": {
                                        "type": "string"
                                    },
                                    "stateProvince": {
                                        "type": "string"
                                    },
                                    "criminalRecord": {
                                        "type": "string"
                                    },
                                    "postalCode": {
                                        "type": "string"
                                    },
                                    "localSurname": {
                                        "type": "string"
                                    },
                                    "localForename": {
                                        "type": "string"
                                    },
                                    "vip": {
                                        "type": "string"
                                    },
                                    "vipReason": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "dateUpdated": {
                                        "type": "integer"
                                    },
                                    "religionOrBelief": {
                                        "type": "string"
                                    },
                                    "address2": {
                                        "type": "string"
                                    },
                                    "passwordAttempts": {
                                        "type": "string"
                                    },
                                    "passportNo": {
                                        "type": "string"
                                    },
                                    "passports": {
                                        "type": "string"
                                    },
                                    "avatar": {
                                        "type": "string"
                                    },
                                    "email_signature": {
                                        "type": "string"
                                    },
                                    "primaryPhoneCodeLabel": {
                                        "type": "string"
                                    },
                                    "secondPhoneCodeLabel": {
                                        "type": "string"
                                    },
                                    "criminalDesc": {
                                        "type": "string"
                                    },
                                    "class_student_id": {
                                        "type": "string"
                                    },
                                    "opp_passcode": {
                                        "type": "string"
                                    },
                                    "SF_AccID": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "fullname": {
                                            "type": "string"
                                        },
                                        "student_id": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "mail": {
                                            "type": "string"
                                        },
                                        "gender": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        },
                                        "messagingIDs": {
                                            "type": "string"
                                        },
                                        "previousUkVisas": {
                                            "type": "string"
                                        },
                                        "effectiveAssignments": {
                                            "type": "string"
                                        },
                                        "workExperience": {
                                            "type": "string"
                                        },
                                        "documents": {
                                            "type": "string"
                                        },
                                        "eltQualifications": {
                                            "type": "string"
                                        },
                                        "effectiveRoles": {
                                            "type": "string"
                                        },
                                        "disabilities": {
                                            "type": "string"
                                        },
                                        "qualifications": {
                                            "type": "string"
                                        },
                                        "addresses": {
                                            "type": "string"
                                        },
                                        "preferredContactMethod": {
                                            "type": "string"
                                        },
                                        "studyGaps": {
                                            "type": "string"
                                        },
                                        "contacts": {
                                            "type": "string"
                                        },
                                        "sourceOfStudent": {
                                            "type": "string"
                                        },
                                        "ethnicity": {
                                            "type": "string"
                                        },
                                        "mobileNumber": {
                                            "type": "string"
                                        },
                                        "dateCreated": {
                                            "type": "integer"
                                        },
                                        "postalAddress": {
                                            "type": "string"
                                        },
                                        "sexualOrientation": {
                                            "type": "string"
                                        },
                                        "secondaryMail": {
                                            "type": "string"
                                        },
                                        "nationality": {
                                            "type": "string"
                                        },
                                        "secondPhone": {
                                            "type": "string"
                                        },
                                        "primaryPhoneCode": {
                                            "type": "string"
                                        },
                                        "lastPasswordAttempt": {
                                            "type": "string"
                                        },
                                        "isRefusedVisaUK": {
                                            "type": "string"
                                        },
                                        "secondPhoneCode": {
                                            "type": "string"
                                        },
                                        "isRefusedVisaOther": {
                                            "type": "string"
                                        },
                                        "isNeedVisa": {
                                            "type": "string"
                                        },
                                        "emailOptOut": {
                                            "type": "integer"
                                        },
                                        "isGrantedVisaUK": {
                                            "type": "string"
                                        },
                                        "accountStatus": {
                                            "type": "string"
                                        },
                                        "lastPasswordSet": {
                                            "type": "string"
                                        },
                                        "idmType": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "string"
                                        },
                                        "preferredContactPerson": {
                                            "type": "string"
                                        },
                                        "dateOfBirth": {
                                            "type": "string"
                                        },
                                        "dateOfBirthTx": {
                                            "type": "integer"
                                        },
                                        "phoneOptOut": {
                                            "type": "integer"
                                        },
                                        "telephoneNumber": {
                                            "type": "string"
                                        },
                                        "careLeaver": {
                                            "type": "string"
                                        },
                                        "roles": {
                                            "type": "string"
                                        },
                                        "_rev": {
                                            "type": "string"
                                        },
                                        "genderIdentity": {
                                            "type": "string"
                                        },
                                        "nickname": {
                                            "type": "string"
                                        },
                                        "planFundStudies": {
                                            "type": "string"
                                        },
                                        "stateProvince": {
                                            "type": "string"
                                        },
                                        "criminalRecord": {
                                            "type": "string"
                                        },
                                        "postalCode": {
                                            "type": "string"
                                        },
                                        "localSurname": {
                                            "type": "string"
                                        },
                                        "localForename": {
                                            "type": "string"
                                        },
                                        "vip": {
                                            "type": "string"
                                        },
                                        "vipReason": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "dateUpdated": {
                                            "type": "integer"
                                        },
                                        "religionOrBelief": {
                                            "type": "string"
                                        },
                                        "address2": {
                                            "type": "string"
                                        },
                                        "passwordAttempts": {
                                            "type": "string"
                                        },
                                        "passportNo": {
                                            "type": "string"
                                        },
                                        "passports": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "avatar": {
                                            "type": "string"
                                        },
                                        "email_signature": {
                                            "type": "string"
                                        },
                                        "primaryPhoneCodeLabel": {
                                            "type": "string"
                                        },
                                        "secondPhoneCodeLabel": {
                                            "type": "string"
                                        },
                                        "criminalDesc": {
                                            "type": "string"
                                        },
                                        "class_student_id": {
                                            "type": "string"
                                        },
                                        "opp_passcode": {
                                            "type": "string"
                                        },
                                        "SF_AccID": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users/student-config": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Student config",
                "description": "get student config",
                "parameters": [
                    {
                        "name": "picklists",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "list of pick list you want to get, separate by comma",
                            "type": "string",
                            "example": "vip"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default is empty but y",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vip": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/users/log": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user log",
                "description": "get user log",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "user id",
                            "type": "string",
                            "example": "0000ef05-af26-4f8e-90ec-d0757059e133"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user log information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "logs": {
                                            "properties": {
                                                "results": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "_id": {
                                                                "type": "string"
                                                            },
                                                            "activityId": {
                                                                "type": "string"
                                                            },
                                                            "timestamp": {
                                                                "type": "string"
                                                            },
                                                            "action": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "objectId": {
                                                                "type": "string"
                                                            },
                                                            "rev": {
                                                                "type": "string"
                                                            },
                                                            "rootActionId": {
                                                                "type": "string"
                                                            },
                                                            "parentActionId": {
                                                                "type": "string"
                                                            },
                                                            "requester": {
                                                                "type": "string"
                                                            },
                                                            "before": {
                                                                "type": "string"
                                                            },
                                                            "after": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            },
                                                            "changedFields": {
                                                                "type": "string"
                                                            },
                                                            "passwordChanged": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/adm-cas-documents/issue-download/{id}": {
            "post": {
                "tags": [
                    "AdmCasDocument v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download Admission Cas Document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/adm-cas-documents/issue-email/{id}": {
            "get": {
                "tags": [
                    "AdmCasDocument v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View Admission Cas Document Email Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "AdmCasDocument v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send Admission Cas Document Email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Response when cannot create Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/adm-cas-documents/preview/{id}": {
            "get": {
                "tags": [
                    "AdmCasDocument v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview Admission Cas Document Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/adm-cas-documents/view/{id}": {
            "get": {
                "tags": [
                    "AdmCasDocument v2"
                ],
                "summary": "Class ViewAction",
                "description": "View Admission Cas Document Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/ap-documents/issue-download/{id}": {
            "post": {
                "tags": [
                    "ApDocument v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download AP Document",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/ap-documents/issue-email/{id}": {
            "get": {
                "tags": [
                    "ApDocument v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View AP Email Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    }
                }
            },
            "post": {
                "tags": [
                    "ApDocument v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send AP Email",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Response when cannot create AP Document"
                    }
                }
            }
        },
        "/api/v2/ap-documents/preview/{id}": {
            "get": {
                "tags": [
                    "ApDocument v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview AP Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    }
                }
            }
        },
        "/api/v2/ap-documents/view/{id}": {
            "get": {
                "tags": [
                    "ApDocument v2"
                ],
                "summary": "Class ViewAction",
                "description": "View AP Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/v2/application-workflows/search": {
            "get": {
                "tags": [
                    "Application Workflow"
                ],
                "summary": "Application workflow search api",
                "description": "Application workflow search apis",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "search keywords: application.studyPlan | application.studentUser",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Booking Transfer records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationWorkflow"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/art-and-design-workflows/accepted-notification/{id}": {
            "post": {
                "tags": [
                    "ArtAndDesignWorkflow v2"
                ],
                "summary": "Class AcceptedNotificationAction",
                "description": "Issue Accepted notification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_workflow_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/art-and-design-workflows/interview-request/{id}": {
            "post": {
                "tags": [
                    "ArtAndDesignWorkflow v2"
                ],
                "summary": "Class InterviewNotificationAction",
                "description": "Interview notification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_workflow_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/art-and-design-workflows/panel-request/{id}": {
            "post": {
                "tags": [
                    "ArtAndDesignWorkflow v2"
                ],
                "summary": "Class AcceptedNotificationAction",
                "description": "Issue panel request",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_workflow_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/art-and-design-workflows/rejected-notification/{id}": {
            "post": {
                "tags": [
                    "ArtAndDesignWorkflow v2"
                ],
                "summary": "Class AcceptedNotificationAction",
                "description": "Rejected notification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_workflow_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/booking-transfers/confirmation-letter/{id}": {
            "get": {
                "tags": [
                    "BookingTransfer v2"
                ],
                "description": "Get Booking Transfer confirmation letter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "deleted": {
                                    "type": "integer"
                                },
                                "is-live": {
                                    "type": "integer"
                                },
                                "student_uuid": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "action values that need to be considerred for print or send",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "BookingTransfer v2"
                ],
                "description": "Get Booking Transfer confirmation letter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "deleted": {
                                    "type": "integer"
                                },
                                "is-live": {
                                    "type": "integer"
                                },
                                "student_uuid": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "action values that need to be considerred for print or send",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas/add-to-batch/{id}": {
            "post": {
                "tags": [
                    "CAS v2"
                ],
                "summary": "Class AddToBatchAction",
                "description": "Add CAS to Batch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas/create": {
            "post": {
                "tags": [
                    "CAS v2"
                ],
                "summary": "Class CreateAction",
                "description": "Create CAS",
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas/remove-from-batch/{id}": {
            "post": {
                "tags": [
                    "CAS v2"
                ],
                "summary": "Class RemoveFromBatchAction",
                "description": "Remove CAS From Batch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas/{id}": {
            "get": {
                "tags": [
                    "CAS v2"
                ],
                "summary": "Cas View API",
                "description": "Retrieve Cas id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Cas record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List extra Fields - related models will be returned together with main object",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cas object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cas"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CAS v2"
                ],
                "summary": "Class UpdateAction",
                "description": "Update CAS",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enr-pre-cas-documents/issue-download/{id}": {
            "post": {
                "tags": [
                    "EnrPreCasDocument v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download Enrolment Pre-Arrival Cas Document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enr-pre-cas-documents/issue-email/{id}": {
            "get": {
                "tags": [
                    "EnrPreCasDocument v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View Enrolment Pre-Arrival Cas Document Email Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EnrPreCasDocument v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send Enrolment Pre-Arrival Cas Document Email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Response when cannot create Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enr-pre-cas-documents/preview/{id}": {
            "get": {
                "tags": [
                    "EnrPreCasDocument v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview Enrolment Pre-Arrival Cas Document Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enr-pre-cas-documents/view/{id}": {
            "get": {
                "tags": [
                    "EnrPreCasDocument v2"
                ],
                "summary": "Class ViewAction",
                "description": "View Enrolment Pre-Arrival Cas Document Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas-letter-documents/issue-download/{id}": {
            "post": {
                "tags": [
                    "CasLetterDocuments V2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download CAS Letter PDF",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas Letter"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas-request-forms/issue-download/{id}": {
            "post": {
                "tags": [
                    "CasRequestForm v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download CAS Request Form",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas-request-forms/issue-email/{id}": {
            "get": {
                "tags": [
                    "CasRequestForm v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View CAS Email Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CasRequestForm v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send CAS Request Form Email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "cas_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Response when cannot create Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas-request-forms/preview/{id}": {
            "get": {
                "tags": [
                    "CasRequestForm v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview CAS Request Form Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas-request-forms/view/{id}": {
            "get": {
                "tags": [
                    " v2"
                ],
                "summary": "Class ViewAction",
                "description": "View CAS Request Form Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/digital-learnings/issue-download/{id}": {
            "post": {
                "tags": [
                    "Digital Learning"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download Digital learning Document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Digital Learning"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/digital-learnings/issue-email/{id}": {
            "get": {
                "tags": [
                    "Digital Learning"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View Digital Learning Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Digital Learning"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Digital Learning"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send Digital learning Email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Digital Learning"
                    },
                    "500": {
                        "description": "Response when cannot create Digital Learning"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/digital-learnings/preview/{id}": {
            "get": {
                "tags": [
                    "Digital Learning"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview Digital Learning Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Digital Learning"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/digital-learnings/view/{id}": {
            "get": {
                "tags": [
                    "Digital Learning"
                ],
                "summary": "Class ViewAction",
                "description": "View Digital learning Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Digital Learning"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/disability-workflows/college-decision/{id}": {
            "get": {
                "tags": [
                    "Disability workflow v2"
                ],
                "description": "Send to College for decision",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "workflow id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisabilityEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when workflow not found "
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/disability-workflows/decision-email/{id}": {
            "get": {
                "tags": [
                    "Disability workflow v2"
                ],
                "description": "Record College decision",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "workflow id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "disabilityAdvice",
                        "in": "query",
                        "description": "disabilityAdvice value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disabilityAssessment",
                        "in": "query",
                        "description": "disabilityAssessment value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisabilityEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when workflow not found "
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/disability-workflows/invoke": {
            "post": {
                "tags": [
                    "Disability workflow v2"
                ],
                "description": "Invoke workflow",
                "requestBody": {
                    "description": "raw",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationWorkflow"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when workflow not found "
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/disability-workflows/questionnaire/{id}": {
            "get": {
                "tags": [
                    "Disability workflow v2"
                ],
                "description": "Admission advisor sends questionnaire",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "workflow id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisabilityEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when workflow not found "
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/disability-workflows/student-support-request/{id}": {
            "get": {
                "tags": [
                    "Disability workflow v2"
                ],
                "description": "Receive Support Request from Student",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "workflow id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "selectedNote",
                        "in": "query",
                        "description": "Note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisabilityEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when workflow not found "
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/disability-workflows/student-submit-disability-form/{id}": {
            "post": {
                "tags": [
                    "Disability workflow v2"
                ],
                "description": "Student submit questionnaire",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "workflow id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "note": {
                                        "type": "string"
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "link": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "nameandtag": {
                                                    "type": "string"
                                                },
                                                "_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when workflow not found "
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enrolment-letters/issue-download/{id}": {
            "post": {
                "tags": [
                    "Enrolment Letter v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download Enrolment Letter Document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enrolment-letters/issue-email/{id}": {
            "get": {
                "tags": [
                    "Enrolment Letter v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View Enrolment Letter Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Enrolment Letter v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send Enrolment Letter Email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Non Cas"
                    },
                    "500": {
                        "description": "Response when cannot create Non Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enrolment-letters/preview/{id}": {
            "get": {
                "tags": [
                    "Enrolment Letter v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview Enrolment Letter Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enrolment-letters/view/{id}": {
            "get": {
                "tags": [
                    "Enrolment Letter v2"
                ],
                "summary": "Class ViewAction",
                "description": "View Enrolment Letter Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enrolment-request-forms/issue-download/{id}": {
            "post": {
                "tags": [
                    "Enrolment Request Form v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download Enrolment Request Form Document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enrolment-request-forms/issue-email/{id}": {
            "get": {
                "tags": [
                    "Enrolment Request Form v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View Enrolment Request Form Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Enrolment Request Form v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send Enrolment Request Form Email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Non Cas"
                    },
                    "500": {
                        "description": "Response when cannot create Non Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enrolment-request-forms/preview/{id}": {
            "get": {
                "tags": [
                    "Enrolment Request Form v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview Enrolment Request Form Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/enrolment-request-forms/view/{id}": {
            "get": {
                "tags": [
                    "Enrolment Request Form v2"
                ],
                "summary": "Class ViewAction",
                "description": "View Enrolment Request Form Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/iap-documents/issue-download/{id}": {
            "post": {
                "tags": [
                    "IapDocument v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download AP Document",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/iap-documents/issue-email/{id}": {
            "get": {
                "tags": [
                    "IapDocument v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View IAP Email Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    }
                }
            },
            "post": {
                "tags": [
                    "IapDocument v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send IAP Email",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipient": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 1 <nowhereboy0001@gmail.com>"
                                        }
                                    },
                                    "cc": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 2 <nowhereboy0002@gmail.com>"
                                        }
                                    },
                                    "bcc": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 3 <nowhereboy0003@gmail.com>"
                                        }
                                    },
                                    "title": {
                                        "description": "Class SendEmailAction",
                                        "type": "string",
                                        "example": "Receipt of Freddie Mercury' s application to Northeastern University, Seattle"
                                    },
                                    "body": {
                                        "description": "Class SendEmailAction",
                                        "type": "string",
                                        "example": "abc"
                                    },
                                    "attachments": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {}
                                    },
                                    "params": {
                                        "description": "Class SendEmailAction",
                                        "properties": {
                                            "additionalAttachments": {
                                                "description": "Class SendEmailAction",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "description": "Class SendEmailAction",
                                                            "type": "string",
                                                            "example": "IAP Letter"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Response when cannot create AP Document"
                    }
                }
            }
        },
        "/api/v2/iap-documents/preview/{id}": {
            "get": {
                "tags": [
                    "IapDocument v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview IAP Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/iap-documents/view/{id}": {
            "get": {
                "tags": [
                    "IapDocument v2"
                ],
                "summary": "Class ViewAction",
                "description": "View IAP Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/non-cas-documents/issue-download/{id}": {
            "post": {
                "tags": [
                    "NonCasDocument v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download Non CAS Document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/non-cas-documents/issue-email/{id}": {
            "get": {
                "tags": [
                    "NonCasDocument v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View Cas Email Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "NonCasDocument v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send NonCas Email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Non Cas"
                    },
                    "500": {
                        "description": "Response when cannot create Non Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/non-cas-documents/preview/{id}": {
            "get": {
                "tags": [
                    "NonCasDocument v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview Non Cas Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/non-cas-documents/view/{id}": {
            "get": {
                "tags": [
                    "NonCasDocument v2"
                ],
                "description": "View Non Cas Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/offer-letters/issue-download/{id}": {
            "post": {
                "tags": [
                    "OfferLetter v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download Offer Letter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found offer"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/offer-letters/issue-email/{id}": {
            "get": {
                "tags": [
                    "OfferLetter v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View Offer Letter Email Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found offer"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "OfferLetter v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send Offer Letter Email",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Offer"
                    },
                    "500": {
                        "description": "Response when cannot create offer letter"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/offer-letters/preview/{id}": {
            "get": {
                "tags": [
                    "OfferLetter v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview Admission Offer Document Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found offer letter"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/offer-letters/view/{id}": {
            "get": {
                "tags": [
                    "OfferLetter v2"
                ],
                "summary": "Class ViewAction",
                "description": "View Offer Letter Content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found offer letter"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/scp-documents/issue-download/{id}": {
            "post": {
                "tags": [
                    "ScpDocument v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download SCP Document",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/scp-documents/issue-email/{id}": {
            "get": {
                "tags": [
                    "ScpDocument v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View SCP Email Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    }
                }
            },
            "post": {
                "tags": [
                    "ScpDocument v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send SCP Email",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipient": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 1 <nowhereboy0001@gmail.com>"
                                        }
                                    },
                                    "cc": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 2 <nowhereboy0002@gmail.com>"
                                        }
                                    },
                                    "bcc": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 3 <nowhereboy0003@gmail.com>"
                                        }
                                    },
                                    "title": {
                                        "description": "Class SendEmailAction",
                                        "type": "string",
                                        "example": "Receipt of Freddie Mercury' s application to Northeastern University, Seattle"
                                    },
                                    "body": {
                                        "description": "Class SendEmailAction",
                                        "type": "string",
                                        "example": "abc"
                                    },
                                    "attachments": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {}
                                    },
                                    "params": {
                                        "description": "Class SendEmailAction",
                                        "properties": {
                                            "additionalAttachments": {
                                                "description": "Class SendEmailAction",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "description": "Class SendEmailAction",
                                                            "type": "string",
                                                            "example": "IAP Letter"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Response when cannot create AP Document"
                    }
                }
            }
        },
        "/api/v2/scp-documents/preview/{id}": {
            "get": {
                "tags": [
                    "ScpDocument v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview SCP Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/scp-documents/view/{id}": {
            "get": {
                "tags": [
                    "ScpDocument v2"
                ],
                "summary": "Class ViewAction",
                "description": "View SCP Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/stsv-documents/issue-download/{id}": {
            "post": {
                "tags": [
                    "StsvDocument v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download STSV Document",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/stsv-documents/issue-email/{id}": {
            "get": {
                "tags": [
                    "StsvDocument v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View STSV Email Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    }
                }
            },
            "post": {
                "tags": [
                    "StsvDocument v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send STSV Email",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipient": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 1 <nowhereboy0001@gmail.com>"
                                        }
                                    },
                                    "cc": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 2 <nowhereboy0002@gmail.com>"
                                        }
                                    },
                                    "bcc": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Nowhere Boy 3 <nowhereboy0003@gmail.com>"
                                        }
                                    },
                                    "title": {
                                        "description": "Class SendEmailAction",
                                        "type": "string",
                                        "example": "Receipt of Freddie Mercury' s application to Northeastern University, Seattle"
                                    },
                                    "body": {
                                        "description": "Class SendEmailAction",
                                        "type": "string",
                                        "example": "abc"
                                    },
                                    "attachments": {
                                        "description": "Class SendEmailAction",
                                        "type": "array",
                                        "items": {}
                                    },
                                    "params": {
                                        "description": "Class SendEmailAction",
                                        "properties": {
                                            "additionalAttachments": {
                                                "description": "Class SendEmailAction",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "description": "Class SendEmailAction",
                                                            "type": "string",
                                                            "example": "IAP Letter"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Response when cannot create AP Document"
                    }
                }
            }
        },
        "/api/v2/stsv-documents/preview/{id}": {
            "get": {
                "tags": [
                    "StsvDocument v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview STSV Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/stsv-documents/view/{id}": {
            "get": {
                "tags": [
                    "StsvDocument v2"
                ],
                "summary": "Class ViewAction",
                "description": "View STSV Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/student-invoices/issue-download/{id}": {
            "post": {
                "tags": [
                    "Student Invoice v2"
                ],
                "summary": "Class IssueDownloadAction",
                "description": "Download Student Invoice Document",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/student-invoices/issue-email/{id}": {
            "get": {
                "tags": [
                    "Student Invoice v2"
                ],
                "summary": "Class IssueEmailAction",
                "description": "View Student Invoice Email Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    }
                }
            },
            "post": {
                "tags": [
                    "Student Invoice v2"
                ],
                "summary": "Class SendEmailAction",
                "description": "Send Student Invoice Email",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Response when cannot create AP Document"
                    }
                }
            }
        },
        "/api/v2/student-invoices/preview/{id}": {
            "get": {
                "tags": [
                    "Student Invoice v2"
                ],
                "summary": "Class PreviewAction",
                "description": "Preview Student Invoice Content",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/student-invoices/view/{id}": {
            "get": {
                "tags": [
                    "Student Invoice v2"
                ],
                "summary": "Class ViewAction",
                "description": "View Student Invoice",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/check-workflow/{id}": {
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class CheckWorkflowAction",
                "description": "Check Workflow Action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/describe-workflow/{id}": {
            "get": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class DescribeWorkflowAction",
                "description": "Describe Workflow Action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/download-tfa-submission/{id}": {
            "get": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class DownloadTfaSubmissionAction",
                "description": "Download TFA workflow action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/send-accepted-notification/{id}": {
            "get": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class GetAcceptedNotificationAction",
                "description": "Download TFA Workflow Action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            },
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class SendAcceptedNotificationAction",
                "description": "Send accepted notification action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/send-further-info-requested-notification/{id}": {
            "get": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class GetFurtherInfoRequestedNotificationAction",
                "description": "Get further info requested notification action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            },
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class SendFurtherInfoRequestedNotificationAction",
                "description": "Send further info requested notification action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/send-rejected-notification/{id}": {
            "get": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class CheckWorkflowAction",
                "description": "Get reject notification action",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class SendRejectedNotificationAction",
                "description": "Send reject notification action",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/tfa-workflows/send-to-panel/{id}": {
            "get": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class InfoToPanelAction",
                "description": "Get info to panel action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            },
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class SendToPanelAction",
                "description": "Send to panel action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/invoke/{id}": {
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class InvokeAction",
                "description": "Invoke Action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/receive-tfa-form": {
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class ReceiveTfaFormAction",
                "description": "Receive TFA Form Action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfaworkflows/record-panel-decision/{id}": {
            "get": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class RecordPanelDecisionAction",
                "description": "Get reject notification action",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/tfa-workflows/record-panel-decision/{id}": {
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "description": "Record panel decision action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/tfa-workflows/submit-tfa-form/{id}": {
            "post": {
                "tags": [
                    "TFA Workflow v2"
                ],
                "summary": "Class SubmitTfaFormAction",
                "description": "Submit TFA form action",
                "parameters": [
                    {
                        "name": "iPlanetDirectoryPro",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShortEmailContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Response when cannot found Application Workflow"
                    }
                }
            }
        },
        "/api/v2/applications": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Index API (kss_application)",
                "description": "Get List of Application Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Application** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *Application** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Application** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Application**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Application"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Create API (kss_application)",
                "description": "Create a specific Application and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rank": {
                                        "type": "integer"
                                    },
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "sales_manager_id": {
                                        "type": "string"
                                    },
                                    "cas_team_owner_id": {
                                        "type": "string"
                                    },
                                    "application_owner_id": {
                                        "type": "string"
                                    },
                                    "payment_status": {
                                        "type": "integer"
                                    },
                                    "immigration_status": {
                                        "type": "integer"
                                    },
                                    "application_status": {
                                        "type": "integer"
                                    },
                                    "status_reason": {
                                        "type": "integer"
                                    },
                                    "immigration_category": {
                                        "type": "integer"
                                    },
                                    "have_second_agent": {
                                        "type": "integer"
                                    },
                                    "accept_offer_document": {
                                        "type": "string"
                                    },
                                    "is_issued_offer_letter": {
                                        "type": "integer"
                                    },
                                    "offer_letter_link": {
                                        "type": "string"
                                    },
                                    "is_issued_acceptance_form": {
                                        "type": "integer"
                                    },
                                    "meal_plan_preference": {
                                        "type": "string"
                                    },
                                    "same_gender_accommodation": {
                                        "type": "string"
                                    },
                                    "confirmed_not_required": {
                                        "type": "integer"
                                    },
                                    "accommodation_validity": {
                                        "type": "integer"
                                    },
                                    "temporary_college_name": {
                                        "type": "string"
                                    },
                                    "temporary_start_date": {
                                        "type": "string"
                                    },
                                    "university_id": {
                                        "type": "string"
                                    },
                                    "second_university_id": {
                                        "type": "string"
                                    },
                                    "university_name": {
                                        "type": "string"
                                    },
                                    "university_offer_letter_document": {
                                        "type": "string"
                                    },
                                    "financial_guarantee_document": {
                                        "type": "string"
                                    },
                                    "art_and_design_assessment": {
                                        "type": "string"
                                    },
                                    "art_and_design_advice": {
                                        "type": "string"
                                    },
                                    "university_email": {
                                        "type": "string"
                                    },
                                    "previously_applied_for_direct_entry": {
                                        "type": "string"
                                    },
                                    "direct_entry_liklihood": {
                                        "type": "string"
                                    },
                                    "tfa_assessment": {
                                        "type": "string"
                                    },
                                    "tfa_risk": {
                                        "type": "string"
                                    },
                                    "tfa_advice": {
                                        "type": "string"
                                    },
                                    "cas_request_form_document": {
                                        "type": "string"
                                    },
                                    "is_cas_request_form_letter": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "is_issued_non_cas_letter": {
                                        "type": "integer"
                                    },
                                    "is_issued_stsv_letter": {
                                        "type": "integer"
                                    },
                                    "intent_to_enrol": {
                                        "type": "integer"
                                    },
                                    "post_i20_owner_id": {
                                        "type": "string"
                                    },
                                    "disability_assessment": {
                                        "type": "string"
                                    },
                                    "disability_risk_group": {
                                        "type": "string"
                                    },
                                    "disability_advice": {
                                        "type": "string"
                                    },
                                    "sent_to_enrolment": {
                                        "type": "integer"
                                    },
                                    "is_manually_changed_status": {
                                        "type": "integer"
                                    },
                                    "is_need_visa": {
                                        "type": "integer"
                                    },
                                    "previous_uk_student": {
                                        "type": "integer"
                                    },
                                    "previous_course_level": {
                                        "type": "string"
                                    },
                                    "current_course_comparison": {
                                        "type": "string"
                                    },
                                    "same_or_lower_justification": {
                                        "type": "string"
                                    },
                                    "fee_status": {
                                        "type": "integer"
                                    },
                                    "is_application_complete": {
                                        "type": "integer"
                                    },
                                    "payment_upload_document": {
                                        "type": "string"
                                    },
                                    "payment_proof_date": {
                                        "type": "string"
                                    },
                                    "degree_title": {
                                        "type": "string"
                                    },
                                    "degree_faculty": {
                                        "type": "integer"
                                    },
                                    "degree_fee": {
                                        "type": "number"
                                    },
                                    "degree_overall_selt_requirement": {
                                        "type": "string"
                                    },
                                    "degree_reading_requirement": {
                                        "type": "string"
                                    },
                                    "degree_listening_requirement": {
                                        "type": "string"
                                    },
                                    "degree_writing_requirement": {
                                        "type": "string"
                                    },
                                    "degree_speaking_requirement": {
                                        "type": "string"
                                    },
                                    "accommodation_required": {
                                        "type": "integer"
                                    },
                                    "returning_student": {
                                        "type": "integer"
                                    },
                                    "SF_OppID": {
                                        "type": "integer"
                                    },
                                    "partner_application_id": {
                                        "type": "string"
                                    },
                                    "deferral_status": {
                                        "type": "integer"
                                    },
                                    "english_intended_method": {
                                        "type": "integer"
                                    },
                                    "longer_course": {
                                        "type": "integer"
                                    },
                                    "is_issued_ee_request_form": {
                                        "type": "integer"
                                    },
                                    "is_issued_ee_letter": {
                                        "type": "integer"
                                    },
                                    "learning_mode": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "rank": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "sales_manager_id": {
                                            "type": "string"
                                        },
                                        "cas_team_owner_id": {
                                            "type": "string"
                                        },
                                        "application_owner_id": {
                                            "type": "string"
                                        },
                                        "payment_status": {
                                            "type": "integer"
                                        },
                                        "immigration_status": {
                                            "type": "integer"
                                        },
                                        "application_status": {
                                            "type": "integer"
                                        },
                                        "status_reason": {
                                            "type": "integer"
                                        },
                                        "immigration_category": {
                                            "type": "integer"
                                        },
                                        "have_second_agent": {
                                            "type": "integer"
                                        },
                                        "accept_offer_document": {
                                            "type": "string"
                                        },
                                        "is_issued_offer_letter": {
                                            "type": "integer"
                                        },
                                        "offer_letter_link": {
                                            "type": "string"
                                        },
                                        "is_issued_acceptance_form": {
                                            "type": "integer"
                                        },
                                        "meal_plan_preference": {
                                            "type": "string"
                                        },
                                        "same_gender_accommodation": {
                                            "type": "string"
                                        },
                                        "confirmed_not_required": {
                                            "type": "integer"
                                        },
                                        "accommodation_validity": {
                                            "type": "integer"
                                        },
                                        "temporary_college_name": {
                                            "type": "string"
                                        },
                                        "temporary_start_date": {
                                            "type": "string"
                                        },
                                        "university_id": {
                                            "type": "string"
                                        },
                                        "second_university_id": {
                                            "type": "string"
                                        },
                                        "university_name": {
                                            "type": "string"
                                        },
                                        "university_offer_letter_document": {
                                            "type": "string"
                                        },
                                        "financial_guarantee_document": {
                                            "type": "string"
                                        },
                                        "art_and_design_assessment": {
                                            "type": "string"
                                        },
                                        "art_and_design_advice": {
                                            "type": "string"
                                        },
                                        "university_email": {
                                            "type": "string"
                                        },
                                        "previously_applied_for_direct_entry": {
                                            "type": "string"
                                        },
                                        "direct_entry_liklihood": {
                                            "type": "string"
                                        },
                                        "tfa_assessment": {
                                            "type": "string"
                                        },
                                        "tfa_risk": {
                                            "type": "string"
                                        },
                                        "tfa_advice": {
                                            "type": "string"
                                        },
                                        "cas_request_form_document": {
                                            "type": "string"
                                        },
                                        "is_cas_request_form_letter": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "is_issued_non_cas_letter": {
                                            "type": "integer"
                                        },
                                        "is_issued_stsv_letter": {
                                            "type": "integer"
                                        },
                                        "intent_to_enrol": {
                                            "type": "integer"
                                        },
                                        "post_i20_owner_id": {
                                            "type": "string"
                                        },
                                        "disability_assessment": {
                                            "type": "string"
                                        },
                                        "disability_risk_group": {
                                            "type": "string"
                                        },
                                        "disability_advice": {
                                            "type": "string"
                                        },
                                        "sent_to_enrolment": {
                                            "type": "integer"
                                        },
                                        "is_manually_changed_status": {
                                            "type": "integer"
                                        },
                                        "is_need_visa": {
                                            "type": "integer"
                                        },
                                        "previous_uk_student": {
                                            "type": "integer"
                                        },
                                        "previous_course_level": {
                                            "type": "string"
                                        },
                                        "current_course_comparison": {
                                            "type": "string"
                                        },
                                        "same_or_lower_justification": {
                                            "type": "string"
                                        },
                                        "fee_status": {
                                            "type": "integer"
                                        },
                                        "is_application_complete": {
                                            "type": "integer"
                                        },
                                        "payment_upload_document": {
                                            "type": "string"
                                        },
                                        "payment_proof_date": {
                                            "type": "string"
                                        },
                                        "degree_title": {
                                            "type": "string"
                                        },
                                        "degree_faculty": {
                                            "type": "integer"
                                        },
                                        "degree_fee": {
                                            "type": "number"
                                        },
                                        "degree_overall_selt_requirement": {
                                            "type": "string"
                                        },
                                        "degree_reading_requirement": {
                                            "type": "string"
                                        },
                                        "degree_listening_requirement": {
                                            "type": "string"
                                        },
                                        "degree_writing_requirement": {
                                            "type": "string"
                                        },
                                        "degree_speaking_requirement": {
                                            "type": "string"
                                        },
                                        "accommodation_required": {
                                            "type": "integer"
                                        },
                                        "returning_student": {
                                            "type": "integer"
                                        },
                                        "SF_OppID": {
                                            "type": "integer"
                                        },
                                        "partner_application_id": {
                                            "type": "string"
                                        },
                                        "deferral_status": {
                                            "type": "integer"
                                        },
                                        "english_intended_method": {
                                            "type": "integer"
                                        },
                                        "longer_course": {
                                            "type": "integer"
                                        },
                                        "is_issued_ee_request_form": {
                                            "type": "integer"
                                        },
                                        "is_issued_ee_letter": {
                                            "type": "integer"
                                        },
                                        "learning_mode": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/applications/{id}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Application View API (kss_application)",
                "description": "Get A Specific Application Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application record (kss_application.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Application** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Application**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Update API (kss_application)",
                "description": "Update a specific Application and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application record (kss_application.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rank": {
                                        "type": "integer"
                                    },
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "sales_manager_id": {
                                        "type": "string"
                                    },
                                    "cas_team_owner_id": {
                                        "type": "string"
                                    },
                                    "application_owner_id": {
                                        "type": "string"
                                    },
                                    "payment_status": {
                                        "type": "integer"
                                    },
                                    "immigration_status": {
                                        "type": "integer"
                                    },
                                    "application_status": {
                                        "type": "integer"
                                    },
                                    "status_reason": {
                                        "type": "integer"
                                    },
                                    "immigration_category": {
                                        "type": "integer"
                                    },
                                    "have_second_agent": {
                                        "type": "integer"
                                    },
                                    "accept_offer_document": {
                                        "type": "string"
                                    },
                                    "is_issued_offer_letter": {
                                        "type": "integer"
                                    },
                                    "offer_letter_link": {
                                        "type": "string"
                                    },
                                    "is_issued_acceptance_form": {
                                        "type": "integer"
                                    },
                                    "meal_plan_preference": {
                                        "type": "string"
                                    },
                                    "same_gender_accommodation": {
                                        "type": "string"
                                    },
                                    "confirmed_not_required": {
                                        "type": "integer"
                                    },
                                    "accommodation_validity": {
                                        "type": "integer"
                                    },
                                    "temporary_college_name": {
                                        "type": "string"
                                    },
                                    "temporary_start_date": {
                                        "type": "string"
                                    },
                                    "university_id": {
                                        "type": "string"
                                    },
                                    "second_university_id": {
                                        "type": "string"
                                    },
                                    "university_name": {
                                        "type": "string"
                                    },
                                    "university_offer_letter_document": {
                                        "type": "string"
                                    },
                                    "financial_guarantee_document": {
                                        "type": "string"
                                    },
                                    "art_and_design_assessment": {
                                        "type": "string"
                                    },
                                    "art_and_design_advice": {
                                        "type": "string"
                                    },
                                    "university_email": {
                                        "type": "string"
                                    },
                                    "previously_applied_for_direct_entry": {
                                        "type": "string"
                                    },
                                    "direct_entry_liklihood": {
                                        "type": "string"
                                    },
                                    "tfa_assessment": {
                                        "type": "string"
                                    },
                                    "tfa_risk": {
                                        "type": "string"
                                    },
                                    "tfa_advice": {
                                        "type": "string"
                                    },
                                    "cas_request_form_document": {
                                        "type": "string"
                                    },
                                    "is_cas_request_form_letter": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "is_issued_non_cas_letter": {
                                        "type": "integer"
                                    },
                                    "is_issued_stsv_letter": {
                                        "type": "integer"
                                    },
                                    "intent_to_enrol": {
                                        "type": "integer"
                                    },
                                    "post_i20_owner_id": {
                                        "type": "string"
                                    },
                                    "disability_assessment": {
                                        "type": "string"
                                    },
                                    "disability_risk_group": {
                                        "type": "string"
                                    },
                                    "disability_advice": {
                                        "type": "string"
                                    },
                                    "sent_to_enrolment": {
                                        "type": "integer"
                                    },
                                    "is_manually_changed_status": {
                                        "type": "integer"
                                    },
                                    "is_need_visa": {
                                        "type": "integer"
                                    },
                                    "previous_uk_student": {
                                        "type": "integer"
                                    },
                                    "previous_course_level": {
                                        "type": "string"
                                    },
                                    "current_course_comparison": {
                                        "type": "string"
                                    },
                                    "same_or_lower_justification": {
                                        "type": "string"
                                    },
                                    "fee_status": {
                                        "type": "integer"
                                    },
                                    "is_application_complete": {
                                        "type": "integer"
                                    },
                                    "payment_upload_document": {
                                        "type": "string"
                                    },
                                    "payment_proof_date": {
                                        "type": "string"
                                    },
                                    "degree_title": {
                                        "type": "string"
                                    },
                                    "degree_faculty": {
                                        "type": "integer"
                                    },
                                    "degree_fee": {
                                        "type": "number"
                                    },
                                    "degree_overall_selt_requirement": {
                                        "type": "string"
                                    },
                                    "degree_reading_requirement": {
                                        "type": "string"
                                    },
                                    "degree_listening_requirement": {
                                        "type": "string"
                                    },
                                    "degree_writing_requirement": {
                                        "type": "string"
                                    },
                                    "degree_speaking_requirement": {
                                        "type": "string"
                                    },
                                    "accommodation_required": {
                                        "type": "integer"
                                    },
                                    "returning_student": {
                                        "type": "integer"
                                    },
                                    "SF_OppID": {
                                        "type": "integer"
                                    },
                                    "partner_application_id": {
                                        "type": "string"
                                    },
                                    "deferral_status": {
                                        "type": "integer"
                                    },
                                    "english_intended_method": {
                                        "type": "integer"
                                    },
                                    "longer_course": {
                                        "type": "integer"
                                    },
                                    "is_issued_ee_request_form": {
                                        "type": "integer"
                                    },
                                    "is_issued_ee_letter": {
                                        "type": "integer"
                                    },
                                    "learning_mode": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "rank": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "sales_manager_id": {
                                            "type": "string"
                                        },
                                        "cas_team_owner_id": {
                                            "type": "string"
                                        },
                                        "application_owner_id": {
                                            "type": "string"
                                        },
                                        "payment_status": {
                                            "type": "integer"
                                        },
                                        "immigration_status": {
                                            "type": "integer"
                                        },
                                        "application_status": {
                                            "type": "integer"
                                        },
                                        "status_reason": {
                                            "type": "integer"
                                        },
                                        "immigration_category": {
                                            "type": "integer"
                                        },
                                        "have_second_agent": {
                                            "type": "integer"
                                        },
                                        "accept_offer_document": {
                                            "type": "string"
                                        },
                                        "is_issued_offer_letter": {
                                            "type": "integer"
                                        },
                                        "offer_letter_link": {
                                            "type": "string"
                                        },
                                        "is_issued_acceptance_form": {
                                            "type": "integer"
                                        },
                                        "meal_plan_preference": {
                                            "type": "string"
                                        },
                                        "same_gender_accommodation": {
                                            "type": "string"
                                        },
                                        "confirmed_not_required": {
                                            "type": "integer"
                                        },
                                        "accommodation_validity": {
                                            "type": "integer"
                                        },
                                        "temporary_college_name": {
                                            "type": "string"
                                        },
                                        "temporary_start_date": {
                                            "type": "string"
                                        },
                                        "university_id": {
                                            "type": "string"
                                        },
                                        "second_university_id": {
                                            "type": "string"
                                        },
                                        "university_name": {
                                            "type": "string"
                                        },
                                        "university_offer_letter_document": {
                                            "type": "string"
                                        },
                                        "financial_guarantee_document": {
                                            "type": "string"
                                        },
                                        "art_and_design_assessment": {
                                            "type": "string"
                                        },
                                        "art_and_design_advice": {
                                            "type": "string"
                                        },
                                        "university_email": {
                                            "type": "string"
                                        },
                                        "previously_applied_for_direct_entry": {
                                            "type": "string"
                                        },
                                        "direct_entry_liklihood": {
                                            "type": "string"
                                        },
                                        "tfa_assessment": {
                                            "type": "string"
                                        },
                                        "tfa_risk": {
                                            "type": "string"
                                        },
                                        "tfa_advice": {
                                            "type": "string"
                                        },
                                        "cas_request_form_document": {
                                            "type": "string"
                                        },
                                        "is_cas_request_form_letter": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "is_issued_non_cas_letter": {
                                            "type": "integer"
                                        },
                                        "is_issued_stsv_letter": {
                                            "type": "integer"
                                        },
                                        "intent_to_enrol": {
                                            "type": "integer"
                                        },
                                        "post_i20_owner_id": {
                                            "type": "string"
                                        },
                                        "disability_assessment": {
                                            "type": "string"
                                        },
                                        "disability_risk_group": {
                                            "type": "string"
                                        },
                                        "disability_advice": {
                                            "type": "string"
                                        },
                                        "sent_to_enrolment": {
                                            "type": "integer"
                                        },
                                        "is_manually_changed_status": {
                                            "type": "integer"
                                        },
                                        "is_need_visa": {
                                            "type": "integer"
                                        },
                                        "previous_uk_student": {
                                            "type": "integer"
                                        },
                                        "previous_course_level": {
                                            "type": "string"
                                        },
                                        "current_course_comparison": {
                                            "type": "string"
                                        },
                                        "same_or_lower_justification": {
                                            "type": "string"
                                        },
                                        "fee_status": {
                                            "type": "integer"
                                        },
                                        "is_application_complete": {
                                            "type": "integer"
                                        },
                                        "payment_upload_document": {
                                            "type": "string"
                                        },
                                        "payment_proof_date": {
                                            "type": "string"
                                        },
                                        "degree_title": {
                                            "type": "string"
                                        },
                                        "degree_faculty": {
                                            "type": "integer"
                                        },
                                        "degree_fee": {
                                            "type": "number"
                                        },
                                        "degree_overall_selt_requirement": {
                                            "type": "string"
                                        },
                                        "degree_reading_requirement": {
                                            "type": "string"
                                        },
                                        "degree_listening_requirement": {
                                            "type": "string"
                                        },
                                        "degree_writing_requirement": {
                                            "type": "string"
                                        },
                                        "degree_speaking_requirement": {
                                            "type": "string"
                                        },
                                        "accommodation_required": {
                                            "type": "integer"
                                        },
                                        "returning_student": {
                                            "type": "integer"
                                        },
                                        "SF_OppID": {
                                            "type": "integer"
                                        },
                                        "partner_application_id": {
                                            "type": "string"
                                        },
                                        "deferral_status": {
                                            "type": "integer"
                                        },
                                        "english_intended_method": {
                                            "type": "integer"
                                        },
                                        "longer_course": {
                                            "type": "integer"
                                        },
                                        "is_issued_ee_request_form": {
                                            "type": "integer"
                                        },
                                        "is_issued_ee_letter": {
                                            "type": "integer"
                                        },
                                        "learning_mode": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Delete API (kss_application)",
                "description": "Delete a specific Application",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_application.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/applications/status-checklists/{id}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Application Status Checklist API (kss_application)",
                "description": "Get status checklist of a specific Application",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "application_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-workflows": {
            "get": {
                "tags": [
                    "ApplicationWorkflow"
                ],
                "summary": "Application Workflow Index API (kss_application_workflow)",
                "description": "Get List of Application Workflow Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ApplicationWorkflow** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "reassessment": {
                                    "type": "integer",
                                    "example": "0"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to *ApplicationWorkflow** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationWorkflow** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationWorkflow**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application Workflow records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationWorkflow"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ApplicationWorkflow"
                ],
                "summary": "Application Workflow Create API (kss_application_workflow)",
                "description": "Create a specific Application Workflow and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "executionArn": {
                                        "type": "string"
                                    },
                                    "result": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Workflow object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "executionArn": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-workflows/{id}": {
            "get": {
                "tags": [
                    "ApplicationWorkflow"
                ],
                "summary": "Application Workflow View API (kss_application_workflow)",
                "description": "Get A Specific Application Workflow Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Workflow record (kss_application_workflow.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationWorkflow** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationWorkflow**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Workflow object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationWorkflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ApplicationWorkflow"
                ],
                "summary": "Application Workflow Update API (kss_application_workflow)",
                "description": "Update a specific Application Workflow and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Workflow record (kss_application_workflow.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "executionArn": {
                                        "type": "string"
                                    },
                                    "result": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application Workflow object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "executionArn": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string",
                                            "example": "kss.admin@yopmail.com"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ApplicationWorkflow"
                ],
                "summary": "Application Workflow Delete API (kss_application_partner",
                "description": "Delete a specific Application Workflow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Qualification Note record (kss_application_workflow.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/booking-insurances/confirmation-letter/{id}?action=insuranceHtml": {
            "get": {
                "tags": [
                    "BookingInsurance v2"
                ],
                "summary": "Insurance: Retrieve recipient and mail content",
                "description": "Retrieve recipient and mail content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Booking Insurance record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking Insurance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "recipient": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "cc": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "body": {
                                            "type": "string"
                                        },
                                        "params": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "action": {
                                                    "type": "string"
                                                },
                                                "additionalAttachments": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Booking Item"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/booking-insurances/confirmation-letter/{id}?action=send-insurance": {
            "post": {
                "tags": [
                    "BookingInsurance v2"
                ],
                "summary": "Issue an insurance",
                "description": "Issue an insurance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Booking Insurance record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Input Data for Booking Insurance.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipient": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "cc": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "body": {
                                        "type": "string"
                                    },
                                    "attachments": {
                                        "properties": {
                                            "nameandtag": {
                                                "type": "string"
                                            },
                                            "upload_by": {
                                                "type": "string"
                                            },
                                            "upload_at": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "_id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "link": {
                                                    "type": "string"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "params": {
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "action": {
                                                "type": "string"
                                            },
                                            "additionalAttachments": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "_id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "link": {
                                                            "type": "string"
                                                        },
                                                        "tags": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "nameandtag": {
                                                            "type": "string"
                                                        },
                                                        "upload_by": {
                                                            "type": "string"
                                                        },
                                                        "upload_at": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking Insurance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "source": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Booking Insurance"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/booking-insurances/issue-insurance?action=issue-insurance": {
            "post": {
                "tags": [
                    "BookingInsurance v2"
                ],
                "summary": "Issue bulk insurance",
                "description": "Issue bulk insurance",
                "requestBody": {
                    "description": "Input ListId for Booking Insurance.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "listId": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking Insurance object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "isSuccess": {
                                                        "type": "boolean"
                                                    },
                                                    "studentID": {
                                                        "type": "string"
                                                    },
                                                    "studentName": {
                                                        "type": "string"
                                                    },
                                                    "college": {
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Booking Insurance"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/booking-insurances/issue-insurance?action=preview-insurance": {
            "get": {
                "tags": [
                    "BookingInsurance v2"
                ],
                "summary": "Preview insurance",
                "description": "Preview insurance",
                "parameters": [
                    {
                        "name": "listId[]",
                        "in": "query",
                        "description": "'listId[]' field of insurance record",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking Insurance File"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Booking insurance"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/booking-insurances/issue-insurance?action=view-insurance": {
            "get": {
                "tags": [
                    "BookingInsurance v2"
                ],
                "summary": "Preview insurance",
                "description": "Preview insurance",
                "parameters": [
                    {
                        "name": "listId[]",
                        "in": "query",
                        "description": "'listId[]' field of insurance record",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking Insurance File"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Booking insurance"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas-batches/{id}": {
            "get": {
                "tags": [
                    "Cas Batch"
                ],
                "summary": "Cas Batch View API (kss_cas_batch)",
                "description": "Get A Specific Cas Batch Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Cas Batch record (kss_cas_batch.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CasBatch** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CasBatch**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, batch_name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cas Batch object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasBatch"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas-batch-details/{id}": {
            "get": {
                "tags": [
                    "Cas batch"
                ],
                "summary": "Cas Batch details",
                "description": "Cas batch details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Cas Batch detail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List extra Fields - related models will be returned together with main object",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "List of returned field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "*"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cas Batch Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasBatchDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas Batch Detail"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas-batch-details": {
            "get": {
                "tags": [
                    "Cas batch"
                ],
                "summary": "Cas Batch Details",
                "description": "Cas Batch Details Search by conditions",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Search condition to filter result.",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "cas_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "batch_id": {
                                    "type": "integer",
                                    "example": 1
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit number of result list",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "ex: created_at/-created_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List related models will be returned",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "List of return field",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cas Batch Detail object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasBatchDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Cas Batch Detail"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cas batch"
                ],
                "summary": "Cas Batch Detail Update API",
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "'id' field of Cash Batch Detail record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Input Data for Cash Batch Detail.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CasBatchDetailPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Batch Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasBatchDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cas batch"
                ],
                "summary": "Cas Batch Detail Create API",
                "requestBody": {
                    "description": "Input Data for Cash Batch Detail.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CasBatchDetailPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cas Batch Detail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CasBatchDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v2/cas": {
            "get": {
                "tags": [
                    "CAS v2"
                ],
                "summary": "Cas Index API ",
                "description": "Search Cas  by conditions",
                "parameters": [
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List extra Fields - related models will be returned together with main object",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Search condition to filter result. Check the schema for mo detail",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit number of result list",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pagination",
                        "in": "query",
                        "description": "Indicates whether supporting pagination or not. Default is true",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Controls page number of the resource list",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "List of return field",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cas object with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cas"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found Application"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ActivityDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "activity_type_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "fields_configuration": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AdmissionChecklist": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "ref_id": {
                        "type": "string"
                    },
                    "ref_type": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AdmissionChecklistItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "active": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AdmissionDocumentTemplate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "ref_id": {
                        "type": "integer"
                    },
                    "ref_type": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "issue_path": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "college_ref_code": {
                        "type": "string"
                    },
                    "university_ref_code": {
                        "type": "string"
                    },
                    "program_type_ref_code": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AdmissionStatusFlow": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "active": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ApplicationAccommodationPreference": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "accommodation_reference": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationCompleted_checklist": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "status_id": {
                        "type": "integer"
                    },
                    "admission_checklist_item_id": {
                        "type": "integer"
                    },
                    "check_datetime": {
                        "type": "string"
                    },
                    "completed": {
                        "type": "integer"
                    },
                    "non_blocking": {
                        "type": "integer"
                    },
                    "param": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationDocumentChecklist": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status_title": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "application_status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationFile": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "reference_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "active": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationPartner": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "business_id": {
                        "type": "integer"
                    },
                    "counsellor_id": {
                        "type": "integer"
                    },
                    "liaison_id": {
                        "type": "integer"
                    },
                    "is_main_agent": {
                        "type": "integer"
                    },
                    "partner_type": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationPartnerContact": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "contact_id": {
                        "type": "integer"
                    },
                    "contact_type": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationStatusLog": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "old_status_id": {
                        "type": "integer"
                    },
                    "new_status_id": {
                        "type": "integer"
                    },
                    "status_reference": {
                        "type": "string"
                    },
                    "reason_id": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "provide_alternative_degree": {
                        "type": "string"
                    },
                    "input_url_per_program_offered": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationVisa": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "visa_type": {
                        "type": "integer"
                    },
                    "visa_number": {
                        "type": "string"
                    },
                    "visa_start_date": {
                        "type": "string"
                    },
                    "visa_end_date": {
                        "type": "string"
                    },
                    "visa_document": {
                        "type": "object"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "string"
                    },
                    "created_stage": {
                        "type": "string"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "course_start_date": {
                        "type": "string"
                    },
                    "application": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Application"
                        }
                    },
                    "applicationVisaLogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationVisaLog"
                        }
                    }
                },
                "type": "object"
            },
            "ApplicationVisaItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "visa_type": {
                        "type": "integer"
                    },
                    "visa_number": {
                        "type": "string"
                    },
                    "visa_start_date": {
                        "type": "string"
                    },
                    "visa_end_date": {
                        "type": "string"
                    },
                    "visa_document": {
                        "type": "object"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "string"
                    },
                    "created_stage": {
                        "type": "string"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "course_start_date": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationVisaPayload": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "visa_type": {
                        "type": "integer"
                    },
                    "visa_number": {
                        "type": "string"
                    },
                    "visa_start_date": {
                        "type": "string"
                    },
                    "visa_end_date": {
                        "type": "string"
                    },
                    "visa_document": {
                        "type": "object"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "string"
                    },
                    "created_stage": {
                        "type": "string"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "course_start_date": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationVisaLog": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_visa_id": {
                        "type": "integer"
                    },
                    "action": {
                        "type": "string"
                    },
                    "visa_type": {
                        "type": "integer"
                    },
                    "visa_number": {
                        "type": "string"
                    },
                    "visa_start_date": {
                        "type": "string"
                    },
                    "visa_end_date": {
                        "type": "string"
                    },
                    "course_start_date": {
                        "type": "string"
                    },
                    "visa_document": {
                        "type": "object"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationWorkflow": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "executionArn": {
                        "type": "string"
                    },
                    "result": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApplicationWorkflowTask": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_workflow_id": {
                        "type": "integer"
                    },
                    "task_name": {
                        "type": "string"
                    },
                    "task_status": {
                        "type": "string"
                    },
                    "task_token": {
                        "type": "string"
                    },
                    "start_datetime": {
                        "type": "string"
                    },
                    "end_datetime": {
                        "type": "string"
                    },
                    "input": {
                        "type": "string"
                    },
                    "output": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Cas": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "application_workflow_id": {
                        "type": "integer"
                    },
                    "study_plan_id": {
                        "type": "string"
                    },
                    "cas_number": {
                        "type": "string"
                    },
                    "status_title": {
                        "type": "string"
                    },
                    "status_date": {
                        "type": "string"
                    },
                    "expiry_date": {
                        "type": "string"
                    },
                    "passport_country": {
                        "type": "string"
                    },
                    "passport_number": {
                        "type": "string"
                    },
                    "passport_nationality": {
                        "type": "string"
                    },
                    "passport_country_of_birth": {
                        "type": "string"
                    },
                    "passport_issue_date": {
                        "type": "string"
                    },
                    "passport_expiry_date": {
                        "type": "string"
                    },
                    "passport_country_of_issue": {
                        "type": "string"
                    },
                    "eligibility_selt_required": {
                        "type": "string"
                    },
                    "eligibility_selt_not_required_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "student_surname": {
                        "type": "string"
                    },
                    "student_forename": {
                        "type": "string"
                    },
                    "student_othername": {
                        "type": "string"
                    },
                    "evidence_to_offer": {
                        "type": "string"
                    },
                    "student_gender": {
                        "type": "string"
                    },
                    "is_issued_letter": {
                        "type": "string"
                    },
                    "issued_enr_letter": {
                        "type": "string"
                    },
                    "cas_letter_file": {
                        "type": "string"
                    },
                    "sponsor_note": {
                        "type": "string"
                    },
                    "sponsor_code": {
                        "type": "string"
                    },
                    "student_visa_counselling": {
                        "type": "string"
                    },
                    "student_visa_counselling_notes": {
                        "type": "string"
                    },
                    "cas_detail_export_document": {
                        "type": "string"
                    },
                    "tier_and_category": {
                        "type": "string"
                    },
                    "sponsor_licence_number": {
                        "type": "string"
                    },
                    "sponsor_name": {
                        "type": "string"
                    },
                    "sponsorship_withdrawn": {
                        "type": "string"
                    },
                    "migrant_application_status": {
                        "type": "string"
                    },
                    "date_of_birth": {
                        "type": "string"
                    },
                    "student_id": {
                        "type": "string"
                    },
                    "course_title": {
                        "type": "string"
                    },
                    "course_level": {
                        "type": "string"
                    },
                    "course_start_date": {
                        "type": "string"
                    },
                    "course_end_date": {
                        "type": "string"
                    },
                    "final_date_of_enrolment": {
                        "type": "string"
                    },
                    "full_time": {
                        "type": "string"
                    },
                    "hours_per_week": {
                        "type": "string"
                    },
                    "atas": {
                        "type": "string"
                    },
                    "postgraduate_dean_certificate": {
                        "type": "string"
                    },
                    "full_address": {
                        "type": "string"
                    },
                    "english_language_level_attained": {
                        "type": "string"
                    },
                    "selt_speaking": {
                        "type": "string"
                    },
                    "selt_listening": {
                        "type": "string"
                    },
                    "selt_reading": {
                        "type": "string"
                    },
                    "selt_writing": {
                        "type": "string"
                    },
                    "english_language_test_provider": {
                        "type": "string"
                    },
                    "previous_uk_student": {
                        "type": "string"
                    },
                    "previous_course_level": {
                        "type": "string"
                    },
                    "current_course_comparison": {
                        "type": "string"
                    },
                    "justification": {
                        "type": "string"
                    },
                    "accommodation_provided": {
                        "type": "string"
                    },
                    "first_year_includes_accommodation_or_booking_fees": {
                        "type": "string"
                    },
                    "course_fees": {
                        "type": "string"
                    },
                    "course_fees_paid_to_date": {
                        "type": "string"
                    },
                    "accommodation_fees": {
                        "type": "string"
                    },
                    "accommodation_fees_paid_to_date": {
                        "type": "string"
                    },
                    "boarding_fees_paid_to_date": {
                        "type": "string"
                    },
                    "fees_last_updated": {
                        "type": "string"
                    },
                    "course_type": {
                        "type": "string"
                    },
                    "course_id": {
                        "type": "string"
                    },
                    "applicant_has_work_placement": {
                        "type": "string"
                    },
                    "test_provider_code": {
                        "type": "string"
                    },
                    "two_year_study_limit_check": {
                        "type": "string"
                    },
                    "attendance_average": {
                        "type": "string"
                    },
                    "upload_approval_documents": {
                        "type": "string"
                    },
                    "offer_letter_status": {
                        "type": "string"
                    },
                    "cas_request_status": {
                        "type": "string"
                    },
                    "cas_indicator": {
                        "type": "string"
                    },
                    "place_of_birth": {
                        "type": "string"
                    },
                    "selt_overall": {
                        "type": "string"
                    },
                    "selt_trf": {
                        "type": "string"
                    },
                    "selt_urn": {
                        "type": "string"
                    },
                    "sponsor_address": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CasActivityDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cas_id": {
                        "type": "string"
                    },
                    "user_recorded": {
                        "type": "string"
                    },
                    "recorded_date": {
                        "type": "string"
                    },
                    "activity_type_id": {
                        "type": "integer"
                    },
                    "activity_detail_id": {
                        "type": "integer"
                    },
                    "change_withdrawn_date": {
                        "type": "string"
                    },
                    "new_enrolment_date": {
                        "type": "string"
                    },
                    "previous_notification_date": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CasBatch": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "batch_name": {
                        "type": "string"
                    },
                    "sponsor_code": {
                        "type": "string"
                    },
                    "export_xml": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CasBrp": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cas_id": {
                        "type": "integer"
                    },
                    "brp_number": {
                        "type": "string"
                    },
                    "brp_valid_from": {
                        "type": "string"
                    },
                    "brp_valid_to": {
                        "type": "string"
                    },
                    "brp_type": {
                        "type": "integer"
                    },
                    "brp_status": {
                        "type": "integer"
                    },
                    "brp_location": {
                        "type": "integer"
                    },
                    "brp_initialized": {
                        "type": "integer"
                    },
                    "reported_online": {
                        "type": "string"
                    },
                    "sent_for_correction": {
                        "type": "string"
                    },
                    "appointment_booked": {
                        "type": "string"
                    },
                    "appointment_attended": {
                        "type": "string"
                    },
                    "brp_rc_form_posted": {
                        "type": "string"
                    },
                    "replacement_received": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "permission_to_work": {
                        "type": "integer"
                    },
                    "permission_note": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CasEc": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cas_id": {
                        "type": "integer"
                    },
                    "ec_number": {
                        "type": "integer"
                    },
                    "ec_start_date": {
                        "type": "integer"
                    },
                    "ec_end_date": {
                        "type": "integer"
                    },
                    "ec_document": {
                        "type": "integer"
                    },
                    "visa_type": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CasLog": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cas_id": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "cas_number": {
                        "type": "integer"
                    },
                    "status_title": {
                        "type": "integer"
                    },
                    "status_date": {
                        "type": "integer"
                    },
                    "expiry_date": {
                        "type": "string"
                    },
                    "passport_country": {
                        "type": "string"
                    },
                    "passport_number": {
                        "type": "string"
                    },
                    "passport_nationality": {
                        "type": "string"
                    },
                    "passport_country_of_birth": {
                        "type": "string"
                    },
                    "passport_issue_date": {
                        "type": "string"
                    },
                    "passport_expiry_date": {
                        "type": "string"
                    },
                    "passport_country_of_issue": {
                        "type": "string"
                    },
                    "eligibility_selt_required": {
                        "type": "string"
                    },
                    "eligibility_selt_not_required_reason": {
                        "type": "string"
                    },
                    "study_plan_id": {
                        "type": "string"
                    },
                    "evidence_to_offer": {
                        "type": "string"
                    },
                    "student_gender": {
                        "type": "string"
                    },
                    "student_surname": {
                        "type": "string"
                    },
                    "student_forename": {
                        "type": "string"
                    },
                    "student_othername": {
                        "type": "string"
                    },
                    "is_issued_letter": {
                        "type": "string"
                    },
                    "sponsor_code": {
                        "type": "string"
                    },
                    "cas_letter_file": {
                        "type": "string"
                    },
                    "sponsor_note": {
                        "type": "string"
                    },
                    "cas_detail_export_document": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CasStatusLog": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cas_id": {
                        "type": "integer"
                    },
                    "old_status_title": {
                        "type": "integer"
                    },
                    "new_status_title": {
                        "type": "integer"
                    },
                    "status_reason_title": {
                        "type": "integer"
                    },
                    "status_note": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CasVisa": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cas_id": {
                        "type": "integer"
                    },
                    "visa_application_date": {
                        "type": "integer"
                    },
                    "visa_disicion": {
                        "type": "integer"
                    },
                    "visa_note": {
                        "type": "integer"
                    },
                    "visa_refusal_reason": {
                        "type": "integer"
                    },
                    "visa_type": {
                        "type": "string"
                    },
                    "visa_refusal_date": {
                        "type": "string"
                    },
                    "visa_approved_date": {
                        "type": "string"
                    },
                    "visa_refusal_documents": {
                        "type": "string"
                    },
                    "ar_status": {
                        "type": "string"
                    },
                    "application_method": {
                        "type": "string"
                    },
                    "documents_posted": {
                        "type": "string"
                    },
                    "biometrics_enrolled": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DocumentCheckItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EmailSent": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "reference_id": {
                        "type": "integer"
                    },
                    "reference_class": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "recipient": {
                        "type": "int"
                    },
                    "cc": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "attachments": {
                        "type": "string"
                    },
                    "bcc": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "is_opp": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Status": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "parent_status_id": {
                        "type": "integer"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "reporting_status_group": {
                        "type": "string"
                    },
                    "reporting_status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "student_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "forename": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "mail": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "messagingIDs": {
                        "type": "string"
                    },
                    "previousUkVisas": {
                        "type": "string"
                    },
                    "effectiveAssignments": {
                        "type": "string"
                    },
                    "workExperience": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "string"
                    },
                    "eltQualifications": {
                        "type": "string"
                    },
                    "effectiveRoles": {
                        "type": "string"
                    },
                    "disabilities": {
                        "type": "string"
                    },
                    "qualifications": {
                        "type": "string"
                    },
                    "addresses": {
                        "type": "string"
                    },
                    "preferredContactMethod": {
                        "type": "string"
                    },
                    "studyGaps": {
                        "type": "string"
                    },
                    "contacts": {
                        "type": "string"
                    },
                    "sourceOfStudent": {
                        "type": "string"
                    },
                    "ethnicity": {
                        "type": "string"
                    },
                    "mobileNumber": {
                        "type": "string"
                    },
                    "dateCreated": {
                        "type": "integer"
                    },
                    "postalAddress": {
                        "type": "string"
                    },
                    "sexualOrientation": {
                        "type": "string"
                    },
                    "secondaryMail": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "secondPhone": {
                        "type": "string"
                    },
                    "primaryPhoneCode": {
                        "type": "string"
                    },
                    "lastPasswordAttempt": {
                        "type": "string"
                    },
                    "isRefusedVisaUK": {
                        "type": "string"
                    },
                    "secondPhoneCode": {
                        "type": "string"
                    },
                    "isRefusedVisaOther": {
                        "type": "string"
                    },
                    "isNeedVisa": {
                        "type": "string"
                    },
                    "emailOptOut": {
                        "type": "integer"
                    },
                    "isGrantedVisaUK": {
                        "type": "string"
                    },
                    "accountStatus": {
                        "type": "string"
                    },
                    "lastPasswordSet": {
                        "type": "string"
                    },
                    "idmType": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "preferredContactPerson": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "dateOfBirthTx": {
                        "type": "integer"
                    },
                    "phoneOptOut": {
                        "type": "integer"
                    },
                    "telephoneNumber": {
                        "type": "string"
                    },
                    "careLeaver": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "string"
                    },
                    "_rev": {
                        "type": "string"
                    },
                    "genderIdentity": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "planFundStudies": {
                        "type": "string"
                    },
                    "stateProvince": {
                        "type": "string"
                    },
                    "criminalRecord": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "localSurname": {
                        "type": "string"
                    },
                    "localForename": {
                        "type": "string"
                    },
                    "vip": {
                        "type": "string"
                    },
                    "vipReason": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "dateUpdated": {
                        "type": "integer"
                    },
                    "religionOrBelief": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "passwordAttempts": {
                        "type": "string"
                    },
                    "passportNo": {
                        "type": "string"
                    },
                    "passports": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "email_signature": {
                        "type": "string"
                    },
                    "primaryPhoneCodeLabel": {
                        "type": "string"
                    },
                    "secondPhoneCodeLabel": {
                        "type": "string"
                    },
                    "criminalDesc": {
                        "type": "string"
                    },
                    "class_student_id": {
                        "type": "string"
                    },
                    "opp_passcode": {
                        "type": "string"
                    },
                    "SF_AccID": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Application": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "student_uuid": {
                        "type": "string"
                    },
                    "sales_manager_id": {
                        "type": "string"
                    },
                    "cas_team_owner_id": {
                        "type": "string"
                    },
                    "application_owner_id": {
                        "type": "string"
                    },
                    "payment_status": {
                        "type": "integer"
                    },
                    "immigration_status": {
                        "type": "integer"
                    },
                    "application_status": {
                        "type": "integer"
                    },
                    "status_reason": {
                        "type": "integer"
                    },
                    "immigration_category": {
                        "type": "integer"
                    },
                    "have_second_agent": {
                        "type": "integer"
                    },
                    "accept_offer_document": {
                        "type": "string"
                    },
                    "is_issued_offer_letter": {
                        "type": "integer"
                    },
                    "offer_letter_link": {
                        "type": "string"
                    },
                    "is_issued_acceptance_form": {
                        "type": "integer"
                    },
                    "meal_plan_preference": {
                        "type": "string"
                    },
                    "same_gender_accommodation": {
                        "type": "string"
                    },
                    "confirmed_not_required": {
                        "type": "integer"
                    },
                    "accommodation_validity": {
                        "type": "integer"
                    },
                    "temporary_college_name": {
                        "type": "string"
                    },
                    "temporary_start_date": {
                        "type": "string"
                    },
                    "university_id": {
                        "type": "string"
                    },
                    "second_university_id": {
                        "type": "string"
                    },
                    "university_name": {
                        "type": "string"
                    },
                    "university_offer_letter_document": {
                        "type": "string"
                    },
                    "financial_guarantee_document": {
                        "type": "string"
                    },
                    "art_and_design_assessment": {
                        "type": "string"
                    },
                    "art_and_design_advice": {
                        "type": "string"
                    },
                    "university_email": {
                        "type": "string"
                    },
                    "previously_applied_for_direct_entry": {
                        "type": "string"
                    },
                    "direct_entry_liklihood": {
                        "type": "string"
                    },
                    "tfa_assessment": {
                        "type": "string"
                    },
                    "tfa_risk": {
                        "type": "string"
                    },
                    "tfa_advice": {
                        "type": "string"
                    },
                    "cas_request_form_document": {
                        "type": "string"
                    },
                    "is_cas_request_form_letter": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_issued_non_cas_letter": {
                        "type": "integer"
                    },
                    "is_issued_stsv_letter": {
                        "type": "integer"
                    },
                    "intent_to_enrol": {
                        "type": "integer"
                    },
                    "post_i20_owner_id": {
                        "type": "string"
                    },
                    "disability_assessment": {
                        "type": "string"
                    },
                    "disability_risk_group": {
                        "type": "string"
                    },
                    "disability_advice": {
                        "type": "string"
                    },
                    "sent_to_enrolment": {
                        "type": "integer"
                    },
                    "is_manually_changed_status": {
                        "type": "integer"
                    },
                    "is_need_visa": {
                        "type": "integer"
                    },
                    "previous_uk_student": {
                        "type": "integer"
                    },
                    "previous_course_level": {
                        "type": "string"
                    },
                    "current_course_comparison": {
                        "type": "string"
                    },
                    "same_or_lower_justification": {
                        "type": "string"
                    },
                    "fee_status": {
                        "type": "integer"
                    },
                    "is_application_complete": {
                        "type": "integer"
                    },
                    "payment_upload_document": {
                        "type": "string"
                    },
                    "payment_proof_date": {
                        "type": "string"
                    },
                    "degree_title": {
                        "type": "string"
                    },
                    "degree_faculty": {
                        "type": "integer"
                    },
                    "degree_fee": {
                        "type": "number"
                    },
                    "degree_overall_selt_requirement": {
                        "type": "string"
                    },
                    "degree_reading_requirement": {
                        "type": "string"
                    },
                    "degree_listening_requirement": {
                        "type": "string"
                    },
                    "degree_writing_requirement": {
                        "type": "string"
                    },
                    "degree_speaking_requirement": {
                        "type": "string"
                    },
                    "accommodation_required": {
                        "type": "integer"
                    },
                    "returning_student": {
                        "type": "integer"
                    },
                    "SF_OppID": {
                        "type": "integer"
                    },
                    "partner_application_id": {
                        "type": "string"
                    },
                    "deferral_status": {
                        "type": "integer"
                    },
                    "english_intended_method": {
                        "type": "integer"
                    },
                    "longer_course": {
                        "type": "integer"
                    },
                    "is_issued_ee_request_form": {
                        "type": "integer"
                    },
                    "is_issued_ee_letter": {
                        "type": "integer"
                    },
                    "learning_mode": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CasBatchDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cas_id": {
                        "type": "integer"
                    },
                    "batch_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CasBatchDetailPayload": {
                "required": [
                    "cas_id",
                    "batch_id"
                ],
                "properties": {
                    "cas_id": {
                        "type": "integer",
                        "example": 116170
                    },
                    "batch_id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "DisabilityEmailContent": {
                "properties": {
                    "recipient": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Nowhere Boy 1 <nowhereboy0001@gmail.com>"
                        }
                    },
                    "cc": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Nowhere Boy 2 <nowhereboy0002@gmail.com>"
                        }
                    },
                    "bcc": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Nowhere Boy 3 <nowhereboy0003@gmail.com>"
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "The title of email"
                    },
                    "body": {
                        "type": "string",
                        "example": "abc"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {}
                    },
                    "params": {
                        "properties": {
                            "additionalAttachments": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Letter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EmailContent": {
                "properties": {
                    "recipient": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Nowhere Boy 1 <nowhereboy0001@gmail.com>"
                        }
                    },
                    "cc": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Nowhere Boy 2 <nowhereboy0002@gmail.com>"
                        }
                    },
                    "bcc": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Nowhere Boy 3 <nowhereboy0003@gmail.com>"
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "The title of email"
                    },
                    "body": {
                        "type": "string",
                        "example": "abc"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {}
                    },
                    "params": {
                        "properties": {
                            "additionalAttachments": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Letter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ShortEmailContent": {
                "properties": {
                    "recipient": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Nowhere Boy 1 <nowhereboy0001@gmail.com>"
                        }
                    },
                    "cc": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Nowhere Boy 2 <nowhereboy0002@gmail.com>"
                        }
                    },
                    "title": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string",
                        "example": "abc"
                    },
                    "params": {
                        "properties": {
                            "additionalAttachments": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Letter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "description": "logged user token, You can got that one from KSS3 application",
                "name": "iPlanetDirectoryPro",
                "in": "header"
            }
        }
    }
}