{
    "openapi": "3.0.0",
    "info": {
        "title": "Master Data Microservice",
        "description": "Master Data Microservice APIs",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8083",
            "description": "dev server"
        },
        {
            "url": "https://master-data-apple-pub.kss-dev.kapintdc.com",
            "description": "Apple server"
        },
        {
            "url": "https://master-data-carrot-pub.kss-dev.kapintdc.com",
            "description": "Carrot server"
        },
        {
            "url": "https://master-data-banana-pub.kss-dev.kapintdc.com",
            "description": "Banana server"
        },
        {
            "url": "https://master-data.kss-uat.kapintdc.com",
            "description": "UAT server"
        }
    ],
    "paths": {
        "/api/v1/businesses/check-delete/{id}": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Business View API (kss_business)",
                "description": "Get A Specific Business Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Business record (kss_business.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/business-contacts/check-delete/{id}": {
            "get": {
                "tags": [
                    "BusinessContact"
                ],
                "summary": "BusinessContact View API (kss_business_contact)",
                "description": "Get A Specific BusinessContact Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the BusinessContact record (kss_business_contact.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BusinessContact object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/college-booking-items/get-pick-list": {
            "get": {
                "tags": [
                    "CollegeBookingItem"
                ],
                "summary": "CollegeBookingItem View API (kss_college_booking_item)",
                "description": "Get A Specific CollegeBookingItem Record",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of the CollegeBookingItem record (kss_college_booking_item.type)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CollegeBookingItem records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "type": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "college_id": {
                                                        "type": "integer"
                                                    },
                                                    "college_sponsor_code": {
                                                        "type": "string"
                                                    },
                                                    "transfer_rate": {
                                                        "type": "string"
                                                    },
                                                    "created_by": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    },
                                                    "modified_by": {
                                                        "type": "string"
                                                    },
                                                    "modified_at": {
                                                        "type": "string"
                                                    },
                                                    "fee": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "duration_of_course_min": {
                                                        "type": "integer"
                                                    },
                                                    "duration_of_course_max": {
                                                        "type": "integer"
                                                    },
                                                    "duration_of_insurance": {
                                                        "type": "integer"
                                                    },
                                                    "item_code": {
                                                        "type": "string"
                                                    },
                                                    "item_category": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/configurations/student-config": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration View API (kss_configuration)",
                "description": "Get A Specific Configuration Record",
                "parameters": [
                    {
                        "name": "picklists",
                        "in": "query",
                        "description": "The ID of the Configuration record (kss_configuration.id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "salutation,birth-gender"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Configuration records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "salutation": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "birth-gender": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/transfer-operators": {
            "get": {
                "tags": [
                    "TransferOperator"
                ],
                "summary": "TransferOperator Index API (kss_transfer_operator)",
                "description": "Get List of TransferOperator Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **TransferOperator** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **TransferOperator** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TransferOperator** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **TransferOperator**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TransferOperator records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransferOperator"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TransferOperator"
                ],
                "summary": "Transfer Operator Create API (kss_transfer_operator)",
                "description": "Create a specific Transfer Operator and related object",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "contact_detail": {
                                        "type": "string"
                                    },
                                    "status_title": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transfer Operator object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "contact_detail": {
                                            "type": "string"
                                        },
                                        "status_title": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/transfer-operators/{id}": {
            "get": {
                "tags": [
                    "TransferOperator"
                ],
                "summary": "TransferOperator View API (kss_transfer_operator)",
                "description": "Get A Specific TransferOperator Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the TransferOperator record (kss_transfer_operator.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TransferOperator** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **TransferOperator**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransferOperator object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferOperator"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TransferOperator"
                ],
                "summary": "Transfer Operator Update API (kss_transfer_operator)",
                "description": "Update a specific Transfer Operator and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Transfer Operator record (kss_transfer_operator.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes and extra attributes (EA)**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "contact_detail": {
                                        "type": "string"
                                    },
                                    "status_title": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transfer Operator object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "contact_detail": {
                                            "type": "string"
                                        },
                                        "status_title": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/address-type": {
            "get": {
                "tags": [
                    "AddressType"
                ],
                "summary": "Address Type Index API (kss_addresstype)",
                "description": "Get List of Address Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **AddressType** schema to\n*fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **AddressType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AddressType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AddressType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of AddressType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AddressType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/address-type/{id}": {
            "get": {
                "tags": [
                    "AddressType"
                ],
                "summary": "AddressType View API (kss_addresstype)",
                "description": "Get A Specific AddressType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the AddressType record (kss_addresstype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AddressType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AddressType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AddressType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/address-type/search": {
            "get": {
                "tags": [
                    "AddressType"
                ],
                "summary": "AddressType Index API (kss_addresstype)",
                "description": "Get List of AddressType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **AddressType** schema to\n*fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **AddressType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AddressType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AddressType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of AddressType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AddressType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/ar-status": {
            "get": {
                "tags": [
                    "ArStatus"
                ],
                "summary": "Ar Status Index API (kss_arstatus)",
                "description": "Get List of Ar Status Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ArStatus** schema to\n*fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ArStatus** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ArStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ArStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ArStatus records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ArStatus"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/ar-status/{id}": {
            "get": {
                "tags": [
                    "ArStatus"
                ],
                "summary": "ArStatus View API (kss_arstatus)",
                "description": "Get A Specific ArStatus Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ArStatus record (kss_arstatus.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ArStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ArStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ArStatus object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArStatus"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/ar-status/search": {
            "get": {
                "tags": [
                    "ArStatus"
                ],
                "summary": "ArStatus Index API (kss_arstatus)",
                "description": "Get List of ArStatus Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ArStatus** schema to\n*fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ArStatus** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ArStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ArStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ArStatus records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ArStatus"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/birth-gender": {
            "get": {
                "tags": [
                    "BirthGender"
                ],
                "summary": "Birth Gender Index API (kss_birthgender)",
                "description": "Get List of Birth Gender Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BirthGender** schema to\n*fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BirthGender** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BirthGender** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BirthGender**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BirthGender records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BirthGender"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/birth-gender/{id}": {
            "get": {
                "tags": [
                    "BirthGender"
                ],
                "summary": "BirthGender View API (kss_birthgender)",
                "description": "Get A Specific BirthGender Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the BirthGender record (kss_birthgender.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BirthGender** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BirthGender**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BirthGender object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BirthGender"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/birth-gender/search": {
            "get": {
                "tags": [
                    "BirthGender"
                ],
                "summary": "BirthGender Index API (kss_birthgender)",
                "description": "Get List of BirthGender Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BirthGender** schema to\n*fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BirthGender** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BirthGender** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BirthGender**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BirthGender records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BirthGender"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-location": {
            "get": {
                "tags": [
                    "BrpLocation"
                ],
                "summary": "Brp Location Index API (kss_brplocation)",
                "description": "Get List of Brp Location Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BrpLocation** schema to\n*fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BrpLocation** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpLocation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpLocation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BrpLocation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BrpLocation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-location/{id}": {
            "get": {
                "tags": [
                    "BrpLocation"
                ],
                "summary": "BrpLocation View API (kss_brplocation)",
                "description": "Get A Specific BrpLocation Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the BrpLocation record (kss_brplocation.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpLocation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpLocation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrpLocation object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrpLocation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-location/search": {
            "get": {
                "tags": [
                    "BrpLocation"
                ],
                "summary": "BrpLocation Index API (kss_brplocation)",
                "description": "Get List of BrpLocation Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BrpLocation** schema to\n*fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BrpLocation** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpLocation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpLocation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BrpLocation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BrpLocation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-status": {
            "get": {
                "tags": [
                    "BrpStatus"
                ],
                "summary": "Brp Status Index API (kss_brpstatus)",
                "description": "Get List of Brp Status Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BrpStatus** schema to\n*fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BrpStatus** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BrpStatus records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BrpStatus"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-status/{id}": {
            "get": {
                "tags": [
                    "BrpStatus"
                ],
                "summary": "BrpStatus View API (kss_brpstatus)",
                "description": "Get A Specific BrpStatus Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the BrpStatus record (kss_brpstatus.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrpStatus object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrpStatus"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-status/search": {
            "get": {
                "tags": [
                    "BrpStatus"
                ],
                "summary": "BrpStatus Index API (kss_brpstatus)",
                "description": "Get List of BrpStatus Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BrpStatus** schema to\n*fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BrpStatus** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BrpStatus records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BrpStatus"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-type": {
            "get": {
                "tags": [
                    "BrpType"
                ],
                "summary": "Brp Type Index API (kss_brptype)",
                "description": "Get List of Brp Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BrpType** schema to\n*fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BrpType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BrpType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BrpType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-type/{id}": {
            "get": {
                "tags": [
                    "BrpType"
                ],
                "summary": "BrpType View API (kss_brptype)",
                "description": "Get A Specific BrpType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the BrpType record (kss_brptype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrpType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrpType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/brp-type/search": {
            "get": {
                "tags": [
                    "BrpType"
                ],
                "summary": "BrpType Index API (kss_brptype)",
                "description": "Get List of BrpType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BrpType** schema to\n* fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BrpType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BrpType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BrpType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BrpType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BrpType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/business-contact": {
            "get": {
                "tags": [
                    "BusinessContact"
                ],
                "summary": "Business Contact Index API (kss_business_contact)",
                "description": "Get List of Business Contact Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BusinessContact** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **BusinessContact** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **BusinessContact** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **BusinessContact**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BusinessContact records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BusinessContact"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/business-contacts/{id}": {
            "get": {
                "tags": [
                    "BusinessContact"
                ],
                "summary": "BusinessContact View API (kss_business_contact)",
                "description": "Get A Specific BusinessContact Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the BusinessContact record (kss_business_contact.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n* Please reference to **BusinessContact** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\n *specific attributes separate by a comma. Please reference to **BusinessContact**\n *to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BusinessContact object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessContact"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "BusinessContact"
                ],
                "summary": "Business Contact Update API (kss_business_contact)",
                "description": "Update a specific Business Contact and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Business Contact record (kss_business_contact.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "primary_phone_code": {
                                        "type": "string"
                                    },
                                    "primary_phone_number": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code": {
                                        "type": "string"
                                    },
                                    "secondary_phone_number": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "job_title": {
                                        "type": "string"
                                    },
                                    "job_function": {
                                        "type": "string"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "primary_phone_code_label": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code_label": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Business Contact object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "business_id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "primary_phone_code": {
                                            "type": "string"
                                        },
                                        "primary_phone_number": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code": {
                                            "type": "string"
                                        },
                                        "secondary_phone_number": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "job_title": {
                                            "type": "string"
                                        },
                                        "job_function": {
                                            "type": "string"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "primary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "applicationPartnerCounsellors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "applicationPartnerLiaisons": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "business": {
                                            "$ref": "#/components/schemas/Business"
                                        },
                                        "status": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BusinessContact"
                ],
                "summary": "Business Contact Delete API (kss_business_contact)",
                "description": "Delete a specific Business Contact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Business Contact record (kss_business_contact.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/business-contacts/search": {
            "get": {
                "tags": [
                    "BusinessContact"
                ],
                "summary": "BusinessContact Index API (kss_business_contact)",
                "description": "Get List of BusinessContact Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **BusinessContact** schema to\n* fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n *put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n *for ASC sort, please reference to **BusinessContact** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n *Please reference to **BusinessContact** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n *specific attributes separate by a comma. Please reference to **BusinessContact**\n *to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BusinessContact records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BusinessContact"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/business-contacts": {
            "post": {
                "tags": [
                    "BusinessContact"
                ],
                "summary": "Business Contact Create API (kss_business_contact)",
                "description": "Create a specific Business Contact and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "primary_phone_code": {
                                        "type": "string"
                                    },
                                    "primary_phone_number": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code": {
                                        "type": "string"
                                    },
                                    "secondary_phone_number": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "job_title": {
                                        "type": "string"
                                    },
                                    "job_function": {
                                        "type": "string"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "primary_phone_code_label": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code_label": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Business Contact object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "business_id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "primary_phone_code": {
                                            "type": "string"
                                        },
                                        "primary_phone_number": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code": {
                                            "type": "string"
                                        },
                                        "secondary_phone_number": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "job_title": {
                                            "type": "string"
                                        },
                                        "job_function": {
                                            "type": "string"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "primary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "applicationPartnerCounsellors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "applicationPartnerLiaisons": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "business": {
                                            "$ref": "#/components/schemas/Business"
                                        },
                                        "status": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/businesses": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Business Index API (kss_business)",
                "description": "Get List of Business Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Business** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n *put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n *for ASC sort, please reference to **Business** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n *Please reference to **Business** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n *specific attributes separate by a comma. Please reference to **Business**\n *to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Business records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Business"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Business Create API (kss_business)",
                "description": "Create a specific Business and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "primary_phone_code": {
                                        "type": "string"
                                    },
                                    "primary_phone_number": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code": {
                                        "type": "string"
                                    },
                                    "secondary_phone_number": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "job_title": {
                                        "type": "string"
                                    },
                                    "job_function": {
                                        "type": "string"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "primary_phone_code_label": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code_label": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Business object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "business_id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "primary_phone_code": {
                                            "type": "string"
                                        },
                                        "primary_phone_number": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code": {
                                            "type": "string"
                                        },
                                        "secondary_phone_number": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "job_title": {
                                            "type": "string"
                                        },
                                        "job_function": {
                                            "type": "string"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "primary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "applicationPartnerCounsellors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "applicationPartnerLiaisons": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "business": {
                                            "$ref": "#/components/schemas/Business"
                                        },
                                        "status": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/businesses/{id}": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Business View API (kss_business)",
                "description": "Get A Specific Business Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Business record (kss_business.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n *Please reference to **Business** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\n *specific attributes separate by a comma. Please reference to **Business**\n *to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Business"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Business"
                ],
                "summary": "Business Update API (kss_business)",
                "description": "Update a specific Business and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Business record (kss_business.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "primary_phone_code": {
                                        "type": "string"
                                    },
                                    "primary_phone_number": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code": {
                                        "type": "string"
                                    },
                                    "secondary_phone_number": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "job_title": {
                                        "type": "string"
                                    },
                                    "job_function": {
                                        "type": "string"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "primary_phone_code_label": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code_label": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Business object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "business_id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "primary_phone_code": {
                                            "type": "string"
                                        },
                                        "primary_phone_number": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code": {
                                            "type": "string"
                                        },
                                        "secondary_phone_number": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "job_title": {
                                            "type": "string"
                                        },
                                        "job_function": {
                                            "type": "string"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "primary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "applicationPartnerCounsellors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "applicationPartnerLiaisons": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "business": {
                                            "$ref": "#/components/schemas/Business"
                                        },
                                        "status": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Business"
                ],
                "summary": "Business Delete API (kss_business)",
                "description": "Delete a specific Business",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Business record (kss_business.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/businesses/search": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Business Index API (kss_business)",
                "description": "Get List of Business Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Business** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\n* put a subtract symbol (-) before a attribute for DESC sort or don't put anything\n* for ASC sort, please reference to **Business** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\n* Please reference to **Business** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\n * specific attributes separate by a comma. Please reference to **Business**\n * to get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Business records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Business"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/care-leaver": {
            "get": {
                "tags": [
                    "CareLeaver"
                ],
                "summary": "Care Leaver Index API (kss_careleaver)",
                "description": "Get List of Care Leaver Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CareLeaver** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CareLeaver** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CareLeaver** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CareLeaver**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CareLeaver records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CareLeaver"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/care-leaver/{id}": {
            "get": {
                "tags": [
                    "CareLeaver"
                ],
                "summary": "CareLeaver View API (kss_careleaver)",
                "description": "Get A Specific CareLeaver Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the CareLeaver record (kss_careleaver.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CareLeaver** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CareLeaver**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CareLeaver object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CareLeaver"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/care-leaver/search": {
            "get": {
                "tags": [
                    "CareLeaver"
                ],
                "summary": "CareLeaver Index API (kss_careleaver)",
                "description": "Get List of CareLeaver Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CareLeaver** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CareLeaver** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CareLeaver** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CareLeaver**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CareLeaver records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CareLeaver"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/college-booking-items": {
            "get": {
                "tags": [
                    "CollegeBookingItem"
                ],
                "summary": "CollegeBookingItem Index API (kss_college_booking_item)",
                "description": "Get List of CollegeBookingItem Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CollegeBookingItem** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CollegeBookingItem** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CollegeBookingItem** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CollegeBookingItem**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CollegeBookingItem records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollegeBookingItem"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CollegeBookingItem"
                ],
                "summary": "CollegeBookingItem Create API (kss_college_booking_item)",
                "description": "Create a specific CollegeBookingItem and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "college_id": {
                                        "type": "integer"
                                    },
                                    "college_sponsor_code": {
                                        "type": "string"
                                    },
                                    "transfer_rate": {
                                        "type": "string"
                                    },
                                    "fee": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "duration_of_course_min": {
                                        "type": "integer"
                                    },
                                    "duration_of_course_max": {
                                        "type": "integer"
                                    },
                                    "duration_of_insurance": {
                                        "type": "integer"
                                    },
                                    "item_code": {
                                        "type": "string"
                                    },
                                    "item_category": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "CollegeBookingItem object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "college_id": {
                                            "type": "integer"
                                        },
                                        "college_sponsor_code": {
                                            "type": "string"
                                        },
                                        "transfer_rate": {
                                            "type": "string"
                                        },
                                        "fee": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "duration_of_course_min": {
                                            "type": "integer"
                                        },
                                        "duration_of_course_max": {
                                            "type": "integer"
                                        },
                                        "duration_of_insurance": {
                                            "type": "integer"
                                        },
                                        "item_code": {
                                            "type": "string"
                                        },
                                        "item_category": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/college-booking-items/{id}": {
            "get": {
                "tags": [
                    "CollegeBookingItem"
                ],
                "summary": "CollegeBookingItem View API (kss_college_booking_item)",
                "description": "Get A Specific CollegeBookingItem Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the CollegeBookingItem record (kss_college_booking_item.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CollegeBookingItem** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CollegeBookingItem**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CollegeBookingItem object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollegeBookingItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CollegeBookingItem"
                ],
                "summary": "CollegeBookingItem Update API (kss_college_booking_item)",
                "description": "Update a specific CollegeBookingItem and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the College Booking Item record (kss_college_booking_item.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "college_id": {
                                        "type": "integer"
                                    },
                                    "college_sponsor_code": {
                                        "type": "string"
                                    },
                                    "transfer_rate": {
                                        "type": "string"
                                    },
                                    "fee": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "duration_of_course_min": {
                                        "type": "integer"
                                    },
                                    "duration_of_course_max": {
                                        "type": "integer"
                                    },
                                    "duration_of_insurance": {
                                        "type": "integer"
                                    },
                                    "item_code": {
                                        "type": "string"
                                    },
                                    "item_category": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "CollegeBookingItem object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "college_id": {
                                            "type": "integer"
                                        },
                                        "college_sponsor_code": {
                                            "type": "string"
                                        },
                                        "transfer_rate": {
                                            "type": "string"
                                        },
                                        "fee": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "duration_of_course_min": {
                                            "type": "integer"
                                        },
                                        "duration_of_course_max": {
                                            "type": "integer"
                                        },
                                        "duration_of_insurance": {
                                            "type": "integer"
                                        },
                                        "item_code": {
                                            "type": "string"
                                        },
                                        "item_category": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CollegeBookingItem"
                ],
                "summary": "CollegeBookingItem Delete API (kss_college_booking_item)",
                "description": "Delete a specific CollegeBookingItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the College Booking Item record (kss_college_booking_item.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/college-booking-items/search": {
            "get": {
                "tags": [
                    "CollegeBookingItem"
                ],
                "summary": "CollegeBookingItem Index API (kss_college_booking_item)",
                "description": "Get List of CollegeBookingItem Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CollegeBookingItem** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CollegeBookingItem** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CollegeBookingItem** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CollegeBookingItem**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CollegeBookingItem records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollegeBookingItem"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/college-insurance-policies": {
            "get": {
                "tags": [
                    "CollegeInsurancePolicy"
                ],
                "summary": "CollegeInsurancePolicy Index API (kss_college_insurance_policy)",
                "description": "Get List of CollegeInsurancePolicy Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CollegeInsurancePolicy** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CollegeInsurancePolicy** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CollegeInsurancePolicy** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CollegeInsurancePolicy**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CollegeInsurancePolicy records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollegeInsurancePolicy"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/configurations": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Index API (kss_configuration)",
                "description": "Get List of Configuration Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Configuration** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Configuration** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Configuration** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Configuration**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Configuration records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Configuration"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Create API (kss_configuration)",
                "description": "Create a specific Configuration and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "config_name": {
                                        "type": "string"
                                    },
                                    "config_value": {
                                        "type": "string"
                                    },
                                    "config_group": {
                                        "type": "string"
                                    },
                                    "isTFA": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Configuration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "config_name": {
                                            "type": "string"
                                        },
                                        "config_value": {
                                            "type": "string"
                                        },
                                        "config_group": {
                                            "type": "string"
                                        },
                                        "isTFA": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/configurations/{id}": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration View API (kss_configuration)",
                "description": "Get A Specific Configuration Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Configuration record (kss_configuration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Configuration** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Configuration**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Configuration"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Update API (kss_configuration)",
                "description": "Update a specific Configuration and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Configuration record (kss_configuration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "config_name": {
                                        "type": "string"
                                    },
                                    "config_value": {
                                        "type": "string"
                                    },
                                    "config_group": {
                                        "type": "string"
                                    },
                                    "isTFA": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Configuration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "config_name": {
                                            "type": "string"
                                        },
                                        "config_value": {
                                            "type": "string"
                                        },
                                        "config_group": {
                                            "type": "string"
                                        },
                                        "isTFA": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Delete API (kss_configuration)",
                "description": "Delete a specific Configuration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Configuration record (kss_configuration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/configurations/search": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Index API (kss_configuration)",
                "description": "Get List of Configuration Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Configuration** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Configuration** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Configuration** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Configuration**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Configuration records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Configuration"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contact-relationship": {
            "get": {
                "tags": [
                    "ContactRelationship"
                ],
                "summary": "Contact Relationship Index API (kss_contactrelationship)",
                "description": "Get List of Contact Relationship Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ContactRelationship** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ContactRelationship** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ContactRelationship** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ContactRelationship**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ContactRelationship records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactRelationship"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contact-relationship/{id}": {
            "get": {
                "tags": [
                    "ContactRelationship"
                ],
                "summary": "ContactRelationship View API (kss_contactrelationship)",
                "description": "Get A Specific ContactRelationship Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ContactRelationship record (kss_contactrelationship.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ContactRelationship** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ContactRelationship**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContactRelationship object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactRelationship"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contact-relationship/search": {
            "get": {
                "tags": [
                    "ContactRelationship"
                ],
                "summary": "ContactRelationship Index API (kss_contactrelationship)",
                "description": "Get List of ContactRelationship Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ContactRelationship** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ContactRelationship** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ContactRelationship** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ContactRelationship**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ContactRelationship records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactRelationship"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contact-type": {
            "get": {
                "tags": [
                    "ContactType"
                ],
                "summary": "Contact Type Index API (kss_contacttype)",
                "description": "Get List of Contact Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ContactType** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ContactType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ContactType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ContactType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ContactType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contact-type/{id}": {
            "get": {
                "tags": [
                    "ContactType"
                ],
                "summary": "ContactType View API (kss_contacttype)",
                "description": "Get A Specific ContactType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ContactType record (kss_contacttype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ContactType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ContactType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ContactType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/contact-type/search": {
            "get": {
                "tags": [
                    "ContactType"
                ],
                "summary": "ContactType Index API (kss_contacttype)",
                "description": "Get List of ContactType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ContactType** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ContactType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ContactType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ContactType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ContactType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/country": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Country Index API (kss_country)",
                "description": "Get List of Country Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Country** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Country** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Country** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Country**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Country records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Country"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/country/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Country View API (kss_country)",
                "description": "Get A Specific Country Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Country record (kss_country.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Country** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Country**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/country/search": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Country Index API (kss_country)",
                "description": "Get List of Country Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Country** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Country** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Country** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Country**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Country records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Country"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/course-level": {
            "get": {
                "tags": [
                    "CourseLevel"
                ],
                "summary": "Course Level Index API (kss_courselevel)",
                "description": "Get List of Course Level Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CourseLevel** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CourseLevel** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CourseLevel** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CourseLevel**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CourseLevel records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CourseLevel"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/course-level/{id}": {
            "get": {
                "tags": [
                    "CourseLevel"
                ],
                "summary": "CourseLevel View API (kss_courselevel)",
                "description": "Get A Specific CourseLevel Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the CourseLevel record (kss_courselevel.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CourseLevel** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CourseLevel**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CourseLevel object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseLevel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/course-level/search": {
            "get": {
                "tags": [
                    "CourseLevel"
                ],
                "summary": "CourseLevel Index API (kss_courselevel)",
                "description": "Get List of CourseLevel Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CourseLevel** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CourseLevel** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CourseLevel** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CourseLevel**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CourseLevel records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CourseLevel"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/current-course-comparison": {
            "get": {
                "tags": [
                    "CurrentCourseComparison"
                ],
                "summary": "Current Course Comparison Index API (kss_current_course_comparison)",
                "description": "Get List of Current Course Comparison Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CurrentCourseComparison** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CurrentCourseComparison** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CurrentCourseComparison** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CurrentCourseComparison**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CurrentCourseComparison records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CurrentCourseComparison"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/current-course-comparison/{id}": {
            "get": {
                "tags": [
                    "CurrentCourseComparison"
                ],
                "summary": "CurrentCourseComparison View API (kss_current_course_comparison)",
                "description": "Get A Specific CurrentCourseComparison Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the CurrentCourseComparison record (kss_current_course_comparison.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CurrentCourseComparison** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CurrentCourseComparison**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CurrentCourseComparison object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentCourseComparison"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/current-course-comparison/search": {
            "get": {
                "tags": [
                    "CurrentCourseComparison"
                ],
                "summary": "CurrentCourseComparison Index API (kss_current_course_comparison)",
                "description": "Get List of CurrentCourseComparison Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **CurrentCourseComparison** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **CurrentCourseComparison** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **CurrentCourseComparison** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **CurrentCourseComparison**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CurrentCourseComparison records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CurrentCourseComparison"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/disability-type": {
            "get": {
                "tags": [
                    "DisabilityType"
                ],
                "summary": "Disability Type Index API (kss_disabilitytype)",
                "description": "Get List of Disability Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **DisabilityType** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **DisabilityType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DisabilityType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **DisabilityType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of DisabilityType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DisabilityType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/disability-type/{id}": {
            "get": {
                "tags": [
                    "DisabilityType"
                ],
                "summary": "DisabilityType View API (kss_disabilitytype)",
                "description": "Get A Specific DisabilityType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the DisabilityType record (kss_disabilitytype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DisabilityType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **DisabilityType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DisabilityType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisabilityType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/disability-type/search": {
            "get": {
                "tags": [
                    "DisabilityType"
                ],
                "summary": "DisabilityType Index API (kss_disabilitytype)",
                "description": "Get List of DisabilityType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **DisabilityType** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **DisabilityType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **DisabilityType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **DisabilityType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of DisabilityType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DisabilityType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualification-name": {
            "get": {
                "tags": [
                    "EltQualificationName"
                ],
                "summary": "Elt Qualification Name Index API (kss_eltqualificationname)",
                "description": "Get List of Elt Qualification Name Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EltQualificationName** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EltQualificationName** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EltQualificationName** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EltQualificationName**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EltQualificationName records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EltQualificationName"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualification-name/{id}": {
            "get": {
                "tags": [
                    "EltQualificationName"
                ],
                "summary": "EltQualificationName View API (kss_eltqualificationname)",
                "description": "Get A Specific EltQualificationName Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EltQualificationName record (kss_eltqualificationname.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EltQualificationName** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EltQualificationName**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EltQualificationName object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EltQualificationName"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualification-name/search": {
            "get": {
                "tags": [
                    "EltQualificationName"
                ],
                "summary": "EltQualificationName Index API (kss_eltqualificationname)",
                "description": "Get List of EltQualificationName Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EltQualificationName** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EltQualificationName** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EltQualificationName** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EltQualificationName**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EltQualificationName records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EltQualificationName"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualification-type": {
            "get": {
                "tags": [
                    "EltQualificationType"
                ],
                "summary": "Elt Qualification Type Index API (kss_eltqualificationtype)",
                "description": "Get List of Elt Qualification Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EltQualificationType** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EltQualificationType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EltQualificationType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EltQualificationType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EltQualificationType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EltQualificationType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualification-type/{id}": {
            "get": {
                "tags": [
                    "EltQualificationType"
                ],
                "summary": "EltQualificationType View API (kss_eltqualificationtype)",
                "description": "Get A Specific EltQualificationType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EltQualificationType record (kss_eltqualificationtype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EltQualificationType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EltQualificationType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EltQualificationType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EltQualificationType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/elt-qualification-type/search": {
            "get": {
                "tags": [
                    "EltQualificationType"
                ],
                "summary": "EltQualificationType Index API (kss_eltqualificationtype)",
                "description": "Get List of EltQualificationType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EltQualificationType** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EltQualificationType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EltQualificationType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EltQualificationType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EltQualificationType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EltQualificationType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/ethnicity": {
            "get": {
                "tags": [
                    "Ethnicity"
                ],
                "summary": "Ethnicity Index API (kss_ethnicity)",
                "description": "Get List of Ethnicity Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Ethnicity** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Ethnicity** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Ethnicity** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Ethnicity**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Ethnicity records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Ethnicity"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/ethnicity/{id}": {
            "get": {
                "tags": [
                    "Ethnicity"
                ],
                "summary": "Ethnicity View API (kss_ethnicity)",
                "description": "Get A Specific Ethnicity Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Ethnicity record (kss_ethnicity.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Ethnicity** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Ethnicity**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ethnicity object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ethnicity"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/ethnicity/search": {
            "get": {
                "tags": [
                    "Ethnicity"
                ],
                "summary": "Ethnicity Index API (kss_ethnicity)",
                "description": "Get List of Ethnicity Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Ethnicity** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Ethnicity** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Ethnicity** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Ethnicity**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Ethnicity records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Ethnicity"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/fund-information": {
            "get": {
                "tags": [
                    "FundInformation"
                ],
                "summary": "Fund Information Index API (kss_fundinformation)",
                "description": "Get List of Fund Information Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **FundInformation** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **FundInformation** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **FundInformation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **FundInformation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of FundInformation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FundInformation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/fund-information/{id}": {
            "get": {
                "tags": [
                    "FundInformation"
                ],
                "summary": "FundInformation View API (kss_fundinformation)",
                "description": "Get A Specific FundInformation Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the FundInformation record (kss_fundinformation.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **FundInformation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **FundInformation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FundInformation object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FundInformation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/fund-information/search": {
            "get": {
                "tags": [
                    "FundInformation"
                ],
                "summary": "FundInformation Index API (kss_fundinformation)",
                "description": "Get List of FundInformation Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **FundInformation** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **FundInformation** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **FundInformation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **FundInformation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of FundInformation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FundInformation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/gender-identity": {
            "get": {
                "tags": [
                    "GenderIdentity"
                ],
                "summary": "Gender Identity Index API (kss_genderidentity)",
                "description": "Get List of Gender Identity Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **GenderIdentity** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **GenderIdentity** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **GenderIdentity** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **GenderIdentity**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of GenderIdentity records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GenderIdentity"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/gender-identity/{id}": {
            "get": {
                "tags": [
                    "GenderIdentity"
                ],
                "summary": "GenderIdentity View API (kss_genderidentity)",
                "description": "Get A Specific GenderIdentity Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the GenderIdentity record (kss_genderidentity.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **GenderIdentity** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **GenderIdentity**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GenderIdentity object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenderIdentity"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/gender-identity/search": {
            "get": {
                "tags": [
                    "GenderIdentity"
                ],
                "summary": "GenderIdentity Index API (kss_genderidentity)",
                "description": "Get List of GenderIdentity Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **GenderIdentity** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **GenderIdentity** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **GenderIdentity** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **GenderIdentity**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of GenderIdentity records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GenderIdentity"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/group": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Group Index API (kss_group)",
                "description": "Get List of Group Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Group** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Group** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Group** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Group**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Group records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Group"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/group/{id}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Group View API (kss_group)",
                "description": "Get A Specific Group Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Group record (kss_group.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Group** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Group**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/group/search": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Group Index API (kss_group)",
                "description": "Get List of Group Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Group** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Group** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Group** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Group**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Group records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Group"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/id-type": {
            "get": {
                "tags": [
                    "IdType"
                ],
                "summary": "Id Type Index API (kss_idtype)",
                "description": "Get List of Id Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **IdType** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **IdType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **IdType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **IdType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of IdType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/IdType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/id-type/{id}": {
            "get": {
                "tags": [
                    "IdType"
                ],
                "summary": "IdType View API (kss_idtype)",
                "description": "Get A Specific IdType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the IdType record (kss_idtype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **IdType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **IdType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IdType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/id-type/search": {
            "get": {
                "tags": [
                    "IdType"
                ],
                "summary": "IdType Index API (kss_idtype)",
                "description": "Get List of IdType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **IdType** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **IdType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **IdType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **IdType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of IdType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/IdType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/justification": {
            "get": {
                "tags": [
                    "Justification"
                ],
                "summary": "Justification Index API (kss_justification)",
                "description": "Get List of Justification Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Justification** schema to\n*fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Justification** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Justification** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Justification**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Justification records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Justification"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/justification/{id}": {
            "get": {
                "tags": [
                    "Justification"
                ],
                "summary": "Justification View API (kss_justification)",
                "description": "Get A Specific Justification Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Justification record (kss_justification.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Justification** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Justification**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Justification object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Justification"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/justification/search": {
            "get": {
                "tags": [
                    "Justification"
                ],
                "summary": "Justification Index API (kss_justification)",
                "description": "Get List of Justification Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Justification** schema to\n*fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Justification** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Justification** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Justification**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Justification records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Justification"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/nationality": {
            "get": {
                "tags": [
                    "Nationality"
                ],
                "summary": "Nationality Index API (kss_nationality)",
                "description": "Get List of Nationality Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Nationality** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Nationality** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Nationality** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Nationality**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Nationality records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Nationality"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/nationality/{id}": {
            "get": {
                "tags": [
                    "Nationality"
                ],
                "summary": "Nationality View API (kss_nationality)",
                "description": "Get A Specific Nationality Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Nationality record (kss_nationality.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Nationality** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Nationality**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nationality object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Nationality"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/nationality/search": {
            "get": {
                "tags": [
                    "Nationality"
                ],
                "summary": "Nationality Index API (kss_nationality)",
                "description": "Get List of Nationality Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Nationality** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Nationality** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Nationality** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Nationality**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Nationality records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Nationality"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/panel-member": {
            "get": {
                "tags": [
                    "PanelMember"
                ],
                "summary": "Panel Member Index API (kss_panel_member)",
                "description": "Get List of Panel Member Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PanelMember** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **PanelMember** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PanelMember** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PanelMember**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PanelMember records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PanelMember"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/panel-member/{id}": {
            "get": {
                "tags": [
                    "PanelMember"
                ],
                "summary": "PanelMember View API (kss_panel_member)",
                "description": "Get A Specific PanelMember Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the PanelMember record (kss_panel_member.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PanelMember** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PanelMember**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PanelMember object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PanelMember"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/panel-member/search": {
            "get": {
                "tags": [
                    "PanelMember"
                ],
                "summary": "PanelMember Index API (kss_panel_member)",
                "description": "Get List of PanelMember Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PanelMember** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **PanelMember** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PanelMember** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PanelMember**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PanelMember records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PanelMember"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/prefered-contact-method": {
            "get": {
                "tags": [
                    "PreferedContactMethod"
                ],
                "summary": "Preferred Contact Method Index API (kss_preferredcontactmethod)",
                "description": "Get List of Preferred Contact Method Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PreferedContactMethod** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **PreferedContactMethod** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PreferedContactMethod** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PreferedContactMethod**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PreferedContactMethod records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PreferedContactMethod"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/prefered-contact-method/{id}": {
            "get": {
                "tags": [
                    "PreferedContactMethod"
                ],
                "summary": "PreferedContactMethod View API (kss_preferredcontactmethod)",
                "description": "Get A Specific PreferedContactMethod Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the PreferedContactMethod record (kss_preferredcontactmethod.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PreferedContactMethod** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PreferedContactMethod**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PreferedContactMethod object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferedContactMethod"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/prefered-contact-method/search": {
            "get": {
                "tags": [
                    "PreferedContactMethod"
                ],
                "summary": "PreferedContactMethod Index API (kss_preferredcontactmethod)",
                "description": "Get List of PreferedContactMethod Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PreferedContactMethod** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **PreferedContactMethod** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PreferedContactMethod** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PreferedContactMethod**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PreferedContactMethod records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PreferedContactMethod"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/prefered-contact-person-type": {
            "get": {
                "tags": [
                    "PreferedContactPersonType"
                ],
                "summary": "Preferred Contact Person Type Index API (kss_preferedcontactpersontype)",
                "description": "Get List of Preferred Contact Person Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PreferedContactPersonType** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **PreferedContactPersonType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PreferedContactPersonType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PreferedContactPersonType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PreferedContactPersonType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PreferedContactPersonType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/prefered-contact-person-type/{id}": {
            "get": {
                "tags": [
                    "PreferedContactPersonType"
                ],
                "summary": "PreferedContactPersonType View API (kss_preferedcontactpersontype)",
                "description": "Get A Specific PreferedContactPersonType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the PreferedContactPersonType record (kss_preferedcontactpersontype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PreferedContactPersonType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PreferedContactPersonType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PreferedContactPersonType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferedContactPersonType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/prefered-contact-person-type/search": {
            "get": {
                "tags": [
                    "PreferedContactPersonType"
                ],
                "summary": "PreferedContactPersonType Index API (kss_preferedcontactpersontype)",
                "description": "Get List of PreferedContactPersonType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PreferedContactPersonType** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **PreferedContactPersonType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **PreferedContactPersonType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **PreferedContactPersonType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PreferedContactPersonType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PreferedContactPersonType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualification-status": {
            "get": {
                "tags": [
                    "QualificationStatus"
                ],
                "summary": "Qualification Status Index API (kss_qualificationstatus)",
                "description": "Get List of Qualification Status Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **QualificationStatus** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **QualificationStatus** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **QualificationStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **QualificationStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of QualificationStatus records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/QualificationStatus"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualification-status/{id}": {
            "get": {
                "tags": [
                    "QualificationStatus"
                ],
                "summary": "QualificationStatus View API (kss_qualificationstatus)",
                "description": "Get A Specific QualificationStatus Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the QualificationStatus record (kss_qualificationstatus.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **QualificationStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **QualificationStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QualificationStatus object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QualificationStatus"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualification-status/search": {
            "get": {
                "tags": [
                    "QualificationStatus"
                ],
                "summary": "QualificationStatus Index API (kss_qualificationstatus)",
                "description": "Get List of QualificationStatus Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **QualificationStatus** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **QualificationStatus** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **QualificationStatus** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **QualificationStatus**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of QualificationStatus records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/QualificationStatus"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualification-type": {
            "get": {
                "tags": [
                    "QualificationType"
                ],
                "summary": "Qualification Type Index API (kss_qualificationtype)",
                "description": "Get List of Qualification Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **QualificationType** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **QualificationType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **QualificationType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **QualificationType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of QualificationType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/QualificationType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualification-type/{id}": {
            "get": {
                "tags": [
                    "QualificationType"
                ],
                "summary": "QualificationType View API (kss_qualificationtype)",
                "description": "Get A Specific QualificationType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the QualificationType record (kss_qualificationtype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **QualificationType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **QualificationType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QualificationType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QualificationType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/qualification-type/search": {
            "get": {
                "tags": [
                    "QualificationType"
                ],
                "summary": "QualificationType Index API (kss_qualificationtype)",
                "description": "Get List of QualificationType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **QualificationType** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **QualificationType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **QualificationType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **QualificationType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of QualificationType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/QualificationType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/religion-or-belief": {
            "get": {
                "tags": [
                    "ReligionOrBelief"
                ],
                "summary": "Religion Or Belief Index API (kss_religionorbelief)",
                "description": "Get List of Religion Or Belief Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ReligionOrBelief** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ReligionOrBelief** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ReligionOrBelief** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ReligionOrBelief**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ReligionOrBelief records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReligionOrBelief"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/religion-or-belief/{id}": {
            "get": {
                "tags": [
                    "ReligionOrBelief"
                ],
                "summary": "ReligionOrBelief View API (kss_religionorbelief)",
                "description": "Get A Specific ReligionOrBelief Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ReligionOrBelief record (kss_religionorbelief.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ReligionOrBelief** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ReligionOrBelief**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReligionOrBelief object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReligionOrBelief"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/religion-or-belief/search": {
            "get": {
                "tags": [
                    "ReligionOrBelief"
                ],
                "summary": "ReligionOrBelief Index API (kss_religionorbelief)",
                "description": "Get List of ReligionOrBelief Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ReligionOrBelief** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ReligionOrBelief** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ReligionOrBelief** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ReligionOrBelief**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ReligionOrBelief records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReligionOrBelief"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/salutation": {
            "get": {
                "tags": [
                    "Salutation"
                ],
                "summary": "Salutation Index API (kss_salutation)",
                "description": "Get List of Salutation Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Salutation** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Salutation** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Salutation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Salutation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Salutation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Salutation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/salutation/{id}": {
            "get": {
                "tags": [
                    "Salutation"
                ],
                "summary": "Salutation View API (kss_salutation)",
                "description": "Get A Specific Salutation Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Salutation record (kss_salutation.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Salutation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Salutation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salutation object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Salutation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/salutation/search": {
            "get": {
                "tags": [
                    "Salutation"
                ],
                "summary": "Salutation Index API (kss_salutation)",
                "description": "Get List of Salutation Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Salutation** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Salutation** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Salutation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Salutation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Salutation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Salutation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/sexual-orientation": {
            "get": {
                "tags": [
                    "SexualOrientation"
                ],
                "summary": "Sexual Orientation Index API (kss_sexualorientation)",
                "description": "Get List of Sexual Orientation Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **SexualOrientation** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **SexualOrientation** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **SexualOrientation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **SexualOrientation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of SexualOrientation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SexualOrientation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/sexual-orientation/{id}": {
            "get": {
                "tags": [
                    "SexualOrientation"
                ],
                "summary": "SexualOrientation View API (kss_sexualorientation)",
                "description": "Get A Specific SexualOrientation Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the SexualOrientation record (kss_sexualorientation.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **SexualOrientation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **SexualOrientation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SexualOrientation object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SexualOrientation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/sexual-orientation/search": {
            "get": {
                "tags": [
                    "SexualOrientation"
                ],
                "summary": "SexualOrientation Index API (kss_sexualorientation)",
                "description": "Get List of SexualOrientation Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **SexualOrientation** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **SexualOrientation** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **SexualOrientation** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **SexualOrientation**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of SexualOrientation records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SexualOrientation"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-source": {
            "get": {
                "tags": [
                    "StudentSource"
                ],
                "summary": "StudentSource Index API (kss_studentsource)",
                "description": "Get List of StudentSource Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **StudentSource** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **StudentSource** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **StudentSource** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **StudentSource**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of StudentSource records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StudentSource"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-source/{id}": {
            "get": {
                "tags": [
                    "StudentSource"
                ],
                "summary": "StudentSource View API (kss_studentsource)",
                "description": "Get A Specific StudentSource Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the StudentSource record (kss_studentsource.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **StudentSource** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **StudentSource**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StudentSource object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentSource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/student-source/search": {
            "get": {
                "tags": [
                    "StudentSource"
                ],
                "summary": "StudentSource Index API (kss_studentsource)",
                "description": "Get List of StudentSource Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **StudentSource** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **StudentSource** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **StudentSource** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **StudentSource**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of StudentSource records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StudentSource"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/transfer-operator-colleges": {
            "get": {
                "tags": [
                    "TransferOperatorCollege"
                ],
                "summary": "TransferOperatorCollege Index API (kss_transfer_operator_college)",
                "description": "Get List of TransferOperatorCollege Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **TransferOperatorCollege** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **TransferOperatorCollege** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TransferOperatorCollege** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **TransferOperatorCollege**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TransferOperatorCollege records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransferOperatorCollege"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TransferOperatorCollege"
                ],
                "summary": "TransferOperatorCollege Create API (kss_transfer_operator_college)",
                "description": "Create a specific TransferOperatorCollege and related object (if any)",
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "primary_phone_code": {
                                        "type": "string"
                                    },
                                    "primary_phone_number": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code": {
                                        "type": "string"
                                    },
                                    "secondary_phone_number": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "job_title": {
                                        "type": "string"
                                    },
                                    "job_function": {
                                        "type": "string"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "primary_phone_code_label": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code_label": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "TransferOperatorCollege object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "business_id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "primary_phone_code": {
                                            "type": "string"
                                        },
                                        "primary_phone_number": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code": {
                                            "type": "string"
                                        },
                                        "secondary_phone_number": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "job_title": {
                                            "type": "string"
                                        },
                                        "job_function": {
                                            "type": "string"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "primary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "applicationPartnerCounsellors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "applicationPartnerLiaisons": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "business": {
                                            "$ref": "#/components/schemas/TransferOperatorCollege"
                                        },
                                        "status": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/transfer-operator-colleges/{id}": {
            "get": {
                "tags": [
                    "TransferOperatorCollege"
                ],
                "summary": "TransferOperatorCollege View API (kss_transfer_operator_college)",
                "description": "Get A Specific TransferOperatorCollege Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the TransferOperatorCollege record (kss_transfer_operator_college.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TransferOperatorCollege** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **TransferOperatorCollege**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransferOperatorCollege object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferOperatorCollege"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TransferOperatorCollege"
                ],
                "summary": "TransferOperatorCollege Update API (kss_transfer_operator_college)",
                "description": "Update a specific TransferOperatorCollege and related object (if any)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Transfer Operator College record (kss_transfer_operator_college.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object, fill in with right type of value for desired attributes.\n **Please Delete undesired attributes**",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "surname": {
                                        "type": "string"
                                    },
                                    "forename": {
                                        "type": "string"
                                    },
                                    "primary_phone_code": {
                                        "type": "string"
                                    },
                                    "primary_phone_number": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code": {
                                        "type": "string"
                                    },
                                    "secondary_phone_number": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "job_title": {
                                        "type": "string"
                                    },
                                    "job_function": {
                                        "type": "string"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "deleted": {
                                        "type": "integer"
                                    },
                                    "primary_phone_code_label": {
                                        "type": "string"
                                    },
                                    "secondary_phone_code_label": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "TransferOperatorCollege object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "business_id": {
                                            "type": "integer",
                                            "example": "success"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "surname": {
                                            "type": "string"
                                        },
                                        "forename": {
                                            "type": "string"
                                        },
                                        "primary_phone_code": {
                                            "type": "string"
                                        },
                                        "primary_phone_number": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code": {
                                            "type": "string"
                                        },
                                        "secondary_phone_number": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "job_title": {
                                            "type": "string"
                                        },
                                        "job_function": {
                                            "type": "string"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "integer"
                                        },
                                        "primary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "secondary_phone_code_label": {
                                            "type": "string"
                                        },
                                        "applicationPartnerCounsellors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "applicationPartnerLiaisons": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "business": {
                                            "$ref": "#/components/schemas/TransferOperatorCollege"
                                        },
                                        "status": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TransferOperatorCollege"
                ],
                "summary": "TransferOperatorCollege Delete API (kss_transfer_operator_college)",
                "description": "Delete a specific TransferOperatorCollege",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Transfer Operator College record (kss_transfer_operator_college.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/transfer-operator-colleges/search": {
            "get": {
                "tags": [
                    "TransferOperatorCollege"
                ],
                "summary": "TransferOperatorCollege Index API (kss_transfer_operator_college)",
                "description": "Get List of TransferOperatorCollege Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **TransferOperatorCollege** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **TransferOperatorCollege** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TransferOperatorCollege** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **TransferOperatorCollege**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TransferOperatorCollege records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransferOperatorCollege"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/transfer-operators/search": {
            "get": {
                "tags": [
                    "TransferOperator"
                ],
                "summary": "TransferOperator Index API (kss_transfer_operator)",
                "description": "Get List of TransferOperator Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **TransferOperator** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **TransferOperator** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **TransferOperator** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **TransferOperator**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of TransferOperator records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransferOperator"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/vip": {
            "get": {
                "tags": [
                    "Vip"
                ],
                "summary": "Vip Index API (kss_vip)",
                "description": "Get List of Vip Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Vip** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Vip** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Vip** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Vip**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Vip records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vip"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/vip/{id}": {
            "get": {
                "tags": [
                    "Vip"
                ],
                "summary": "Vip View API (kss_vip)",
                "description": "Get A Specific Vip Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Vip record (kss_vip.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Vip** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Vip**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vip object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vip"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/vip/search": {
            "get": {
                "tags": [
                    "Vip"
                ],
                "summary": "Vip Index API (kss_vip)",
                "description": "Get List of Vip Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Vip** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Vip** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Vip** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Vip**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Vip records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vip"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-decision": {
            "get": {
                "tags": [
                    "VisaDecision"
                ],
                "summary": "Visa Decision Index API (kss_visadecision)",
                "description": "Get List of Visa Decision Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **VisaDecision** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **VisaDecision** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaDecision** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaDecision**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VisaDecision records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VisaDecision"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-decision/{id}": {
            "get": {
                "tags": [
                    "VisaDecision"
                ],
                "summary": "VisaDecision View API (kss_visadecision)",
                "description": "Get A Specific VisaDecision Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the VisaDecision record (kss_visadecision.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaDecision** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaDecision**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VisaDecision object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisaDecision"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-decision/search": {
            "get": {
                "tags": [
                    "VisaDecision"
                ],
                "summary": "VisaDecision Index API (kss_visadecision)",
                "description": "Get List of VisaDecision Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **VisaDecision** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **VisaDecision** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaDecision** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaDecision**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VisaDecision records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VisaDecision"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-refusal-reason": {
            "get": {
                "tags": [
                    "VisaRefusalReason"
                ],
                "summary": "Visa Refusal Reason Index API (kss_visarefusalreason)",
                "description": "Get List of Visa Refusal Reason Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **VisaRefusalReason** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **VisaRefusalReason** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaRefusalReason** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaRefusalReason**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VisaRefusalReason records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VisaRefusalReason"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-refusal-reason/{id}": {
            "get": {
                "tags": [
                    "VisaRefusalReason"
                ],
                "summary": "VisaRefusalReason View API (kss_visarefusalreason)",
                "description": "Get A Specific VisaRefusalReason Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the VisaRefusalReason record (kss_visarefusalreason.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaRefusalReason** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaRefusalReason**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VisaRefusalReason object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisaRefusalReason"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-refusal-reason/search": {
            "get": {
                "tags": [
                    "VisaRefusalReason"
                ],
                "summary": "VisaRefusalReason Index API (kss_visarefusalreason)",
                "description": "Get List of VisaRefusalReason Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **VisaRefusalReason** schema to\n * fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **VisaRefusalReason** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaRefusalReason** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaRefusalReason**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VisaRefusalReason records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VisaRefusalReason"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-type": {
            "get": {
                "tags": [
                    "VisaType"
                ],
                "summary": "Visa Type Index API (kss_visatype)",
                "description": "Get List of Visa Type Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **VisaType** schema to\n * fill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **VisaType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VisaType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VisaType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-type/{id}": {
            "get": {
                "tags": [
                    "VisaType"
                ],
                "summary": "VisaType View API (kss_visatype)",
                "description": "Get A Specific VisaType Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the VisaType record (kss_visatype.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "VisaType object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisaType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/visa-type/search": {
            "get": {
                "tags": [
                    "VisaType"
                ],
                "summary": "VisaType Index API (kss_visatype)",
                "description": "Get List of VisaType Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **VisaType** schema to\n* fill in correct type of attribute, leave empty to return an empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **VisaType** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **VisaType** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **VisaType**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VisaType records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VisaType"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AddressType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ArStatus": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BirthGender": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "titleRefs": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BrpLocation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BrpStatus": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BrpType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Business": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "lookup_name": {
                        "type": "string"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "local_name": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "account_number": {
                        "type": "string"
                    },
                    "address_1": {
                        "type": "string"
                    },
                    "address_2": {
                        "type": "string"
                    },
                    "town": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "phone_code": {
                        "type": "string"
                    },
                    "phone_code_label": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "only_contact_agent": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "applicationPartners": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "businessStatus": {
                        "$ref": "#/components/schemas/Configuration"
                    },
                    "countryDetail": {
                        "$ref": "#/components/schemas/Country"
                    }
                },
                "type": "object"
            },
            "BusinessContact": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "business_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "forename": {
                        "type": "string"
                    },
                    "primary_phone_code": {
                        "type": "string"
                    },
                    "primary_phone_number": {
                        "type": "string"
                    },
                    "secondary_phone_code": {
                        "type": "string"
                    },
                    "secondary_phone_number": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "job_title": {
                        "type": "string"
                    },
                    "job_function": {
                        "type": "string"
                    },
                    "status_id": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "integer"
                    },
                    "primary_phone_code_label": {
                        "type": "string"
                    },
                    "secondary_phone_code_label": {
                        "type": "string"
                    },
                    "applicationPartnerCounsellors": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "applicationPartnerLiaisons": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "business": {
                        "$ref": "#/components/schemas/Business"
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "CareLeaver": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CollegeBookingItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "college_id": {
                        "type": "integer"
                    },
                    "college_sponsor_code": {
                        "type": "string"
                    },
                    "transfer_rate": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "fee": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "duration_of_course_min": {
                        "type": "integer"
                    },
                    "duration_of_course_max": {
                        "type": "integer"
                    },
                    "duration_of_insurance": {
                        "type": "integer"
                    },
                    "item_code": {
                        "type": "string"
                    },
                    "item_category": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CollegeInsurancePolicy": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "college_id": {
                        "type": "integer"
                    },
                    "college_sponsor_code": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string"
                    },
                    "policy_number": {
                        "type": "string"
                    },
                    "policy_document": {
                        "type": "string"
                    },
                    "statement_of_insurance": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "soi_china_translation": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Configuration": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "config_name": {
                        "type": "string"
                    },
                    "config_value": {
                        "type": "string"
                    },
                    "config_group": {
                        "type": "string"
                    },
                    "isTFA": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ContactRelationship": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "displayFields": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Country": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "isoKey": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "isoNationality": {
                        "type": "string"
                    },
                    "isSanctioned": {
                        "type": "integer"
                    },
                    "isTFA": {
                        "type": "integer"
                    },
                    "phoneCode": {
                        "type": "string"
                    },
                    "phoneCodeLabel": {
                        "type": "string"
                    },
                    "termlyPayment": {
                        "type": "integer"
                    },
                    "sfCountryId": {
                        "type": "string"
                    },
                    "starrezCountryId": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "valueLVRPL": {
                        "type": "string"
                    },
                    "valueNOTTM": {
                        "type": "string"
                    },
                    "valueNOTRE": {
                        "type": "string"
                    },
                    "valueHESA": {
                        "type": "string"
                    },
                    "isDegreeCountry": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CourseLevel": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CurrentCourseComparison": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DisabilityType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EltQualificationName": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "grade": {
                        "type": "string"
                    },
                    "trf": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    },
                    "documentLink": {
                        "type": "string"
                    },
                    "verificationLink": {
                        "type": "string"
                    },
                    "testDate": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EltQualificationType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Ethnicity": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FundInformation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GenderIdentity": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Group": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IdType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Justification": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Nationality": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "isoKey": {
                        "type": "string"
                    },
                    "sfNationalityId": {
                        "type": "string"
                    },
                    "starrezNationalityId": {
                        "type": "integer"
                    },
                    "valueNOTTM": {
                        "type": "string"
                    },
                    "valueNOTRE": {
                        "type": "string"
                    },
                    "valueHESA": {
                        "type": "string"
                    },
                    "valueLVRPL": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PanelMember": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "group_id": {
                        "type": "integer"
                    },
                    "college_sponsor_code": {
                        "type": "string"
                    },
                    "group": {
                        "$ref": "#/components/schemas/Group"
                    }
                },
                "type": "object"
            },
            "PanelMemberUser": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "panel_member_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "panelMember": {
                        "$ref": "#/components/schemas/PanelMember"
                    }
                },
                "type": "object"
            },
            "PreferedContactMethod": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PreferedContactPersonType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QualificationStatus": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QualificationType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReligionOrBelief": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Salutation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SexualOrientation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StatusMapping": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status_title": {
                        "type": "string"
                    },
                    "item_code": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StudentSource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Subject": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "sf_task_name": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Category"
                    }
                },
                "type": "object"
            },
            "TransferOperator": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "contact_detail": {
                        "type": "string"
                    },
                    "status_title": {
                        "type": "integer"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TransferOperatorCollege": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "transfer_operator_id": {
                        "type": "integer"
                    },
                    "college_name": {
                        "type": "string"
                    },
                    "transferOperator": {
                        "$ref": "#/components/schemas/TransferOperator"
                    }
                },
                "type": "object"
            },
            "UserGroup": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "group_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "group": {
                        "$ref": "#/components/schemas/Group"
                    }
                },
                "type": "object"
            },
            "Vip": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VisaDecision": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VisaRefusalReason": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VisaType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "description": "logged user token, You can got that one from KSS3 application",
                "name": "iPlanetDirectoryPro",
                "in": "header"
            }
        }
    },
    "externalDocs": {
        "description": "Yii2 Rest document for more information about 'fields, _withs' parameter below",
        "url": "https://www.yiiframework.com/doc/guide/2.0/en/rest-resources"
    }
}