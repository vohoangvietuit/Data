{
    "openapi": "3.0.0",
    "info": {
        "title": "Enrollment Microservice",
        "description": "Enrollment Microservice APIs",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8082",
            "description": "Local"
        },
        {
            "url": "https://enrolment-apple-pub.kss-dev.kapintdc.com",
            "description": "Apple"
        },
        {
            "url": "https://enrolment-carrot-pub.kss-dev.kapintdc.com",
            "description": "Carrot"
        },
        {
            "url": "https://enrolment-banana-pub.kss-dev.kapintdc.com",
            "description": "Banana"
        },
        {
            "url": "https://enrolment.kss-uat.kapintdc.com",
            "description": "UAT"
        }
    ],
    "paths": {
        "/api/v1/documents/presigned-url": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get pre-signed url from S3",
                "parameters": [
                    {
                        "name": "link",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/download-document": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Download S3 Document by link or name",
                "description": "Download S3 Document",
                "parameters": [
                    {
                        "name": "link",
                        "in": "query",
                        "description": "link of Document",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of Document",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/upload-document": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Upload Document to s3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "referenceId": {
                                        "type": "integer"
                                    },
                                    "referenceType": {
                                        "type": "string",
                                        "example": "Name"
                                    },
                                    "tag": {
                                        "type": "string",
                                        "example": "Name"
                                    },
                                    "payload": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "filename"
                                        },
                                        "filename": {
                                            "type": "string",
                                            "example": "fileUrl"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/documents/zip": {
            "get": {
                "tags": [
                    "Document"
                ],
                "description": "Download zip of Document by link or name",
                "parameters": [
                    {
                        "name": "link",
                        "in": "path",
                        "description": "link",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "raw",
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "A PDF file",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Response when cannot found offer"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolments/email-template": {
            "post": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment Email Template API",
                "description": "Send Email",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "description": "email content",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Send Email Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolments/timetable-search": {
            "get": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment search API (kss_enrolment)",
                "description": "Search Enrolment",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Enrolment** schema to\nfill in correct type of attribute, **institution_id** and **award_id** is required.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": true,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "institution_id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "award_id": {
                                    "type": "integer",
                                    "example": "1011"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "__filters",
                        "in": "query",
                        "description": "Options to filter records, teaching_start_from and teaching_start_to is required",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "teaching_start_from": {
                                    "type": "string",
                                    "example": "2018/01/01"
                                },
                                "teaching_start_to": {
                                    "type": "string",
                                    "example": "2020/10/10"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Enrolment** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -application_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Enrolment** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Enrolment**\nto get right attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, application_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Enrolment records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Enrolment"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolments/{id}": {
            "get": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment View API (kss_enrolment)",
                "description": "Get A Specific Enrolment Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Enrolment record (kss_enrolment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 401
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Enrolment** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Enrolment**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, application_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enrolment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Enrolment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment Update API (kss_enrolment)",
                "description": "Update a specific Enrolment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Enrolment record (kss_partner.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "payment_status": {
                                        "type": "integer"
                                    },
                                    "payment_status_date": {
                                        "type": "string"
                                    },
                                    "immigration_status": {
                                        "type": "integer"
                                    },
                                    "immigration_status_date": {
                                        "type": "string"
                                    },
                                    "application_status_title": {
                                        "type": "string"
                                    },
                                    "application_status_date": {
                                        "type": "string"
                                    },
                                    "immigration_category": {
                                        "type": "integer"
                                    },
                                    "application_university_email": {
                                        "type": "string"
                                    },
                                    "application_university_id": {
                                        "type": "string"
                                    },
                                    "application_second_university_id": {
                                        "type": "string"
                                    },
                                    "have_second_agent": {
                                        "type": "string"
                                    },
                                    "enrol_date": {
                                        "type": "string"
                                    },
                                    "enrolment_status": {
                                        "type": "integer"
                                    },
                                    "status_reason": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "college_country": {
                                        "type": "string"
                                    },
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "institution_name": {
                                        "type": "string"
                                    },
                                    "program_id": {
                                        "type": "integer"
                                    },
                                    "program_name": {
                                        "type": "string"
                                    },
                                    "program_start_date": {
                                        "type": "string"
                                    },
                                    "program_end_date": {
                                        "type": "string"
                                    },
                                    "program_intake_id": {
                                        "type": "integer"
                                    },
                                    "intake_month_year": {
                                        "type": "string"
                                    },
                                    "progression_institution_id": {
                                        "type": "integer"
                                    },
                                    "season_pid": {
                                        "type": "integer"
                                    },
                                    "entry_level_pid": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "award_title": {
                                        "type": "string"
                                    },
                                    "tutor_uuid": {
                                        "type": "string"
                                    },
                                    "attendance_warning": {
                                        "type": "string"
                                    },
                                    "attendance_warning_posted": {
                                        "type": "string"
                                    },
                                    "enrolment_confirmed": {
                                        "type": "string"
                                    },
                                    "learning_mode": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ApplicationPartner object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "payment_status": {
                                            "type": "integer"
                                        },
                                        "payment_status_date": {
                                            "type": "string"
                                        },
                                        "immigration_status": {
                                            "type": "integer"
                                        },
                                        "immigration_status_date": {
                                            "type": "string"
                                        },
                                        "application_status_title": {
                                            "type": "string"
                                        },
                                        "application_status_date": {
                                            "type": "string"
                                        },
                                        "immigration_category": {
                                            "type": "integer"
                                        },
                                        "application_university_email": {
                                            "type": "string"
                                        },
                                        "application_university_id": {
                                            "type": "string"
                                        },
                                        "application_second_university_id": {
                                            "type": "string"
                                        },
                                        "have_second_agent": {
                                            "type": "string"
                                        },
                                        "enrol_date": {
                                            "type": "string"
                                        },
                                        "enrolment_status": {
                                            "type": "integer"
                                        },
                                        "status_reason": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "college_country": {
                                            "type": "string"
                                        },
                                        "institution_id": {
                                            "type": "integer"
                                        },
                                        "institution_name": {
                                            "type": "string"
                                        },
                                        "program_id": {
                                            "type": "integer"
                                        },
                                        "program_name": {
                                            "type": "string"
                                        },
                                        "program_start_date": {
                                            "type": "string"
                                        },
                                        "program_end_date": {
                                            "type": "string"
                                        },
                                        "program_intake_id": {
                                            "type": "integer"
                                        },
                                        "intake_month_year": {
                                            "type": "string"
                                        },
                                        "progression_institution_id": {
                                            "type": "integer"
                                        },
                                        "season_pid": {
                                            "type": "integer"
                                        },
                                        "entry_level_pid": {
                                            "type": "integer"
                                        },
                                        "award_id": {
                                            "type": "integer"
                                        },
                                        "award_title": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "tutor_uuid": {
                                            "type": "string"
                                        },
                                        "attendance_warning": {
                                            "type": "string"
                                        },
                                        "attendance_warning_posted": {
                                            "type": "string"
                                        },
                                        "enrolment_confirmed": {
                                            "type": "string"
                                        },
                                        "learning_mode": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment Delete API (kss_enrolment)",
                "description": "Delete a specific Enrolment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Enrolment record (kss_enrolment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolments/update-award/{id}": {
            "post": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment award API (kss_enrolment)",
                "description": "Update award_id and award_title of a specific Enrolment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Enrolment record (kss_enrolment.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "award_title": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Enrolment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "payment_status": {
                                            "type": "integer"
                                        },
                                        "payment_status_date": {
                                            "type": "string"
                                        },
                                        "immigration_status": {
                                            "type": "integer"
                                        },
                                        "immigration_status_date": {
                                            "type": "string"
                                        },
                                        "application_status_title": {
                                            "type": "string"
                                        },
                                        "application_status_date": {
                                            "type": "string"
                                        },
                                        "immigration_category": {
                                            "type": "integer"
                                        },
                                        "application_university_email": {
                                            "type": "string"
                                        },
                                        "application_university_id": {
                                            "type": "string"
                                        },
                                        "application_second_university_id": {
                                            "type": "string"
                                        },
                                        "have_second_agent": {
                                            "type": "string"
                                        },
                                        "enrol_date": {
                                            "type": "string"
                                        },
                                        "enrolment_status": {
                                            "type": "integer"
                                        },
                                        "status_reason": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "college_country": {
                                            "type": "string"
                                        },
                                        "institution_id": {
                                            "type": "integer"
                                        },
                                        "institution_name": {
                                            "type": "string"
                                        },
                                        "program_id": {
                                            "type": "integer"
                                        },
                                        "program_name": {
                                            "type": "string"
                                        },
                                        "program_start_date": {
                                            "type": "string"
                                        },
                                        "program_end_date": {
                                            "type": "string"
                                        },
                                        "program_intake_id": {
                                            "type": "integer"
                                        },
                                        "intake_month_year": {
                                            "type": "string"
                                        },
                                        "progression_institution_id": {
                                            "type": "integer"
                                        },
                                        "season_pid": {
                                            "type": "integer"
                                        },
                                        "entry_level_pid": {
                                            "type": "integer"
                                        },
                                        "award_id": {
                                            "type": "integer"
                                        },
                                        "award_title": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "tutor_uuid": {
                                            "type": "string"
                                        },
                                        "attendance_warning": {
                                            "type": "string"
                                        },
                                        "attendance_warning_posted": {
                                            "type": "string"
                                        },
                                        "enrolment_confirmed": {
                                            "type": "string"
                                        },
                                        "learning_mode": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolments/update-warning-attendance": {
            "post": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment Update warning attendance API (kss_enrolment)",
                "description": "Update attendance_awarning attendance_warning_posted of a specific Enrolment",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "ID of Enrolment",
                                        "type": "integer"
                                    },
                                    "attendance_warning": {
                                        "type": "string"
                                    },
                                    "attendance_warning_posted": {
                                        "description": "value must be in date format",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "True",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-partners": {
            "get": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner Index API (kss_partner)",
                "description": "Get List of Application Partner Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ApplicationParner** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": "399"
                                },
                                "business_id": {
                                    "type": "integer",
                                    "example": "4385"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ApplicationPartner** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationPartner** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationPartner**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, enrolment_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Application Partner records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApplicationPartner"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner Create API (kss_partner)",
                "description": "Create a specific Application Partner",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "description": "Application parner id",
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "business_id": {
                                            "type": "integer"
                                        },
                                        "counsellor_id": {
                                            "type": "integer"
                                        },
                                        "liaison_id": {
                                            "type": "integer"
                                        },
                                        "is_main_agent": {
                                            "type": "integer"
                                        },
                                        "partner_type": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "List of Application Partner records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "business_id": {
                                            "type": "integer"
                                        },
                                        "counsellor_id": {
                                            "type": "integer"
                                        },
                                        "liaison_id": {
                                            "type": "integer"
                                        },
                                        "is_main_agent": {
                                            "type": "integer"
                                        },
                                        "partner_type": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/application-partners/{id}": {
            "get": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner View API (kss_partner)",
                "description": "Get A Specific Application Partner Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Partner record (kss_partner.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ApplicationPartner** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ApplicationPartner**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, enrolment_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application Partner object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationPartner"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner Update API (kss_partner)",
                "description": "Update a specific Application Partner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Partner record (kss_partner.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "business_id": {
                                        "type": "integer"
                                    },
                                    "counsellor_id": {
                                        "type": "integer"
                                    },
                                    "liaison_id": {
                                        "type": "integer"
                                    },
                                    "is_main_agent": {
                                        "type": "integer"
                                    },
                                    "partner_type": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ApplicationPartner object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "business_id": {
                                            "type": "integer"
                                        },
                                        "counsellor_id": {
                                            "type": "integer"
                                        },
                                        "liaison_id": {
                                            "type": "integer"
                                        },
                                        "is_main_agent": {
                                            "type": "integer"
                                        },
                                        "partner_type": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ApplicationPartner"
                ],
                "summary": "Application Partner Delete API (kss_partner)",
                "description": "Delete a specific Application Partner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Application Partner record (kss_partner.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/audit-trails": {
            "get": {
                "tags": [
                    "AuditTrail"
                ],
                "summary": "Audit Trail Index API (kss_audit_trail)",
                "description": "Get List of Audit Trail Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **AuditTrail** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "2"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **AuditTrail** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -entry_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AuditTrail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AuditTrail**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, entry_id, user_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ReportReceiver records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AuditTrail"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/audit-trails/{id}": {
            "get": {
                "tags": [
                    "AuditTrail"
                ],
                "summary": "Audit Trail View API (kss_audit_trail)",
                "description": "Get A Specific ReportReceiver Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the AuditTrail record (kss_audit_trail.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **AuditTrail** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **AuditTrail**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, entry_id, user_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AuditTrail object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditTrail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/configurations": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Index API (kss_configuration)",
                "description": "Get List of Configuration Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Configuration** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "494"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Configuration** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Configuration** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Configuration**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,config_name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Configuration records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Configuration"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Create API (kss_configuration)",
                "description": "Create a specific Configuration",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "config_name": {
                                        "type": "string"
                                    },
                                    "config_value": {
                                        "type": "string"
                                    },
                                    "config_group": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Configuration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "config_name": {
                                            "type": "string"
                                        },
                                        "config_value": {
                                            "type": "string"
                                        },
                                        "config_group": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/configurations/{id}": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration View API (kss_configuration)",
                "description": "Get A Specific Configuration Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Configuration record (kss_configuration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Configuration** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Configuration**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, config_name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Configuration"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Update API (kss_configuration)",
                "description": "Update a specific Configuration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Configuration record (kss_configuration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "config_name": {
                                        "type": "string"
                                    },
                                    "config_value": {
                                        "type": "string"
                                    },
                                    "config_group": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Configuration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "config_name": {
                                            "type": "string"
                                        },
                                        "config_value": {
                                            "type": "string"
                                        },
                                        "config_group": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration Delete API (kss_configuration)",
                "description": "Delete a specific Configuration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Configuration record (kss_configuration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/configurations/search": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Configuration search API (kss_configuration)",
                "description": "Search Configuration",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Configuration** schema to\nfill in correct type of attribute, leave empty to return empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "494"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Configuration** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -config_name"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Configuration** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Configuration**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, config_name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Configuration records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Configuration"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/e-portfolios": {
            "get": {
                "tags": [
                    "EPortfolio"
                ],
                "summary": "EPortfolio Index API (kss_eportfolio)",
                "description": "Get List of EPortfolio Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EPortfolio** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": "494"
                                },
                                "id": {
                                    "type": "integer",
                                    "example": "110"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EPortfolio** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EPortfolio** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EPortfolio**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, enrolment_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of EPortfolio records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EPortfolio"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EPortfolio"
                ],
                "summary": "EPortfolio Create API (kss_eportfolio)",
                "description": "Create a specific EPortfolio",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "completed": {
                                        "type": "integer"
                                    },
                                    "note": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EPortfolio object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "completed": {
                                            "type": "integer"
                                        },
                                        "note": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/e-portfolios/{id}": {
            "get": {
                "tags": [
                    "EPortfolio"
                ],
                "summary": "EPortfolios View API (kss_eportfolio)",
                "description": "Get A Specific EPortfolios Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EPortfolios record (kss_eportfolio.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EPortfolios** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EPortfolio**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, enrolment_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EPortfolio object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EPortfolio"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EPortfolio"
                ],
                "summary": "EPortfolios Update API (kss_eportfolio)",
                "description": "Update a specific EPortfolios",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EPortfolios record (kss_eportfolio.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "completed": {
                                        "type": "integer"
                                    },
                                    "note": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EPortfolios object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "completed": {
                                            "type": "integer"
                                        },
                                        "note": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EPortfolio"
                ],
                "summary": "EPortfolios Delete API (kss_eportfolio)",
                "description": "Delete a specific EPortfolio",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EPortfolio record (kss_eportfolio.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolments": {
            "get": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment Index API (kss_enrolment)",
                "description": "Get List of Enrolment Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Enrolment** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "401"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Enrolment** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -application_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Enrolment** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Enrolment**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,application_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Enrolment records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Enrolment"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment Create API (kss_enrolment)",
                "description": "Create a specific Enrolment",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "student_uuid": {
                                        "type": "string"
                                    },
                                    "application_id": {
                                        "type": "integer"
                                    },
                                    "payment_status": {
                                        "type": "integer"
                                    },
                                    "payment_status_date": {
                                        "type": "string"
                                    },
                                    "immigration_status": {
                                        "type": "integer"
                                    },
                                    "immigration_status_date": {
                                        "type": "string"
                                    },
                                    "application_status_title": {
                                        "type": "string"
                                    },
                                    "application_status_date": {
                                        "type": "string"
                                    },
                                    "immigration_category": {
                                        "type": "integer"
                                    },
                                    "application_university_email": {
                                        "type": "string"
                                    },
                                    "application_university_id": {
                                        "type": "string"
                                    },
                                    "application_second_university_id": {
                                        "type": "string"
                                    },
                                    "have_second_agent": {
                                        "type": "string"
                                    },
                                    "enrol_date": {
                                        "type": "string"
                                    },
                                    "enrolment_status": {
                                        "type": "integer"
                                    },
                                    "status_reason": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "college_country": {
                                        "type": "string"
                                    },
                                    "institution_id": {
                                        "type": "integer"
                                    },
                                    "institution_name": {
                                        "type": "string"
                                    },
                                    "program_id": {
                                        "type": "integer"
                                    },
                                    "program_name": {
                                        "type": "string"
                                    },
                                    "program_start_date": {
                                        "type": "string"
                                    },
                                    "program_end_date": {
                                        "type": "string"
                                    },
                                    "program_intake_id": {
                                        "type": "integer"
                                    },
                                    "intake_month_year": {
                                        "type": "string"
                                    },
                                    "progression_institution_id": {
                                        "type": "integer"
                                    },
                                    "season_pid": {
                                        "type": "integer"
                                    },
                                    "entry_level_pid": {
                                        "type": "integer"
                                    },
                                    "award_id": {
                                        "type": "integer"
                                    },
                                    "award_title": {
                                        "type": "string"
                                    },
                                    "tutor_uuid": {
                                        "type": "string"
                                    },
                                    "attendance_warning": {
                                        "type": "string"
                                    },
                                    "attendance_warning_posted": {
                                        "type": "string"
                                    },
                                    "enrolment_confirmed": {
                                        "type": "string"
                                    },
                                    "learning_mode": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Enrolment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "student_uuid": {
                                            "type": "string"
                                        },
                                        "application_id": {
                                            "type": "integer"
                                        },
                                        "payment_status": {
                                            "type": "integer"
                                        },
                                        "payment_status_date": {
                                            "type": "string"
                                        },
                                        "immigration_status": {
                                            "type": "integer"
                                        },
                                        "immigration_status_date": {
                                            "type": "string"
                                        },
                                        "application_status_title": {
                                            "type": "string"
                                        },
                                        "application_status_date": {
                                            "type": "string"
                                        },
                                        "immigration_category": {
                                            "type": "integer"
                                        },
                                        "application_university_email": {
                                            "type": "string"
                                        },
                                        "application_university_id": {
                                            "type": "string"
                                        },
                                        "application_second_university_id": {
                                            "type": "string"
                                        },
                                        "have_second_agent": {
                                            "type": "string"
                                        },
                                        "enrol_date": {
                                            "type": "string"
                                        },
                                        "enrolment_status": {
                                            "type": "integer"
                                        },
                                        "status_reason": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "college_country": {
                                            "type": "string"
                                        },
                                        "institution_id": {
                                            "type": "integer"
                                        },
                                        "institution_name": {
                                            "type": "string"
                                        },
                                        "program_id": {
                                            "type": "integer"
                                        },
                                        "program_name": {
                                            "type": "string"
                                        },
                                        "program_start_date": {
                                            "type": "string"
                                        },
                                        "program_end_date": {
                                            "type": "string"
                                        },
                                        "program_intake_id": {
                                            "type": "integer"
                                        },
                                        "intake_month_year": {
                                            "type": "string"
                                        },
                                        "progression_institution_id": {
                                            "type": "integer"
                                        },
                                        "season_pid": {
                                            "type": "integer"
                                        },
                                        "entry_level_pid": {
                                            "type": "integer"
                                        },
                                        "award_id": {
                                            "type": "integer"
                                        },
                                        "award_title": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "tutor_uuid": {
                                            "type": "string"
                                        },
                                        "attendance_warning": {
                                            "type": "string"
                                        },
                                        "attendance_warning_posted": {
                                            "type": "string"
                                        },
                                        "enrolment_confirmed": {
                                            "type": "string"
                                        },
                                        "learning_mode": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolments/search": {
            "get": {
                "tags": [
                    "Enrolment"
                ],
                "summary": "Enrolment search API (kss_enrolment)",
                "description": "Search Enrolment",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Enrolment** schema to\nfill in correct type of attribute, leave empty to return empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "401"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Enrolment** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -application_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Enrolment** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Enrolment**\nto get right attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "id, application_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Enrolment records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Enrolment"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolment-status-logs": {
            "get": {
                "tags": [
                    "EnrolmentStatusLog"
                ],
                "summary": "Enrolment Status Log Index API (kss_enrolment_status_log)",
                "description": "Get List of Enrolment Status Log Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **EnrolmentStatusLog** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "2"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **EnrolmentStatusLog** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EnrolmentStatusLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EnrolmentStatusLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, enrolment_id, reason_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ReportReceiver records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EnrolmentStatusLog"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolment-status-logs/{id}": {
            "get": {
                "tags": [
                    "EnrolmentStatusLog"
                ],
                "summary": "Enrolment Status Log View API (kss_enrolment_status_log)",
                "description": "Get A Specific ReportReceiver Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EnrolmentStatusLog record (enrolment_status_log.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **EnrolmentStatusLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **EnrolmentStatusLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, enrolment_id, reason_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EnrolmentStatusLog object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnrolmentStatusLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/enrolment-status-logs/search": {
            "get": {
                "tags": [
                    "EnrolmentStatusLog"
                ],
                "summary": "Enrolment Status Log search API (kss_enrolment_status_log)",
                "description": "Search Status",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Status** schema to\nfill in correct type of attribute, leave empty to return empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "409"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Status** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, enrolment_id, reason_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Status records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/police-registrations": {
            "get": {
                "tags": [
                    "PoliceRegistration"
                ],
                "summary": "Police Registration Index API (kss_police_registration)",
                "description": "Get List of Police Registration Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PoliceRegistration** schema to\r\nfill in correct type of attribute, leave empty to return all.\r\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "2"
                                },
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": "433"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\r\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\r\nfor ASC sort, please reference to **PoliceRegistration** schema to get correct attributes.\r\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\r\nPlease reference to **PoliceRegistration** to get list of extra attributes.\r\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\r\nspecific attributes separate by a comma. Please reference to **PoliceRegistration**\r\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,enrolment_id, status_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Police Registration records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PoliceRegistration"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "PoliceRegistration"
                ],
                "summary": "Police Registration Create API (kss_police_registration)",
                "description": "Create a specific Police Registration",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "reason_id": {
                                        "type": "integer"
                                    },
                                    "appointment_date": {
                                        "type": "string",
                                        "example": "2020/10/10"
                                    },
                                    "certificate": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Police Registration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "reason_id": {
                                            "type": "integer"
                                        },
                                        "appointment_date": {
                                            "type": "string"
                                        },
                                        "certificate": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/police-registrations/{id}": {
            "get": {
                "tags": [
                    "PoliceRegistration"
                ],
                "summary": "Police Registration View API (kss_police_registration)",
                "description": "Get A Specific Police Registration Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Police Registration record (kss_police_registration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\r\nPlease reference to **PoliceRegistration** to get list of extra attributes.\r\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\r\nspecific attributes separate by a comma. Please reference to **PoliceRegistration**\r\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, enrolment_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Police Registration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PoliceRegistration"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "PoliceRegistration"
                ],
                "summary": "Police Registration Update API (kss_police_registration)",
                "description": "Update a specific Police Registration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Police Registration record (kss_police_registration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enrolment_id": {
                                        "type": "integer"
                                    },
                                    "status_id": {
                                        "type": "integer"
                                    },
                                    "reason_id": {
                                        "type": "integer"
                                    },
                                    "appointment_date": {
                                        "type": "string",
                                        "example": "2020/10/10"
                                    },
                                    "certificate": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Police Registration object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "status_id": {
                                            "type": "integer"
                                        },
                                        "reason_id": {
                                            "type": "integer"
                                        },
                                        "appointment_date": {
                                            "type": "string"
                                        },
                                        "certificate": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        },
                                        "note": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PoliceRegistration"
                ],
                "summary": "Police Registration Delete API (kss_police_registration)",
                "description": "Delete a specific Police Registration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Police Registration record (kss_police_registration.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/police-registrations/search": {
            "get": {
                "tags": [
                    "PoliceRegistration"
                ],
                "summary": "Police Registration search API (kss_police_registration)",
                "description": "Search Police Registration",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **PoliceRegistration** schema to\r\nfill in correct type of attribute, leave empty to return empty object.\r\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "2"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\r\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\r\nfor ASC sort, please reference to **PoliceRegistration** schema to get correct attributes.\r\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\r\nPlease reference to **PoliceRegistration** to get list of extra attributes.\r\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\r\nspecific attributes separate by a comma. Please reference to **PoliceRegistration**\r\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, enrolment_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PoliceRegistration records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PoliceRegistration"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/report-receivers": {
            "get": {
                "tags": [
                    "ReportReceiver"
                ],
                "summary": "Report Receiver Index API (kss_report_receiver)",
                "description": "Get List of ReportReceiver Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ReportReceiver** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "enrolment_id": {
                                    "type": "integer",
                                    "example": "494"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ReportReceiver** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ReportReceiver** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ReportReceiver**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "enrolment_id,value,note"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ReportReceiver records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReportReceiver"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/report-receivers/{id}": {
            "get": {
                "tags": [
                    "ReportReceiver"
                ],
                "summary": "Report Receiver View API (kss_report_receiver)",
                "description": "Get A Specific ReportReceiver Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Enrolment id of the ReportReceiver record (kss_report_receiver.enrolment_id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ReportReceiver** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ReportReceiver**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "enrolment_id, value,note"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReportReceiver object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportReceiver"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ReportReceiver"
                ],
                "summary": "Report Receiver Update API (kss_report_receiver)",
                "description": "Update a specific Report Receiver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The enrolment id of the Report Receiver record (kss_report_receiver.enrolment_id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "type": "integer"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "documents": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ReportReceiver object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "enrolment_id": {
                                            "type": "integer"
                                        },
                                        "value": {
                                            "type": "integer"
                                        },
                                        "note": {
                                            "type": "string"
                                        },
                                        "documents": {
                                            "type": "string"
                                        },
                                        "created_by": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "modified_by": {
                                            "type": "string"
                                        },
                                        "modified_at": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/report-receiver-logs": {
            "get": {
                "tags": [
                    "ReportReceiverLog"
                ],
                "summary": "Report Receiver Log Index API (kss_report_receiver_log)",
                "description": "Get List of Report Receiver Log Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **ReportReceiverLog** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "2"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **ReportReceiverLog** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -enrolment_id"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ReportReceiverLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ReportReceiverLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, action, enrolment_id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ReportReceiver records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReportReceiverLog"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/report-receiver-logs/{id}": {
            "get": {
                "tags": [
                    "ReportReceiverLog"
                ],
                "summary": "Report Receiver Log View API (kss_report_receiver_log)",
                "description": "Get A Specific ReportReceiver Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ReportReceiverLog record (kss_report_receiver_log.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **ReportReceiverLog** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **ReportReceiverLog**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReportReceiverLog object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportReceiverLog"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Index API (kss_status)",
                "description": "Get List of Status Records",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Status** schema to\nfill in correct type of attribute, leave empty to return all.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "494"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Status** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -title"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id,title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Status records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Create API (kss_status)",
                "description": "Create a specific Status",
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    },
                                    "parent_status_id": {
                                        "type": "integer"
                                    },
                                    "settings": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "parent_status_id": {
                                            "type": "integer"
                                        },
                                        "settings": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses/{id}": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status View API (kss_status)",
                "description": "Get A Specific Status Record",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (EA) AND ADDITIONAL ATTRIBUTES (AA)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. Leave empty to return all attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                            "type": "string",
                            "example": "id, title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Update API (kss_status)",
                "description": "Update a specific Status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "Payload Request body object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    },
                                    "parent_status_id": {
                                        "type": "integer"
                                    },
                                    "settings": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Status object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "reference": {
                                            "type": "string"
                                        },
                                        "parent_status_id": {
                                            "type": "integer"
                                        },
                                        "settings": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Status"
                ],
                "summary": "Status Delete API (kss_status)",
                "description": "Delete a specific Status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the Status record (kss_status.id)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NULL object"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/v1/statuses/search": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Status search API (kss_status)",
                "description": "Search Status",
                "parameters": [
                    {
                        "name": "_filters",
                        "in": "query",
                        "description": "Options to filter records, Please reference to **Status** schema to\nfill in correct type of attribute, leave empty to return empty object.\n *ONLY ACCEPT ATTRIBUTES AND EXTRA ATTRIBUTES (EA)*",
                        "required": false,
                        "style": "deepObject",
                        "schema": {
                            "description": "Condition to filter",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "494"
                                }
                            },
                            "type": "object"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Limit the number of result list in one page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort returned records based on some specific attributes, separated by a comma,\nput a subtract symbol (-) before a attribute for DESC sort or don't put anything\nfor ASC sort, please reference to **Status** schema to get correct attributes.\n *ONLY ACCEPT ATTRIBUTES*",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "id, -title"
                        }
                    },
                    {
                        "name": "_withs[]",
                        "in": "query",
                        "description": "List of related objects to be returned with the main object.\nPlease reference to **Status** to get list of extra attributes.\n *ONLY ACCEPT EXTRA ATTRIBUTES (MEF) AND ADDITIONAL ATTRIBUTES (AEF)*",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Options to return only some desired attributes. Set up by a list of\nspecific attributes separate by a comma. Please reference to **Status**\nto get right attributes. *ACEPT ALL TYPE OF ATTRIBUTES*",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "id, title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Status records with pagination information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        },
                                        "_links": {
                                            "properties": {
                                                "self": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "next": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last": {
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "_meta": {
                                            "properties": {
                                                "totalCount": {
                                                    "type": "integer"
                                                },
                                                "pageCount": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ApplicationPartner": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "business_id": {
                        "type": "integer"
                    },
                    "counsellor_id": {
                        "type": "integer"
                    },
                    "liaison_id": {
                        "type": "integer"
                    },
                    "is_main_agent": {
                        "type": "integer"
                    },
                    "partner_type": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "liaisonContacts": {
                        "description": "Extra field (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartnerContact"
                        }
                    },
                    "counsellorContacts": {
                        "description": "Extra field (EA)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartnerContact"
                        }
                    }
                },
                "type": "object"
            },
            "AuditTrail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "entry_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "model_id": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string"
                    },
                    "old_value": {
                        "type": "string"
                    },
                    "new_value": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Configuration": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "config_name": {
                        "type": "string"
                    },
                    "config_value": {
                        "type": "string"
                    },
                    "config_group": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Document": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "reference_id": {
                        "type": "integer"
                    },
                    "reference_type": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    }
                },
                "type": "object"
            },
            "EPortfolio": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "completed": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "enrolment": {
                        "$ref": "#/components/schemas/Enrolment"
                    }
                },
                "type": "object"
            },
            "Enrolment": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "student_uuid": {
                        "type": "string"
                    },
                    "application_id": {
                        "type": "integer"
                    },
                    "payment_status": {
                        "type": "integer"
                    },
                    "payment_status_date": {
                        "type": "string"
                    },
                    "immigration_status": {
                        "type": "integer"
                    },
                    "immigration_status_date": {
                        "type": "string"
                    },
                    "application_status_title": {
                        "type": "string"
                    },
                    "application_status_date": {
                        "type": "string"
                    },
                    "immigration_category": {
                        "type": "integer"
                    },
                    "application_university_email": {
                        "type": "string"
                    },
                    "application_university_id": {
                        "type": "string"
                    },
                    "application_second_university_id": {
                        "type": "string"
                    },
                    "have_second_agent": {
                        "type": "string"
                    },
                    "enrol_date": {
                        "type": "string"
                    },
                    "enrolment_status": {
                        "type": "integer"
                    },
                    "status_reason": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "college_country": {
                        "type": "string"
                    },
                    "institution_id": {
                        "type": "integer"
                    },
                    "institution_name": {
                        "type": "string"
                    },
                    "program_id": {
                        "type": "integer"
                    },
                    "program_name": {
                        "type": "string"
                    },
                    "program_start_date": {
                        "type": "string"
                    },
                    "program_end_date": {
                        "type": "string"
                    },
                    "program_intake_id": {
                        "type": "integer"
                    },
                    "intake_month_year": {
                        "type": "string"
                    },
                    "progression_institution_id": {
                        "type": "integer"
                    },
                    "season_pid": {
                        "type": "integer"
                    },
                    "entry_level_pid": {
                        "type": "integer"
                    },
                    "award_id": {
                        "type": "integer"
                    },
                    "award_title": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    },
                    "tutor_uuid": {
                        "type": "string"
                    },
                    "attendance_warning": {
                        "type": "string"
                    },
                    "attendance_warning_posted": {
                        "type": "string"
                    },
                    "enrolment_confirmed": {
                        "type": "string"
                    },
                    "learning_mode": {
                        "type": "string"
                    },
                    "applicationPartners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationPartner"
                        }
                    },
                    "enrolmentStatus": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "reportReceiver": {
                        "$ref": "#/components/schemas/ReportReceiver"
                    },
                    "statusReason": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "paymentStatus": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "immigrationStatus": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "enrolmentStatusLogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnrolmentStatusLog"
                        }
                    },
                    "policeRegistrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PoliceRegistration"
                        }
                    }
                },
                "type": "object"
            },
            "EnrolmentStatusLog": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "old_status_id": {
                        "type": "integer"
                    },
                    "new_status_id": {
                        "type": "integer"
                    },
                    "reason_id": {
                        "type": "string"
                    },
                    "status_reference": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "note": {
                        "type": "string"
                    },
                    "old_reason_id": {
                        "type": "integer"
                    },
                    "enrolment": {
                        "$ref": "#/components/schemas/Enrolment"
                    },
                    "reason": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "oldStatus": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "newStatus": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "oldReason": {
                        "$ref": "#/components/schemas/Status"
                    }
                },
                "type": "object"
            },
            "PartnerContact": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "partner_id": {
                        "type": "integer"
                    },
                    "contact_id": {
                        "type": "integer"
                    },
                    "contact_type": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PoliceRegistration": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "status_id": {
                        "type": "integer"
                    },
                    "reason_id": {
                        "type": "integer"
                    },
                    "appointment_date": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_by": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "modified_at": {
                        "type": "string",
                        "example": "kss.admin@yopmail.com"
                    },
                    "note": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportReceiver": {
                "properties": {
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "modified_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportReceiverLog": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "action": {
                        "type": "string"
                    },
                    "enrolment_id": {
                        "type": "integer"
                    },
                    "old_value": {
                        "type": "string"
                    },
                    "new_value": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Status": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "parent_status_id": {
                        "type": "integer"
                    },
                    "settings": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "description": "logged user token, You can got that one from KSS3 application",
                "name": "iPlanetDirectoryPro",
                "in": "header"
            }
        }
    },
    "externalDocs": {
        "description": "Yii2 Rest document for more information about 'fields, _withs' parameter below",
        "url": "https://www.yiiframework.com/doc/guide/2.0/en/rest-resources"
    }
}